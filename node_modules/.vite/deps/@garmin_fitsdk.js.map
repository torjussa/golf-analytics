{
  "version": 3,
  "sources": ["../../@garmin/fitsdk/src/crc-calculator.js", "../../@garmin/fitsdk/src/accumulator.js", "../../@garmin/fitsdk/src/fit.js", "../../@garmin/fitsdk/src/bit-stream.js", "../../@garmin/fitsdk/src/utils.js", "../../@garmin/fitsdk/src/utils-hr-mesg.js", "../../@garmin/fitsdk/src/profile.js", "../../@garmin/fitsdk/src/utils-memo-glob.js", "../../@garmin/fitsdk/src/utils-internal.js", "../../@garmin/fitsdk/src/stream.js", "../../@garmin/fitsdk/src/decoder.js", "../../@garmin/fitsdk/src/mesg-definition.js", "../../@garmin/fitsdk/src/output-stream.js", "../../@garmin/fitsdk/src/encoder.js"],
  "sourcesContent": ["/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nconst crcTable = [\n    0x0000, 0xCC01, 0xD801, 0x1400, 0xF001, 0x3C00, 0x2800, 0xE401,\n    0xA001, 0x6C00, 0x7800, 0xB401, 0x5000, 0x9C01, 0x8801, 0x4400\n]\n\nclass CrcCalculator {\n    #crc = 0;\n\n    constructor() {\n    }\n\n    get crc() {\n        return this.#crc;\n    }\n\n    #updateCRC(value) {\n        // compute checksum of lower four bits of byte\n        let tmp = crcTable[this.#crc & 0xF];\n        this.#crc = (this.#crc >> 4) & 0x0FFF;\n        this.#crc = this.#crc ^ tmp ^ crcTable[value & 0xF];\n\n        // compute checksum of upper four bits of byte\n        tmp = crcTable[this.#crc & 0xF];\n        this.#crc = (this.#crc >> 4) & 0x0FFF;\n        this.#crc = this.#crc ^ tmp ^ crcTable[(value >> 4) & 0xF];\n\n        return this.#crc;\n    }\n\n    addBytes(buf, start, end) {\n        for (let i = start; i < end; i++) {\n            this.#crc = this.#updateCRC(buf[i]);\n        }\n\n        return this.#crc;\n    }\n\n    static calculateCRC(buf, start, end) {\n        const crcCalculator = new CrcCalculator();\n        return crcCalculator.addBytes(buf, start, end);\n    }\n}\n\nexport default CrcCalculator;", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass AccumulatedField {\n    #accumulatedValue = 0;\n    #lastValue = 0;\n\n    constructor(value) {\n        this.#accumulatedValue = value;\n        this.#lastValue = value;\n    }\n\n    accumulate(value, bits) {\n        const mask = (1 << bits) - 1;\n\n        this.#accumulatedValue += (value - this.#lastValue) & mask;\n        this.#lastValue = value;\n\n        return this.#accumulatedValue;\n    }\n}\n\nclass Accumulator {\n    #messages = {};\n\n    createAccumulatedField(mesgNum, fieldNum, value) {\n        const accumualtedField = new AccumulatedField(value);\n\n        if (this.#messages[mesgNum] == null) {\n            this.#messages[mesgNum] = {};\n        }\n\n        this.#messages[mesgNum][fieldNum] = accumualtedField;\n\n        return accumualtedField;\n    }\n\n    accumulate(mesgNum, fieldNum, value, bits) {\n        let accumualtedField = this.#messages[mesgNum]?.[fieldNum];\n        \n        if(accumualtedField == null) {\n            accumualtedField = this.createAccumulatedField(mesgNum, fieldNum, value);\n        }\n\n        return accumualtedField.accumulate(value, bits);\n    }\n}\n\nexport default Accumulator;\n", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * FIT Base Type enum\n */\nconst BaseType = {\n    ENUM: 0x00,\n    SINT8: 0x01,\n    UINT8: 0x02,\n    SINT16: 0x83,\n    UINT16: 0x84,\n    SINT32: 0x85,\n    UINT32: 0x86,\n    STRING: 0x07,\n    FLOAT32: 0x88,\n    FLOAT64: 0x89,\n    UINT8Z: 0x0A,\n    UINT16Z: 0x8B,\n    UINT32Z: 0x8C,\n    BYTE: 0x0D,\n    SINT64: 0x8E,\n    UINT64: 0x8F,\n    UINT64Z: 0x90\n};\n\nconst BaseTypeDefinitions = {\n    0x00: { size: 1, type: BaseType.ENUM, invalid: 0xFF },\n    0x01: { size: 1, type: BaseType.SINT8, invalid: 0x7F },\n    0x02: { size: 1, type: BaseType.UINT8, invalid: 0xFF },\n    0x83: { size: 2, type: BaseType.SINT16, invalid: 0x7FFF },\n    0x84: { size: 2, type: BaseType.UINT16, invalid: 0xFFFF },\n    0x85: { size: 4, type: BaseType.SINT32, invalid: 0x7FFFFFFF },\n    0x86: { size: 4, type: BaseType.UINT32, invalid: 0xFFFFFFFF },\n    0x07: { size: 1, type: BaseType.STRING, invalid: 0x00 },\n    0x88: { size: 4, type: BaseType.FLOAT32, invalid: 0xFFFFFFFF },\n    0x89: { size: 8, type: BaseType.FLOAT64, invalid: 0xFFFFFFFFFFFFFFFF },\n    0x0A: { size: 1, type: BaseType.UINT8Z, invalid: 0x00 },\n    0x8B: { size: 2, type: BaseType.UINT16Z, invalid: 0x0000 },\n    0x8C: { size: 4, type: BaseType.UINT32Z, invalid: 0x00000000 },\n    0x0D: { size: 1, type: BaseType.BYTE, invalid: 0xFF },\n    0x8E: { size: 8, type: BaseType.SINT64, invalid: 0x7FFFFFFFFFFFFFFF },\n    0x8F: { size: 8, type: BaseType.UINT64, invalid: 0xFFFFFFFFFFFFFFFF },\n    0x90: { size: 8, type: BaseType.UINT64Z, invalid: 0x0000000000000000 },\n};\n\nconst NumericFieldTypes = [\n    \"sint8\",\n    \"uint8\",\n    \"sint16\",\n    \"uint16\",\n    \"sint32\",\n    \"uint32\",\n    \"float32\",\n    \"float64\",\n    \"uint8z\",\n    \"uint16z\",\n    \"uint32z\",\n    \"byte\",\n    \"sint64\",\n    \"uint64\",\n    \"uint64z\"\n];\n\nconst FloatingPointFieldTypes = [\n    \"float32\",\n    \"float64\",\n];\n\nconst FieldTypeToBaseType = {\n    \"enum\": BaseType.UINT8,\n    \"sint8\": BaseType.SINT8,\n    \"uint8\": BaseType.UINT8,\n    \"sint16\": BaseType.SINT16,\n    \"uint16\": BaseType.UINT16,\n    \"sint32\": BaseType.SINT32,\n    \"uint32\": BaseType.UINT32,\n    \"string\": BaseType.STRING,\n    \"float32\": BaseType.FLOAT32,\n    \"float64\": BaseType.FLOAT64,\n    \"uint8z\": BaseType.UINT8Z,\n    \"uint16z\": BaseType.UINT16Z,\n    \"uint32z\": BaseType.UINT32Z,\n    \"byte\": BaseType.BYTE,\n    \"sint64\": BaseType.SINT64,\n    \"uint64\": BaseType.UINT64,\n    \"uint64z\": BaseType.UINT64Z\n};\n\nconst BaseTypeToFieldType = {\n    [BaseType.ENUM]: \"enum\",\n    [BaseType.SINT8]: \"sint8\",\n    [BaseType.UINT8]: \"uint8\",\n    [BaseType.SINT16]: \"sint16\",\n    [BaseType.UINT16]: \"uint16\",\n    [BaseType.SINT32]: \"sint32\",\n    [BaseType.UINT32]: \"uint32\",\n    [BaseType.STRING]: \"string\",\n    [BaseType.FLOAT32]: \"float32\",\n    [BaseType.FLOAT64]: \"float64\",\n    [BaseType.UINT8Z]: \"uint8z\",\n    [BaseType.UINT16Z]: \"uint16z\",\n    [BaseType.UINT32Z]: \"uint32z\",\n    [BaseType.BYTE]: \"byte\",\n    [BaseType.SINT64]: \"sint64\",\n    [BaseType.UINT64]: \"uint64\",\n    [BaseType.UINT64Z]: \"uint64z\",\n};\n\nconst isNullOrUndefined = (obj) => {\n    return obj == null;\n};\n\nconst isObject = (obj) => {\n    return typeof obj === \"object\";\n};\n\nconst isBoolean = (obj) => {\n    return \"boolean\" === typeof obj;\n};\n\nconst isDate = (obj) => {\n    return typeof obj === \"object\" && obj instanceof Date;\n};\n\nconst isString = (obj) => {\n    return typeof obj === \"string\";\n};\n\nconst isNumeric = (obj) => {\n    return !isNaN(parseFloat(obj)) && isFinite(obj);\n};\n\nconst isNotNumberStringDateOrBoolean = (obj) => {\n    return !isNumberStringDateOrBoolean(obj);\n};\n\nconst isNumberStringDateOrBoolean = (obj) => {\n    if (isNullOrUndefined(obj)) {\n        return false;\n    }\n\n    if (!isDate(obj) && !isString(obj) && !isNumeric(obj) && !isBoolean(obj)) {\n        return false;\n    }\n\n    return true;\n};\n\nexport default {\n    BaseType,\n    BaseTypeDefinitions,\n    NumericFieldTypes,\n    FloatingPointFieldTypes,\n    FieldTypeToBaseType,\n    BaseTypeToFieldType,\n    isNullOrUndefined,\n    isObject,\n    isBoolean,\n    isDate,\n    isString,\n    isNumeric,\n    isNumberStringDateOrBoolean,\n    isNotNumberStringDateOrBoolean,\n    MAX_FIELD_SIZE: 255,\n    FIELD_DEFAULT_SCALE: 1,\n    FIELD_DEFAULT_OFFSET: 0,\n    MESG_DEFINITION_MASK: 0x40,\n    LOCAL_MESG_NUM_MASK: 0x0F,\n    ARCH_LITTLE_ENDIAN: 0x00,\n    DEV_DATA_MASK: 0x20,\n};\n", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nimport FIT from \"./fit.js\";\n\nclass BitStream {\n    #array = null;\n    #currentArrayPosition = 0;\n    #bitPerPosition = 0;\n    #currentByte = 0;\n    #currentBit = 0;\n    #bitsAvailable = 0;\n\n    constructor(data, baseType = FIT.BaseType.UINT8) {\n        this.#array = Array.isArray(data) ? data : [data];\n        const baseTypeSize = FIT.BaseTypeDefinitions[baseType].size;\n        this.#bitPerPosition = baseTypeSize * 8;\n        this.reset();\n    }\n\n    get bitsAvailable() {\n        return this.#bitsAvailable;\n    }\n\n    get hasBitsAvailable() {\n        return this.#bitsAvailable > 0;\n    }\n\n    reset() {\n        this.#currentArrayPosition = 0;\n        this.#bitsAvailable = this.#bitPerPosition * this.#array.length;\n        this.#nextByte();\n    }\n\n    readBit() {\n        if (!this.hasBitsAvailable) {\n            this.#throwError();\n        }\n\n        if (this.#currentBit >= this.#bitPerPosition) {\n            this.#nextByte();\n        }\n\n        const bit = this.#currentByte & 0x01;\n        this.#currentByte = this.#currentByte >> 1;\n        this.#currentBit++;\n        this.#bitsAvailable--;\n\n        return bit;\n    }\n\n    readBits(nBitsToRead) {\n        let value = 0n;\n\n        for (let i = 0n; i < nBitsToRead; i++) {\n            value |= BigInt(this.readBit()) << i;\n        }\n\n        return Number(value);\n    }\n\n    #nextByte() {\n        if (this.#currentArrayPosition >= this.#array.length) {\n            this.#throwError();\n        }\n\n        this.#currentByte = this.#array[this.#currentArrayPosition++];\n        this.#currentBit = 0;\n    }\n\n    #throwError(error = \"\") {\n        throw Error(\"FIT Runtime Error no bits available.\");\n    }\n}\n\nexport default BitStream;\n", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nimport FIT from \"./fit.js\";\n\n/**\n * The millisecond offset between UNIX and FIT Epochs (631065600000).\n * @const {number}\n */\nconst FIT_EPOCH_MS = 631065600000;\n\n/**\n * Convert a FIT DateTime to a JavaScript Date\n * @param {number} datetime - Seconds since FIT EPOCH\n * @returns {Date} A JavaScript Date object\n */\nconst convertDateTimeToDate = (datetime) => {\n    return new Date((datetime ?? 0) * 1000 + FIT_EPOCH_MS);\n};\n\n/**\n * Convert a JavaScript Date to a FIT DateTime\n * @param {Date} A JavaScript Date object\n * @return {number} datetime - Seconds since FIT EPOCH\n */\nconst convertDateToDateTime = (date) => {\n    return (date.getTime() - FIT_EPOCH_MS) / 1000;\n};\n\nexport default {\n    FIT_EPOCH_MS,\n    convertDateTimeToDate,\n    convertDateToDateTime,\n    FitBaseType: FIT.BaseType,\n    BaseTypeToFieldType: FIT.BaseTypeToFieldType,\n    FieldTypeToBaseType: FIT.FieldTypeToBaseType,\n};\n", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nimport Utils from \"./utils.js\";\n\nconst mergeHeartRates = (hrMesgs, recordMesgs) => {\n\n    if (hrMesgs == null || recordMesgs == null ||\n        hrMesgs.length == 0 || recordMesgs.length == 0) {\n        return;\n    }\n\n    const heartrates = expandHeartRates(hrMesgs);\n\n    let heartrateIndex = 0;\n    let recordRangeStartTime = null;\n\n    for (let i = 0; i < recordMesgs.length; ++i) {\n        const recordMesg = recordMesgs[i];\n\n        let hrSum = 0;\n        let hrSumCount = 0;\n\n        const recordRangeEndTime = secondsSinceFitEpoch(recordMesg.timestamp);\n\n        if (recordRangeStartTime == null) {\n            recordRangeStartTime = recordRangeEndTime;\n        }\n\n        if (recordRangeStartTime === recordRangeEndTime) {\n            recordRangeStartTime--;\n            heartrateIndex = (heartrateIndex >= 1) ? heartrateIndex - 1 : 0;\n        }\n\n        let findingInRangeHrMesgs = true;\n        while (findingInRangeHrMesgs && (heartrateIndex < heartrates.length)) {\n\n            const heartrate = heartrates[heartrateIndex];\n\n            // Check if the heartrate timestamp is gt record start time\n            // and if the heartrate timestamp is lte to record end time\n            if (heartrate.timestamp > recordRangeStartTime\n                && heartrate.timestamp <= recordRangeEndTime) {\n                hrSum += heartrate.heartRate;\n                hrSumCount++;\n            }\n            // Check if the heartrate timestamp exceeds the record time\n            else if (heartrate.timestamp > recordRangeEndTime) {\n                findingInRangeHrMesgs = false;\n\n                if (hrSumCount > 0) {\n                    // Update record's heart rate value\n                    const avgHR = Math.round(hrSum / hrSumCount);\n                    recordMesg.heartRate = avgHR;\n\n                }\n                // Reset HR average accumulators\n                hrSum = 0;\n                hrSumCount = 0;\n\n                recordRangeStartTime = recordRangeEndTime;\n\n                // Breaks out of findingInRangeHrMesgs while loop w/o incrementing heartrateIndex\n                break;\n            }\n\n            heartrateIndex++;\n        }\n    }\n}\n\nconst expandHeartRates = (hrMesgs) => {\n    const GAP_INCREMENT_MILLISECONDS = 250;\n    const GAP_INCREMENT_SECONDS = GAP_INCREMENT_MILLISECONDS / 1000.0;\n    const GAP_MAX_MILLISECONDS = 5000;\n    const GAP_MAX_STEPS = GAP_MAX_MILLISECONDS / GAP_INCREMENT_MILLISECONDS;\n\n    if (hrMesgs == null || hrMesgs.length == 0) {\n        return [];\n    }\n\n    let anchorEventTimestamp = 0.0;\n    let anchorTimestamp = null;\n\n    const heartrates = [];\n    hrMesgs.forEach(hrMesg => {\n        if (hrMesg == null) {\n            throwError(\"HR mesg must not be null\");\n        }\n\n        const eventTimestamps = Array.isArray(hrMesg.eventTimestamp) ? hrMesg.eventTimestamp : [hrMesg.eventTimestamp];\n        const filteredBpms = Array.isArray(hrMesg.filteredBpm) ? hrMesg.filteredBpm : [hrMesg.filteredBpm];\n\n        // Update HR timestamp anchor, if present\n        if (hrMesg.timestamp != null) {\n            anchorTimestamp = secondsSinceFitEpoch(hrMesg.timestamp);\n\n            if (hrMesg.fractionalTimestamp != null) {\n                anchorTimestamp += hrMesg.fractionalTimestamp;\n            }\n\n            if (eventTimestamps.length == 1) {\n                anchorEventTimestamp = eventTimestamps[0];\n            } else {\n                throwError(\"anchor HR mesg must have 1 event_timestamp\");\n            }\n        }\n\n        if (anchorTimestamp == null || anchorEventTimestamp == null) {\n            // We cannot process any HR messages if we have not received a timestamp anchor\n            throwError(\"no anchor timestamp received in a HR mesg before delta HR mesgs\");\n        } else if (eventTimestamps.length != filteredBpms.length) {\n            throwError(\"HR mesg with mismatching event timestamp and filtered bpm\");\n        }\n\n        for (let i = 0; i < eventTimestamps.length; i++) {\n            let eventTimestamp = eventTimestamps[i];\n\n            // Check to see if the event timestamp rolled over\n            if (eventTimestamp < anchorEventTimestamp) {\n                if ((anchorEventTimestamp - eventTimestamp) > (0x400000)) {\n                    eventTimestamp += (0x400000);\n                } else {\n                    throwError(\"anchor event_timestamp is greater than subsequent event_timestamp. This does not allow for correct delta calculation.\");\n                }\n            }\n\n            const currentHr = { timestamp: anchorTimestamp, heartRate: filteredBpms[i] };\n            currentHr.timestamp += (eventTimestamp - anchorEventTimestamp);\n\n            // Carry the previous HR value forward across the gap to the current\n            // HR value for up to 5 Seconds (5000ms) in 250ms increments\n            if (heartrates.length > 0) {\n                const previousHR = heartrates[heartrates.length - 1];\n                let gapInMilliseconds = Math.abs(currentHr.timestamp - previousHR.timestamp) * 1000;\n                let step = 1;\n                while (gapInMilliseconds > GAP_INCREMENT_MILLISECONDS && step <= GAP_MAX_STEPS) {\n                    const gapHR = { timestamp: previousHR.timestamp, heartRate: previousHR.heartRate };\n                    gapHR.timestamp += (GAP_INCREMENT_SECONDS * step);\n                    heartrates.push(gapHR);\n\n                    gapInMilliseconds -= GAP_INCREMENT_MILLISECONDS;\n                    step++;\n                }\n            }\n\n            heartrates.push(currentHr);\n        }\n    });\n\n    return heartrates;\n}\n\nconst secondsSinceFitEpoch = (timestamp) => {\n    if (timestamp instanceof Date) {\n        return (timestamp.getTime() - Utils.FIT_EPOCH_MS) / 1000;\n    }\n\n    return timestamp;\n}\n\nconst throwError = (error = \"\") => {\n    throw Error(`FIT Runtime Error ${error}`.trimEnd());\n}\n\nexport default { mergeHeartRates, expandHeartRates };", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nconst Profile = {\n    version: {\n        major: 21,\n        minor: 178,\n        patch: 0,\n        type: \"Release\"\n    },\n    CommonFields: {\n        PartIndex: 250,\n        Timestamp: 253,\n        MessageIndex: 254\n    },\n    messages: {\n        0: {\n            num: 0, // Must be first message in file.\n            name: \"fileId\",\n            messagesKey: \"fileIdMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"type\",\n                type: \"file\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"manufacturer\",\n                type: \"manufacturer\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"product\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"faveroProduct\", \n                        type: \"faveroProduct\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"manufacturer\", value: 263 },\n                        ],\n                    },\n                   {\n                        name: \"garminProduct\", \n                        type: \"garminProduct\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"manufacturer\", value: 1 },\n                            { name: \"manufacturer\", value: 15 },\n                            { name: \"manufacturer\", value: 13 },\n                            { name: \"manufacturer\", value: 89 },\n                        ],\n                    },\n                   ]\n            },\n            3: {\n                num: 3,\n                name: \"serialNumber\",\n                type: \"uint32z\",\n                baseType: \"uint32z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Only set for files that are can be created/erased.\n                name: \"timeCreated\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // Only set for files that are not created/erased.\n                name: \"number\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Optional free form string to indicate the devices name or model\n                name: \"productName\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        49: {\n            num: 49,\n            name: \"fileCreator\",\n            messagesKey: \"fileCreatorMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"softwareVersion\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"hardwareVersion\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        162: {\n            num: 162,\n            name: \"timestampCorrelation\",\n            messagesKey: \"timestampCorrelationMesgs\",\n            fields: {\n            253: {\n                num: 253, // Whole second part of UTC timestamp at the time the system timestamp was recorded.\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Fractional part of the UTC timestamp at the time the system timestamp was recorded.\n                name: \"fractionalTimestamp\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 32768,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Whole second part of the system timestamp\n                name: \"systemTimestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Fractional part of the system timestamp\n                name: \"fractionalSystemTimestamp\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 32768,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // timestamp epoch expressed in local time used to convert timestamps to local time\n                name: \"localTimestamp\",\n                type: \"localDateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Millisecond part of the UTC timestamp at the time the system timestamp was recorded.\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // Millisecond part of the system timestamp\n                name: \"systemTimestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        35: {\n            num: 35,\n            name: \"software\",\n            messagesKey: \"softwareMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"version\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"partNumber\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        106: {\n            num: 106,\n            name: \"slaveDevice\",\n            messagesKey: \"slaveDeviceMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"manufacturer\",\n                type: \"manufacturer\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"product\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"faveroProduct\", \n                        type: \"faveroProduct\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"manufacturer\", value: 263 },\n                        ],\n                    },\n                   {\n                        name: \"garminProduct\", \n                        type: \"garminProduct\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"manufacturer\", value: 1 },\n                            { name: \"manufacturer\", value: 15 },\n                            { name: \"manufacturer\", value: 13 },\n                            { name: \"manufacturer\", value: 89 },\n                        ],\n                    },\n                   ]\n            },\n        },\n     },\n        1: {\n            num: 1,\n            name: \"capabilities\",\n            messagesKey: \"capabilitiesMesgs\",\n            fields: {\n            0: {\n                num: 0, // Use language_bits_x types where x is index of array.\n                name: \"languages\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Use sport_bits_x types where x is index of array.\n                name: \"sports\",\n                type: \"sportBits0\",\n                baseType: \"uint8z\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            21: {\n                num: 21,\n                name: \"workoutsSupported\",\n                type: \"workoutCapabilities\",\n                baseType: \"uint32z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            23: {\n                num: 23,\n                name: \"connectivitySupported\",\n                type: \"connectivityCapabilities\",\n                baseType: \"uint32z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        37: {\n            num: 37,\n            name: \"fileCapabilities\",\n            messagesKey: \"fileCapabilitiesMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"type\",\n                type: \"file\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"flags\",\n                type: \"fileFlags\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"directory\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"maxCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"maxSize\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bytes\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        38: {\n            num: 38,\n            name: \"mesgCapabilities\",\n            messagesKey: \"mesgCapabilitiesMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"file\",\n                type: \"file\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"mesgNum\",\n                type: \"mesgNum\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"countType\",\n                type: \"mesgCount\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"count\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"numPerFile\", \n                        type: \"uint16\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"countType\", value: 0 },\n                        ],\n                    },\n                   {\n                        name: \"maxPerFile\", \n                        type: \"uint16\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"countType\", value: 1 },\n                        ],\n                    },\n                   {\n                        name: \"maxPerFileType\", \n                        type: \"uint16\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"countType\", value: 2 },\n                        ],\n                    },\n                   ]\n            },\n        },\n     },\n        39: {\n            num: 39,\n            name: \"fieldCapabilities\",\n            messagesKey: \"fieldCapabilitiesMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"file\",\n                type: \"file\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"mesgNum\",\n                type: \"mesgNum\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"fieldNum\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"count\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        2: {\n            num: 2,\n            name: \"deviceSettings\",\n            messagesKey: \"deviceSettingsMesgs\",\n            fields: {\n            0: {\n                num: 0, // Index into time zone arrays.\n                name: \"activeTimeZone\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Offset from system time. Required to convert timestamp from system time to UTC.\n                name: \"utcOffset\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Offset from system time.\n                name: \"timeOffset\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Display mode for the time\n                name: \"timeMode\",\n                type: \"timeMode\",\n                baseType: \"enum\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // timezone offset in 1/4 hour increments\n                name: \"timeZoneOffset\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: true,\n                scale: 4,\n                offset: 0,\n                units: \"hr\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12, // Mode for backlight\n                name: \"backlightMode\",\n                type: \"backlightMode\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            36: {\n                num: 36, // Enabled state of the activity tracker functionality\n                name: \"activityTrackerEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            39: {\n                num: 39, // UTC timestamp used to set the devices clock and date\n                name: \"clockTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            40: {\n                num: 40, // Bitfield to configure enabled screens for each supported loop\n                name: \"pagesEnabled\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            46: {\n                num: 46, // Enabled state of the move alert\n                name: \"moveAlertEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            47: {\n                num: 47, // Display mode for the date\n                name: \"dateMode\",\n                type: \"dateMode\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            55: {\n                num: 55,\n                name: \"displayOrientation\",\n                type: \"displayOrientation\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            56: {\n                num: 56,\n                name: \"mountingSide\",\n                type: \"side\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            57: {\n                num: 57, // Bitfield to indicate one page as default for each supported loop\n                name: \"defaultPage\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            58: {\n                num: 58, // Minimum steps before an autosync can occur\n                name: \"autosyncMinSteps\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"steps\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            59: {\n                num: 59, // Minimum minutes before an autosync can occur\n                name: \"autosyncMinTime\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"minutes\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            80: {\n                num: 80, // Enable auto-detect setting for the lactate threshold feature.\n                name: \"lactateThresholdAutodetectEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            86: {\n                num: 86, // Automatically upload using BLE\n                name: \"bleAutoUploadEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            89: {\n                num: 89, // Helps to conserve battery by changing modes\n                name: \"autoSyncFrequency\",\n                type: \"autoSyncFrequency\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            90: {\n                num: 90, // Allows setting specific activities auto-activity detect enabled/disabled settings\n                name: \"autoActivityDetect\",\n                type: \"autoActivityDetect\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            94: {\n                num: 94, // Number of screens configured to display\n                name: \"numberOfScreens\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            95: {\n                num: 95, // Smart Notification display orientation\n                name: \"smartNotificationDisplayOrientation\",\n                type: \"displayOrientation\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            134: {\n                num: 134,\n                name: \"tapInterface\",\n                type: \"switch\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            174: {\n                num: 174, // Used to hold the tap threshold setting\n                name: \"tapSensitivity\",\n                type: \"tapSensitivity\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        3: {\n            num: 3,\n            name: \"userProfile\",\n            messagesKey: \"userProfileMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Used for Morning Report greeting\n                name: \"friendlyName\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"gender\",\n                type: \"gender\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"age\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"years\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"height\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"weight\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"kg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"language\",\n                type: \"language\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"elevSetting\",\n                type: \"displayMeasure\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"weightSetting\",\n                type: \"displayMeasure\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"restingHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"defaultMaxRunningHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"defaultMaxBikingHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"defaultMaxHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12,\n                name: \"hrSetting\",\n                type: \"displayHeart\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"speedSetting\",\n                type: \"displayMeasure\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14,\n                name: \"distSetting\",\n                type: \"displayMeasure\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            16: {\n                num: 16,\n                name: \"powerSetting\",\n                type: \"displayPower\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            17: {\n                num: 17,\n                name: \"activityClass\",\n                type: \"activityClass\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            18: {\n                num: 18,\n                name: \"positionSetting\",\n                type: \"displayPosition\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            21: {\n                num: 21,\n                name: \"temperatureSetting\",\n                type: \"displayMeasure\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            22: {\n                num: 22,\n                name: \"localId\",\n                type: \"userLocalId\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            23: {\n                num: 23,\n                name: \"globalId\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            28: {\n                num: 28, // Typical wake time\n                name: \"wakeTime\",\n                type: \"localtimeIntoDay\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            29: {\n                num: 29, // Typical bed time\n                name: \"sleepTime\",\n                type: \"localtimeIntoDay\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            30: {\n                num: 30,\n                name: \"heightSetting\",\n                type: \"displayMeasure\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            31: {\n                num: 31, // User defined running step length set to 0 for auto length\n                name: \"userRunningStepLength\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            32: {\n                num: 32, // User defined walking step length set to 0 for auto length\n                name: \"userWalkingStepLength\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            47: {\n                num: 47,\n                name: \"depthSetting\",\n                type: \"displayMeasure\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            49: {\n                num: 49,\n                name: \"diveCount\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        4: {\n            num: 4,\n            name: \"hrmProfile\",\n            messagesKey: \"hrmProfileMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"enabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"hrmAntId\",\n                type: \"uint16z\",\n                baseType: \"uint16z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"logHrv\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"hrmAntIdTransType\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        5: {\n            num: 5,\n            name: \"sdmProfile\",\n            messagesKey: \"sdmProfileMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"enabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"sdmAntId\",\n                type: \"uint16z\",\n                baseType: \"uint16z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"sdmCalFactor\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"odometer\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Use footpod for speed source instead of GPS\n                name: \"speedSource\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"sdmAntIdTransType\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Rollover counter that can be used to extend the odometer\n                name: \"odometerRollover\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        6: {\n            num: 6,\n            name: \"bikeProfile\",\n            messagesKey: \"bikeProfileMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"subSport\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"odometer\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"bikeSpdAntId\",\n                type: \"uint16z\",\n                baseType: \"uint16z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"bikeCadAntId\",\n                type: \"uint16z\",\n                baseType: \"uint16z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"bikeSpdcadAntId\",\n                type: \"uint16z\",\n                baseType: \"uint16z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"bikePowerAntId\",\n                type: \"uint16z\",\n                baseType: \"uint16z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"customWheelsize\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"autoWheelsize\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"bikeWeight\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"kg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"powerCalFactor\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12,\n                name: \"autoWheelCal\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"autoPowerZero\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14,\n                name: \"id\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            15: {\n                num: 15,\n                name: \"spdEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            16: {\n                num: 16,\n                name: \"cadEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            17: {\n                num: 17,\n                name: \"spdcadEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            18: {\n                num: 18,\n                name: \"powerEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            19: {\n                num: 19,\n                name: \"crankLength\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: -110,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            20: {\n                num: 20,\n                name: \"enabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            21: {\n                num: 21,\n                name: \"bikeSpdAntIdTransType\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            22: {\n                num: 22,\n                name: \"bikeCadAntIdTransType\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            23: {\n                num: 23,\n                name: \"bikeSpdcadAntIdTransType\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            24: {\n                num: 24,\n                name: \"bikePowerAntIdTransType\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            37: {\n                num: 37, // Rollover counter that can be used to extend the odometer\n                name: \"odometerRollover\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            38: {\n                num: 38, // Number of front gears\n                name: \"frontGearNum\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            39: {\n                num: 39, // Number of teeth on each gear 0 is innermost\n                name: \"frontGear\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            40: {\n                num: 40, // Number of rear gears\n                name: \"rearGearNum\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            41: {\n                num: 41, // Number of teeth on each gear 0 is innermost\n                name: \"rearGear\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            44: {\n                num: 44,\n                name: \"shimanoDi2Enabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        127: {\n            num: 127,\n            name: \"connectivity\",\n            messagesKey: \"connectivityMesgs\",\n            fields: {\n            0: {\n                num: 0, // Use Bluetooth for connectivity features\n                name: \"bluetoothEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Use Bluetooth Low Energy for connectivity features\n                name: \"bluetoothLeEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Use ANT for connectivity features\n                name: \"antEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"liveTrackingEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"weatherConditionsEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"weatherAlertsEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"autoActivityUploadEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"courseDownloadEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"workoutDownloadEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"gpsEphemerisDownloadEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"incidentDetectionEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12,\n                name: \"grouptrackEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        159: {\n            num: 159,\n            name: \"watchfaceSettings\",\n            messagesKey: \"watchfaceSettingsMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"mode\",\n                type: \"watchfaceMode\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"layout\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"digitalLayout\", \n                        type: \"digitalWatchfaceLayout\",\n                        baseType: \"enum\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"mode\", value: 0 },\n                        ],\n                    },\n                   {\n                        name: \"analogLayout\", \n                        type: \"analogWatchfaceLayout\",\n                        baseType: \"enum\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"mode\", value: 1 },\n                        ],\n                    },\n                   ]\n            },\n        },\n     },\n        188: {\n            num: 188,\n            name: \"ohrSettings\",\n            messagesKey: \"ohrSettingsMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"enabled\",\n                type: \"switch\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        216: {\n            num: 216,\n            name: \"timeInZone\",\n            messagesKey: \"timeInZoneMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"referenceMesg\",\n                type: \"mesgNum\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"referenceIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"timeInHrZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"timeInSpeedZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"timeInCadenceZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"timeInPowerZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"hrZoneHighBoundary\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"speedZoneHighBoundary\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"cadenceZoneHighBondary\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"powerZoneHighBoundary\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"hrCalcType\",\n                type: \"hrZoneCalc\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"maxHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12,\n                name: \"restingHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"thresholdHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14,\n                name: \"pwrCalcType\",\n                type: \"pwrZoneCalc\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            15: {\n                num: 15,\n                name: \"functionalThresholdPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        7: {\n            num: 7,\n            name: \"zonesTarget\",\n            messagesKey: \"zonesTargetMesgs\",\n            fields: {\n            1: {\n                num: 1,\n                name: \"maxHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"thresholdHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"functionalThresholdPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"hrCalcType\",\n                type: \"hrZoneCalc\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"pwrCalcType\",\n                type: \"pwrZoneCalc\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        12: {\n            num: 12,\n            name: \"sport\",\n            messagesKey: \"sportMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"subSport\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        8: {\n            num: 8,\n            name: \"hrZone\",\n            messagesKey: \"hrZoneMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"highBpm\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        53: {\n            num: 53,\n            name: \"speedZone\",\n            messagesKey: \"speedZoneMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"highValue\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        131: {\n            num: 131,\n            name: \"cadenceZone\",\n            messagesKey: \"cadenceZoneMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"highValue\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        9: {\n            num: 9,\n            name: \"powerZone\",\n            messagesKey: \"powerZoneMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"highValue\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        10: {\n            num: 10,\n            name: \"metZone\",\n            messagesKey: \"metZoneMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"highBpm\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"calories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"kcal / min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"fatCalories\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"kcal / min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        13: {\n            num: 13,\n            name: \"trainingSettings\",\n            messagesKey: \"trainingSettingsMesgs\",\n            fields: {\n            31: {\n                num: 31,\n                name: \"targetDistance\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            32: {\n                num: 32,\n                name: \"targetSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            33: {\n                num: 33,\n                name: \"targetTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            153: {\n                num: 153, // A more precise target speed field\n                name: \"preciseTargetSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        258: {\n            num: 258,\n            name: \"diveSettings\",\n            messagesKey: \"diveSettingsMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"model\",\n                type: \"tissueModelType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"gfLow\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"gfHigh\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"waterType\",\n                type: \"waterType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // Fresh water is usually 1000; salt water is usually 1025\n                name: \"waterDensity\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kg/m^3\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Typically 1.40\n                name: \"po2Warn\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Typically 1.60\n                name: \"po2Critical\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"po2Deco\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"safetyStopEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"bottomDepth\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"bottomTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12,\n                name: \"apneaCountdownEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"apneaCountdownTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14,\n                name: \"backlightMode\",\n                type: \"diveBacklightMode\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            15: {\n                num: 15,\n                name: \"backlightBrightness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            16: {\n                num: 16,\n                name: \"backlightTimeout\",\n                type: \"backlightTimeout\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            17: {\n                num: 17, // Time between surfacing and ending the activity\n                name: \"repeatDiveInterval\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            18: {\n                num: 18, // Time at safety stop (if enabled)\n                name: \"safetyStopTime\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            19: {\n                num: 19,\n                name: \"heartRateSourceType\",\n                type: \"sourceType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            20: {\n                num: 20,\n                name: \"heartRateSource\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"heartRateAntplusDeviceType\", \n                        type: \"antplusDeviceType\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"heartRateSourceType\", value: 1 },\n                        ],\n                    },\n                   {\n                        name: \"heartRateLocalDeviceType\", \n                        type: \"localDeviceType\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"heartRateSourceType\", value: 5 },\n                        ],\n                    },\n                   ]\n            },\n            21: {\n                num: 21, // Index of travel dive_gas message\n                name: \"travelGas\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            22: {\n                num: 22, // If low PO2 should be switched to automatically\n                name: \"ccrLowSetpointSwitchMode\",\n                type: \"ccrSetpointSwitchMode\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            23: {\n                num: 23, // Target PO2 when using low setpoint\n                name: \"ccrLowSetpoint\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            24: {\n                num: 24, // Depth to switch to low setpoint in automatic mode\n                name: \"ccrLowSetpointDepth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            25: {\n                num: 25, // If high PO2 should be switched to automatically\n                name: \"ccrHighSetpointSwitchMode\",\n                type: \"ccrSetpointSwitchMode\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            26: {\n                num: 26, // Target PO2 when using high setpoint\n                name: \"ccrHighSetpoint\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            27: {\n                num: 27, // Depth to switch to high setpoint in automatic mode\n                name: \"ccrHighSetpointDepth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            29: {\n                num: 29, // Type of gas consumption rate to display. Some values are only valid if tank volume is known.\n                name: \"gasConsumptionDisplay\",\n                type: \"gasConsumptionRateType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            30: {\n                num: 30, // Indicates whether the up key is enabled during dives\n                name: \"upKeyEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            35: {\n                num: 35, // Sounds and vibration enabled or disabled in-dive\n                name: \"diveSounds\",\n                type: \"tone\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            36: {\n                num: 36, // Usually 1.0/1.5/2.0 representing 3/4.5/6m or 10/15/20ft\n                name: \"lastStopMultiple\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            37: {\n                num: 37, // Indicates which guidelines to use for no-fly surface interval.\n                name: \"noFlyTimeMode\",\n                type: \"noFlyTimeMode\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        262: {\n            num: 262,\n            name: \"diveAlarm\",\n            messagesKey: \"diveAlarmMesgs\",\n            fields: {\n            254: {\n                num: 254, // Index of the alarm\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Depth setting (m) for depth type alarms\n                name: \"depth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Time setting (s) for time type alarms\n                name: \"time\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Enablement flag\n                name: \"enabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Alarm type setting\n                name: \"alarmType\",\n                type: \"diveAlarmType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Tone and Vibe setting for the alarm\n                name: \"sound\",\n                type: \"tone\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // Dive types the alarm will trigger on\n                name: \"diveTypes\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Alarm ID\n                name: \"id\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Show a visible pop-up for this alarm\n                name: \"popupEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Trigger the alarm on descent\n                name: \"triggerOnDescent\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9, // Trigger the alarm on ascent\n                name: \"triggerOnAscent\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10, // Repeat alarm each time threshold is crossed?\n                name: \"repeating\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11, // Ascent/descent rate (mps) setting for speed type alarms\n                name: \"speed\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"mps\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        393: {\n            num: 393,\n            name: \"diveApneaAlarm\",\n            messagesKey: \"diveApneaAlarmMesgs\",\n            fields: {\n            254: {\n                num: 254, // Index of the alarm\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Depth setting (m) for depth type alarms\n                name: \"depth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Time setting (s) for time type alarms\n                name: \"time\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Enablement flag\n                name: \"enabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Alarm type setting\n                name: \"alarmType\",\n                type: \"diveAlarmType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Tone and Vibe setting for the alarm.\n                name: \"sound\",\n                type: \"tone\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // Dive types the alarm will trigger on\n                name: \"diveTypes\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Alarm ID\n                name: \"id\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Show a visible pop-up for this alarm\n                name: \"popupEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Trigger the alarm on descent\n                name: \"triggerOnDescent\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9, // Trigger the alarm on ascent\n                name: \"triggerOnAscent\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10, // Repeat alarm each time threshold is crossed?\n                name: \"repeating\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11, // Ascent/descent rate (mps) setting for speed type alarms\n                name: \"speed\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"mps\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        259: {\n            num: 259,\n            name: \"diveGas\",\n            messagesKey: \"diveGasMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"heliumContent\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"oxygenContent\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"status\",\n                type: \"diveGasStatus\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"mode\",\n                type: \"diveGasMode\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        15: {\n            num: 15,\n            name: \"goal\",\n            messagesKey: \"goalMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"subSport\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"startDate\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"endDate\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"type\",\n                type: \"goal\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"value\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"repeat\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"targetValue\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"recurrence\",\n                type: \"goalRecurrence\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"recurrenceValue\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"enabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"source\",\n                type: \"goalSource\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        34: {\n            num: 34,\n            name: \"activity\",\n            messagesKey: \"activityMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Exclude pauses\n                name: \"totalTimerTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"numSessions\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"type\",\n                type: \"activity\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"event\",\n                type: \"event\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"eventType\",\n                type: \"eventType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // timestamp epoch expressed in local time, used to convert activity timestamps to local time\n                name: \"localTimestamp\",\n                type: \"localDateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"eventGroup\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        18: {\n            num: 18,\n            name: \"session\",\n            messagesKey: \"sessionMesgs\",\n            fields: {\n            254: {\n                num: 254, // Selected bit is set for the current session.\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            253: {\n                num: 253, // Sesson end time.\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // session\n                name: \"event\",\n                type: \"event\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // stop\n                name: \"eventType\",\n                type: \"eventType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"startTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"startPositionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"startPositionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"subSport\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Time (includes pauses)\n                name: \"totalElapsedTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Timer Time (excludes pauses)\n                name: \"totalTimerTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"totalDistance\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"totalCycles\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"cycles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"totalStrides\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"strides\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sport\", value: 1 },\n                            { name: \"sport\", value: 11 },\n                        ],\n                    },\n                   {\n                        name: \"totalStrokes\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"strokes\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sport\", value: 2 },\n                            { name: \"sport\", value: 5 },\n                            { name: \"sport\", value: 15 },\n                            { name: \"sport\", value: 37 },\n                        ],\n                    },\n                   ]\n            },\n            11: {\n                num: 11,\n                name: \"totalCalories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"totalFatCalories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14, // total_distance / total_timer_time\n                name: \"avgSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [1000, ],\n                offset: [0, ],\n                units: [\"m/s\", ],\n                bits: [16,],\n                    components: [\"124\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            15: {\n                num: 15,\n                name: \"maxSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [1000, ],\n                offset: [0, ],\n                units: [\"m/s\", ],\n                bits: [16,],\n                    components: [\"125\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            16: {\n                num: 16, // average heart rate (excludes pause time)\n                name: \"avgHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            17: {\n                num: 17,\n                name: \"maxHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            18: {\n                num: 18, // total_cycles / total_timer_time if non_zero_avg_cadence otherwise total_cycles / total_elapsed_time\n                name: \"avgCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"avgRunningCadence\", \n                        type: \"uint8\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"strides/min\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sport\", value: 1 },\n                        ],\n                    },\n                   ]\n            },\n            19: {\n                num: 19,\n                name: \"maxCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"maxRunningCadence\", \n                        type: \"uint8\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"strides/min\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sport\", value: 1 },\n                        ],\n                    },\n                   ]\n            },\n            20: {\n                num: 20, // total_power / total_timer_time if non_zero_avg_power otherwise total_power / total_elapsed_time\n                name: \"avgPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            21: {\n                num: 21,\n                name: \"maxPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            22: {\n                num: 22,\n                name: \"totalAscent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            23: {\n                num: 23,\n                name: \"totalDescent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            24: {\n                num: 24,\n                name: \"totalTrainingEffect\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            25: {\n                num: 25,\n                name: \"firstLapIndex\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            26: {\n                num: 26,\n                name: \"numLaps\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            27: {\n                num: 27,\n                name: \"eventGroup\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            28: {\n                num: 28,\n                name: \"trigger\",\n                type: \"sessionTrigger\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            29: {\n                num: 29, // North east corner latitude\n                name: \"necLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            30: {\n                num: 30, // North east corner longitude\n                name: \"necLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            31: {\n                num: 31, // South west corner latitude\n                name: \"swcLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            32: {\n                num: 32, // South west corner longitude\n                name: \"swcLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            33: {\n                num: 33, // # of lengths of swim pool\n                name: \"numLengths\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"lengths\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            34: {\n                num: 34,\n                name: \"normalizedPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            35: {\n                num: 35,\n                name: \"trainingStressScore\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"tss\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            36: {\n                num: 36,\n                name: \"intensityFactor\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"if\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            37: {\n                num: 37,\n                name: \"leftRightBalance\",\n                type: \"leftRightBalance100\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            38: {\n                num: 38,\n                name: \"endPositionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            39: {\n                num: 39,\n                name: \"endPositionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            41: {\n                num: 41,\n                name: \"avgStrokeCount\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"strokes/lap\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            42: {\n                num: 42,\n                name: \"avgStrokeDistance\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            43: {\n                num: 43,\n                name: \"swimStroke\",\n                type: \"swimStroke\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"swim_stroke\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            44: {\n                num: 44,\n                name: \"poolLength\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            45: {\n                num: 45,\n                name: \"thresholdPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            46: {\n                num: 46,\n                name: \"poolLengthUnit\",\n                type: \"displayMeasure\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            47: {\n                num: 47, // # of active lengths of swim pool\n                name: \"numActiveLengths\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"lengths\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            48: {\n                num: 48,\n                name: \"totalWork\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"J\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            49: {\n                num: 49,\n                name: \"avgAltitude\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [5, ],\n                offset: [500, ],\n                units: [\"m\", ],\n                bits: [16,],\n                    components: [\"126\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            50: {\n                num: 50,\n                name: \"maxAltitude\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [5, ],\n                offset: [500, ],\n                units: [\"m\", ],\n                bits: [16,],\n                    components: [\"128\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            51: {\n                num: 51,\n                name: \"gpsAccuracy\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            52: {\n                num: 52,\n                name: \"avgGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            53: {\n                num: 53,\n                name: \"avgPosGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            54: {\n                num: 54,\n                name: \"avgNegGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            55: {\n                num: 55,\n                name: \"maxPosGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            56: {\n                num: 56,\n                name: \"maxNegGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            57: {\n                num: 57,\n                name: \"avgTemperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            58: {\n                num: 58,\n                name: \"maxTemperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            59: {\n                num: 59,\n                name: \"totalMovingTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            60: {\n                num: 60,\n                name: \"avgPosVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            61: {\n                num: 61,\n                name: \"avgNegVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            62: {\n                num: 62,\n                name: \"maxPosVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            63: {\n                num: 63,\n                name: \"maxNegVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            64: {\n                num: 64,\n                name: \"minHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            65: {\n                num: 65,\n                name: \"timeInHrZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            66: {\n                num: 66,\n                name: \"timeInSpeedZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            67: {\n                num: 67,\n                name: \"timeInCadenceZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            68: {\n                num: 68,\n                name: \"timeInPowerZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            69: {\n                num: 69,\n                name: \"avgLapTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            70: {\n                num: 70,\n                name: \"bestLapIndex\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            71: {\n                num: 71,\n                name: \"minAltitude\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [5, ],\n                offset: [500, ],\n                units: [\"m\", ],\n                bits: [16,],\n                    components: [\"127\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            82: {\n                num: 82,\n                name: \"playerScore\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            83: {\n                num: 83,\n                name: \"opponentScore\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            84: {\n                num: 84,\n                name: \"opponentName\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            85: {\n                num: 85, // stroke_type enum used as the index\n                name: \"strokeCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            86: {\n                num: 86, // zone number used as the index\n                name: \"zoneCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            87: {\n                num: 87,\n                name: \"maxBallSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            88: {\n                num: 88,\n                name: \"avgBallSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            89: {\n                num: 89,\n                name: \"avgVerticalOscillation\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            90: {\n                num: 90,\n                name: \"avgStanceTimePercent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            91: {\n                num: 91,\n                name: \"avgStanceTime\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            92: {\n                num: 92, // fractional part of the avg_cadence\n                name: \"avgFractionalCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            93: {\n                num: 93, // fractional part of the max_cadence\n                name: \"maxFractionalCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            94: {\n                num: 94, // fractional part of the total_cycles\n                name: \"totalFractionalCycles\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"cycles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            95: {\n                num: 95, // Avg saturated and unsaturated hemoglobin\n                name: \"avgTotalHemoglobinConc\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 100,\n                offset: 0,\n                units: \"g/dL\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            96: {\n                num: 96, // Min saturated and unsaturated hemoglobin\n                name: \"minTotalHemoglobinConc\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 100,\n                offset: 0,\n                units: \"g/dL\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            97: {\n                num: 97, // Max saturated and unsaturated hemoglobin\n                name: \"maxTotalHemoglobinConc\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 100,\n                offset: 0,\n                units: \"g/dL\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            98: {\n                num: 98, // Avg percentage of hemoglobin saturated with oxygen\n                name: \"avgSaturatedHemoglobinPercent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 10,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            99: {\n                num: 99, // Min percentage of hemoglobin saturated with oxygen\n                name: \"minSaturatedHemoglobinPercent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 10,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            100: {\n                num: 100, // Max percentage of hemoglobin saturated with oxygen\n                name: \"maxSaturatedHemoglobinPercent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 10,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            101: {\n                num: 101,\n                name: \"avgLeftTorqueEffectiveness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            102: {\n                num: 102,\n                name: \"avgRightTorqueEffectiveness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            103: {\n                num: 103,\n                name: \"avgLeftPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            104: {\n                num: 104,\n                name: \"avgRightPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            105: {\n                num: 105,\n                name: \"avgCombinedPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            110: {\n                num: 110, // Sport name from associated sport mesg\n                name: \"sportProfileName\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            111: {\n                num: 111,\n                name: \"sportIndex\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            112: {\n                num: 112, // Total time spend in the standing position\n                name: \"timeStanding\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            113: {\n                num: 113, // Number of transitions to the standing state\n                name: \"standCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            114: {\n                num: 114, // Average platform center offset Left\n                name: \"avgLeftPco\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            115: {\n                num: 115, // Average platform center offset Right\n                name: \"avgRightPco\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            116: {\n                num: 116, // Average left power phase angles. Indexes defined by power_phase_type.\n                name: \"avgLeftPowerPhase\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            117: {\n                num: 117, // Average left power phase peak angles. Data value indexes defined by power_phase_type.\n                name: \"avgLeftPowerPhasePeak\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            118: {\n                num: 118, // Average right power phase angles. Data value indexes defined by power_phase_type.\n                name: \"avgRightPowerPhase\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            119: {\n                num: 119, // Average right power phase peak angles data value indexes defined by power_phase_type.\n                name: \"avgRightPowerPhasePeak\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            120: {\n                num: 120, // Average power by position. Data value indexes defined by rider_position_type.\n                name: \"avgPowerPosition\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            121: {\n                num: 121, // Maximum power by position. Data value indexes defined by rider_position_type.\n                name: \"maxPowerPosition\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            122: {\n                num: 122, // Average cadence by position. Data value indexes defined by rider_position_type.\n                name: \"avgCadencePosition\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            123: {\n                num: 123, // Maximum cadence by position. Data value indexes defined by rider_position_type.\n                name: \"maxCadencePosition\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            124: {\n                num: 124, // total_distance / total_timer_time\n                name: \"enhancedAvgSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            125: {\n                num: 125,\n                name: \"enhancedMaxSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            126: {\n                num: 126,\n                name: \"enhancedAvgAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            127: {\n                num: 127,\n                name: \"enhancedMinAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            128: {\n                num: 128,\n                name: \"enhancedMaxAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            129: {\n                num: 129, // lev average motor power during session\n                name: \"avgLevMotorPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            130: {\n                num: 130, // lev maximum motor power during session\n                name: \"maxLevMotorPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            131: {\n                num: 131, // lev battery consumption during session\n                name: \"levBatteryConsumption\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            132: {\n                num: 132,\n                name: \"avgVerticalRatio\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            133: {\n                num: 133,\n                name: \"avgStanceTimeBalance\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            134: {\n                num: 134,\n                name: \"avgStepLength\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            137: {\n                num: 137,\n                name: \"totalAnaerobicTrainingEffect\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            139: {\n                num: 139,\n                name: \"avgVam\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            140: {\n                num: 140, // 0 if above water\n                name: \"avgDepth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            141: {\n                num: 141, // 0 if above water\n                name: \"maxDepth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            142: {\n                num: 142, // Time since end of last dive\n                name: \"surfaceInterval\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            143: {\n                num: 143,\n                name: \"startCns\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            144: {\n                num: 144,\n                name: \"endCns\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            145: {\n                num: 145,\n                name: \"startN2\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            146: {\n                num: 146,\n                name: \"endN2\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            147: {\n                num: 147,\n                name: \"avgRespirationRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: [1, ],\n                offset: [0, ],\n                units: [\"\", ],\n                bits: [8,],\n                    components: [\"169\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            148: {\n                num: 148,\n                name: \"maxRespirationRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: [1, ],\n                offset: [0, ],\n                units: [\"\", ],\n                bits: [8,],\n                    components: [\"170\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            149: {\n                num: 149,\n                name: \"minRespirationRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: [1, ],\n                offset: [0, ],\n                units: [\"\", ],\n                bits: [8,],\n                    components: [\"180\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            150: {\n                num: 150,\n                name: \"minTemperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            155: {\n                num: 155,\n                name: \"o2Toxicity\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"OTUs\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            156: {\n                num: 156,\n                name: \"diveNumber\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            168: {\n                num: 168,\n                name: \"trainingLoadPeak\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 65536,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            169: {\n                num: 169,\n                name: \"enhancedAvgRespirationRate\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"Breaths/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            170: {\n                num: 170,\n                name: \"enhancedMaxRespirationRate\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"Breaths/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            180: {\n                num: 180,\n                name: \"enhancedMinRespirationRate\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            181: {\n                num: 181, // The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.\n                name: \"totalGrit\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kGrit\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            182: {\n                num: 182, // The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.\n                name: \"totalFlow\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"Flow\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            183: {\n                num: 183,\n                name: \"jumpCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            186: {\n                num: 186, // The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.\n                name: \"avgGrit\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kGrit\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            187: {\n                num: 187, // The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.\n                name: \"avgFlow\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"Flow\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            192: {\n                num: 192, // A 0-100 scale representing how a user felt while performing a workout. Low values are considered feeling bad, while high values are good.\n                name: \"workoutFeel\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            193: {\n                num: 193, // Common Borg CR10 / 0-10 RPE scale, multiplied 10x.. Aggregate score for all workouts in a single session.\n                name: \"workoutRpe\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            194: {\n                num: 194, // Average SPO2 for the monitoring session\n                name: \"avgSpo2\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            195: {\n                num: 195, // Average stress for the monitoring session\n                name: \"avgStress\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            197: {\n                num: 197, // Standard deviation of R-R interval (SDRR) - Heart rate variability measure most useful for wellness users.\n                name: \"sdrrHrv\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mS\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            198: {\n                num: 198, // Root mean square successive difference (RMSSD) - Heart rate variability measure most useful for athletes\n                name: \"rmssdHrv\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mS\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            199: {\n                num: 199, // fractional part of total_ascent\n                name: \"totalFractionalAscent\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            200: {\n                num: 200, // fractional part of total_descent\n                name: \"totalFractionalDescent\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            208: {\n                num: 208,\n                name: \"avgCoreTemperature\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            209: {\n                num: 209,\n                name: \"minCoreTemperature\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            210: {\n                num: 210,\n                name: \"maxCoreTemperature\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        19: {\n            num: 19,\n            name: \"lap\",\n            messagesKey: \"lapMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            253: {\n                num: 253, // Lap end time.\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"event\",\n                type: \"event\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"eventType\",\n                type: \"eventType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"startTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"startPositionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"startPositionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"endPositionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"endPositionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Time (includes pauses)\n                name: \"totalElapsedTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Timer Time (excludes pauses)\n                name: \"totalTimerTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"totalDistance\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"totalCycles\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"cycles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"totalStrides\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"strides\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sport\", value: 1 },\n                            { name: \"sport\", value: 11 },\n                        ],\n                    },\n                   {\n                        name: \"totalStrokes\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"strokes\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sport\", value: 2 },\n                            { name: \"sport\", value: 5 },\n                            { name: \"sport\", value: 15 },\n                            { name: \"sport\", value: 37 },\n                        ],\n                    },\n                   ]\n            },\n            11: {\n                num: 11,\n                name: \"totalCalories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12, // If New Leaf\n                name: \"totalFatCalories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"avgSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [1000, ],\n                offset: [0, ],\n                units: [\"m/s\", ],\n                bits: [16,],\n                    components: [\"110\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            14: {\n                num: 14,\n                name: \"maxSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [1000, ],\n                offset: [0, ],\n                units: [\"m/s\", ],\n                bits: [16,],\n                    components: [\"111\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            15: {\n                num: 15,\n                name: \"avgHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            16: {\n                num: 16,\n                name: \"maxHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            17: {\n                num: 17, // total_cycles / total_timer_time if non_zero_avg_cadence otherwise total_cycles / total_elapsed_time\n                name: \"avgCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"avgRunningCadence\", \n                        type: \"uint8\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"strides/min\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sport\", value: 1 },\n                        ],\n                    },\n                   ]\n            },\n            18: {\n                num: 18,\n                name: \"maxCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"maxRunningCadence\", \n                        type: \"uint8\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"strides/min\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sport\", value: 1 },\n                        ],\n                    },\n                   ]\n            },\n            19: {\n                num: 19, // total_power / total_timer_time if non_zero_avg_power otherwise total_power / total_elapsed_time\n                name: \"avgPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            20: {\n                num: 20,\n                name: \"maxPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            21: {\n                num: 21,\n                name: \"totalAscent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            22: {\n                num: 22,\n                name: \"totalDescent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            23: {\n                num: 23,\n                name: \"intensity\",\n                type: \"intensity\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            24: {\n                num: 24,\n                name: \"lapTrigger\",\n                type: \"lapTrigger\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            25: {\n                num: 25,\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            26: {\n                num: 26,\n                name: \"eventGroup\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            32: {\n                num: 32, // # of lengths of swim pool\n                name: \"numLengths\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"lengths\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            33: {\n                num: 33,\n                name: \"normalizedPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            34: {\n                num: 34,\n                name: \"leftRightBalance\",\n                type: \"leftRightBalance100\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            35: {\n                num: 35,\n                name: \"firstLengthIndex\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            37: {\n                num: 37,\n                name: \"avgStrokeDistance\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            38: {\n                num: 38,\n                name: \"swimStroke\",\n                type: \"swimStroke\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            39: {\n                num: 39,\n                name: \"subSport\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            40: {\n                num: 40, // # of active lengths of swim pool\n                name: \"numActiveLengths\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"lengths\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            41: {\n                num: 41,\n                name: \"totalWork\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"J\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            42: {\n                num: 42,\n                name: \"avgAltitude\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [5, ],\n                offset: [500, ],\n                units: [\"m\", ],\n                bits: [16,],\n                    components: [\"112\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            43: {\n                num: 43,\n                name: \"maxAltitude\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [5, ],\n                offset: [500, ],\n                units: [\"m\", ],\n                bits: [16,],\n                    components: [\"114\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            44: {\n                num: 44,\n                name: \"gpsAccuracy\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            45: {\n                num: 45,\n                name: \"avgGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            46: {\n                num: 46,\n                name: \"avgPosGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            47: {\n                num: 47,\n                name: \"avgNegGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            48: {\n                num: 48,\n                name: \"maxPosGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            49: {\n                num: 49,\n                name: \"maxNegGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            50: {\n                num: 50,\n                name: \"avgTemperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            51: {\n                num: 51,\n                name: \"maxTemperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            52: {\n                num: 52,\n                name: \"totalMovingTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            53: {\n                num: 53,\n                name: \"avgPosVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            54: {\n                num: 54,\n                name: \"avgNegVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            55: {\n                num: 55,\n                name: \"maxPosVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            56: {\n                num: 56,\n                name: \"maxNegVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            57: {\n                num: 57,\n                name: \"timeInHrZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            58: {\n                num: 58,\n                name: \"timeInSpeedZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            59: {\n                num: 59,\n                name: \"timeInCadenceZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            60: {\n                num: 60,\n                name: \"timeInPowerZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            61: {\n                num: 61,\n                name: \"repetitionNum\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            62: {\n                num: 62,\n                name: \"minAltitude\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [5, ],\n                offset: [500, ],\n                units: [\"m\", ],\n                bits: [16,],\n                    components: [\"113\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            63: {\n                num: 63,\n                name: \"minHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            71: {\n                num: 71,\n                name: \"wktStepIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            74: {\n                num: 74,\n                name: \"opponentScore\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            75: {\n                num: 75, // stroke_type enum used as the index\n                name: \"strokeCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            76: {\n                num: 76, // zone number used as the index\n                name: \"zoneCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            77: {\n                num: 77,\n                name: \"avgVerticalOscillation\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            78: {\n                num: 78,\n                name: \"avgStanceTimePercent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            79: {\n                num: 79,\n                name: \"avgStanceTime\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            80: {\n                num: 80, // fractional part of the avg_cadence\n                name: \"avgFractionalCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            81: {\n                num: 81, // fractional part of the max_cadence\n                name: \"maxFractionalCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            82: {\n                num: 82, // fractional part of the total_cycles\n                name: \"totalFractionalCycles\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"cycles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            83: {\n                num: 83,\n                name: \"playerScore\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            84: {\n                num: 84, // Avg saturated and unsaturated hemoglobin\n                name: \"avgTotalHemoglobinConc\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 100,\n                offset: 0,\n                units: \"g/dL\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            85: {\n                num: 85, // Min saturated and unsaturated hemoglobin\n                name: \"minTotalHemoglobinConc\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 100,\n                offset: 0,\n                units: \"g/dL\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            86: {\n                num: 86, // Max saturated and unsaturated hemoglobin\n                name: \"maxTotalHemoglobinConc\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 100,\n                offset: 0,\n                units: \"g/dL\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            87: {\n                num: 87, // Avg percentage of hemoglobin saturated with oxygen\n                name: \"avgSaturatedHemoglobinPercent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 10,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            88: {\n                num: 88, // Min percentage of hemoglobin saturated with oxygen\n                name: \"minSaturatedHemoglobinPercent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 10,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            89: {\n                num: 89, // Max percentage of hemoglobin saturated with oxygen\n                name: \"maxSaturatedHemoglobinPercent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 10,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            91: {\n                num: 91,\n                name: \"avgLeftTorqueEffectiveness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            92: {\n                num: 92,\n                name: \"avgRightTorqueEffectiveness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            93: {\n                num: 93,\n                name: \"avgLeftPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            94: {\n                num: 94,\n                name: \"avgRightPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            95: {\n                num: 95,\n                name: \"avgCombinedPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            98: {\n                num: 98, // Total time spent in the standing position\n                name: \"timeStanding\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            99: {\n                num: 99, // Number of transitions to the standing state\n                name: \"standCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            100: {\n                num: 100, // Average left platform center offset\n                name: \"avgLeftPco\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            101: {\n                num: 101, // Average right platform center offset\n                name: \"avgRightPco\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            102: {\n                num: 102, // Average left power phase angles. Data value indexes defined by power_phase_type.\n                name: \"avgLeftPowerPhase\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            103: {\n                num: 103, // Average left power phase peak angles. Data value indexes defined by power_phase_type.\n                name: \"avgLeftPowerPhasePeak\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            104: {\n                num: 104, // Average right power phase angles. Data value indexes defined by power_phase_type.\n                name: \"avgRightPowerPhase\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            105: {\n                num: 105, // Average right power phase peak angles. Data value indexes defined by power_phase_type.\n                name: \"avgRightPowerPhasePeak\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            106: {\n                num: 106, // Average power by position. Data value indexes defined by rider_position_type.\n                name: \"avgPowerPosition\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            107: {\n                num: 107, // Maximum power by position. Data value indexes defined by rider_position_type.\n                name: \"maxPowerPosition\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            108: {\n                num: 108, // Average cadence by position. Data value indexes defined by rider_position_type.\n                name: \"avgCadencePosition\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            109: {\n                num: 109, // Maximum cadence by position. Data value indexes defined by rider_position_type.\n                name: \"maxCadencePosition\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            110: {\n                num: 110,\n                name: \"enhancedAvgSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            111: {\n                num: 111,\n                name: \"enhancedMaxSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            112: {\n                num: 112,\n                name: \"enhancedAvgAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            113: {\n                num: 113,\n                name: \"enhancedMinAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            114: {\n                num: 114,\n                name: \"enhancedMaxAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            115: {\n                num: 115, // lev average motor power during lap\n                name: \"avgLevMotorPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            116: {\n                num: 116, // lev maximum motor power during lap\n                name: \"maxLevMotorPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            117: {\n                num: 117, // lev battery consumption during lap\n                name: \"levBatteryConsumption\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            118: {\n                num: 118,\n                name: \"avgVerticalRatio\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            119: {\n                num: 119,\n                name: \"avgStanceTimeBalance\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            120: {\n                num: 120,\n                name: \"avgStepLength\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            121: {\n                num: 121,\n                name: \"avgVam\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            122: {\n                num: 122, // 0 if above water\n                name: \"avgDepth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            123: {\n                num: 123, // 0 if above water\n                name: \"maxDepth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            124: {\n                num: 124,\n                name: \"minTemperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            136: {\n                num: 136,\n                name: \"enhancedAvgRespirationRate\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"Breaths/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            137: {\n                num: 137,\n                name: \"enhancedMaxRespirationRate\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"Breaths/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            147: {\n                num: 147,\n                name: \"avgRespirationRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: [1, ],\n                offset: [0, ],\n                units: [\"\", ],\n                bits: [8,],\n                    components: [\"136\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            148: {\n                num: 148,\n                name: \"maxRespirationRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: [1, ],\n                offset: [0, ],\n                units: [\"\", ],\n                bits: [8,],\n                    components: [\"137\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            149: {\n                num: 149, // The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.\n                name: \"totalGrit\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kGrit\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            150: {\n                num: 150, // The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.\n                name: \"totalFlow\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"Flow\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            151: {\n                num: 151,\n                name: \"jumpCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            153: {\n                num: 153, // The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.\n                name: \"avgGrit\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kGrit\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            154: {\n                num: 154, // The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.\n                name: \"avgFlow\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"Flow\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            156: {\n                num: 156, // fractional part of total_ascent\n                name: \"totalFractionalAscent\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            157: {\n                num: 157, // fractional part of total_descent\n                name: \"totalFractionalDescent\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            158: {\n                num: 158,\n                name: \"avgCoreTemperature\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            159: {\n                num: 159,\n                name: \"minCoreTemperature\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            160: {\n                num: 160,\n                name: \"maxCoreTemperature\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        101: {\n            num: 101,\n            name: \"length\",\n            messagesKey: \"lengthMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"event\",\n                type: \"event\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"eventType\",\n                type: \"eventType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"startTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"totalElapsedTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"totalTimerTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"totalStrokes\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"strokes\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"avgSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"swimStroke\",\n                type: \"swimStroke\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"swim_stroke\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"avgSwimmingCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"strokes/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"eventGroup\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"totalCalories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12,\n                name: \"lengthType\",\n                type: \"lengthType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            18: {\n                num: 18,\n                name: \"playerScore\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            19: {\n                num: 19,\n                name: \"opponentScore\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            20: {\n                num: 20, // stroke_type enum used as the index\n                name: \"strokeCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            21: {\n                num: 21, // zone number used as the index\n                name: \"zoneCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            22: {\n                num: 22,\n                name: \"enhancedAvgRespirationRate\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"Breaths/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            23: {\n                num: 23,\n                name: \"enhancedMaxRespirationRate\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"Breaths/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            24: {\n                num: 24,\n                name: \"avgRespirationRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: [1, ],\n                offset: [0, ],\n                units: [\"\", ],\n                bits: [8,],\n                    components: [\"22\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            25: {\n                num: 25,\n                name: \"maxRespirationRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: [1, ],\n                offset: [0, ],\n                units: [\"\", ],\n                bits: [8,],\n                    components: [\"23\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n        },\n     },\n        20: {\n            num: 20,\n            name: \"record\",\n            messagesKey: \"recordMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"positionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"positionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"altitude\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [5, ],\n                offset: [500, ],\n                units: [\"m\", ],\n                bits: [16,],\n                    components: [\"78\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"heartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"cadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"distance\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: true,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"speed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [1000, ],\n                offset: [0, ],\n                units: [\"m/s\", ],\n                bits: [16,],\n                    components: [\"73\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"power\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"compressedSpeedDistance\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: [100, 16, ],\n                offset: [0, 0, ],\n                units: [\"m/s\", \"m\", ],\n                bits: [12,12,],\n                    components: [\"6\", \"5\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"grade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10, // Relative. 0 is none 254 is Max.\n                name: \"resistance\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"timeFromCourse\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12,\n                name: \"cycleLength\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"temperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            17: {\n                num: 17, // Speed at 1s intervals. Timestamp field indicates time of last array element.\n                name: \"speed1s\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 16,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            18: {\n                num: 18,\n                name: \"cycles\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: [1, ],\n                offset: [0, ],\n                units: [\"cycles\", ],\n                bits: [8,],\n                    components: [\"19\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            19: {\n                num: 19,\n                name: \"totalCycles\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"cycles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: true,\n                    hasComponents: false,\n                    subFields: []\n            },\n            28: {\n                num: 28,\n                name: \"compressedAccumulatedPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [1, ],\n                offset: [0, ],\n                units: [\"watts\", ],\n                bits: [16,],\n                    components: [\"29\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            29: {\n                num: 29,\n                name: \"accumulatedPower\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: true,\n                    hasComponents: false,\n                    subFields: []\n            },\n            30: {\n                num: 30,\n                name: \"leftRightBalance\",\n                type: \"leftRightBalance\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            31: {\n                num: 31,\n                name: \"gpsAccuracy\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            32: {\n                num: 32,\n                name: \"verticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            33: {\n                num: 33,\n                name: \"calories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            39: {\n                num: 39,\n                name: \"verticalOscillation\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            40: {\n                num: 40,\n                name: \"stanceTimePercent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            41: {\n                num: 41,\n                name: \"stanceTime\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            42: {\n                num: 42,\n                name: \"activityType\",\n                type: \"activityType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            43: {\n                num: 43,\n                name: \"leftTorqueEffectiveness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            44: {\n                num: 44,\n                name: \"rightTorqueEffectiveness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            45: {\n                num: 45,\n                name: \"leftPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            46: {\n                num: 46,\n                name: \"rightPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            47: {\n                num: 47,\n                name: \"combinedPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            48: {\n                num: 48,\n                name: \"time128\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            49: {\n                num: 49,\n                name: \"strokeType\",\n                type: \"strokeType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            50: {\n                num: 50,\n                name: \"zone\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            51: {\n                num: 51,\n                name: \"ballSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            52: {\n                num: 52, // Log cadence and fractional cadence for backwards compatability\n                name: \"cadence256\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 256,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            53: {\n                num: 53,\n                name: \"fractionalCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            54: {\n                num: 54, // Total saturated and unsaturated hemoglobin\n                name: \"totalHemoglobinConc\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"g/dL\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            55: {\n                num: 55, // Min saturated and unsaturated hemoglobin\n                name: \"totalHemoglobinConcMin\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"g/dL\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            56: {\n                num: 56, // Max saturated and unsaturated hemoglobin\n                name: \"totalHemoglobinConcMax\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"g/dL\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            57: {\n                num: 57, // Percentage of hemoglobin saturated with oxygen\n                name: \"saturatedHemoglobinPercent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            58: {\n                num: 58, // Min percentage of hemoglobin saturated with oxygen\n                name: \"saturatedHemoglobinPercentMin\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            59: {\n                num: 59, // Max percentage of hemoglobin saturated with oxygen\n                name: \"saturatedHemoglobinPercentMax\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            62: {\n                num: 62,\n                name: \"deviceIndex\",\n                type: \"deviceIndex\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            67: {\n                num: 67, // Left platform center offset\n                name: \"leftPco\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            68: {\n                num: 68, // Right platform center offset\n                name: \"rightPco\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            69: {\n                num: 69, // Left power phase angles. Data value indexes defined by power_phase_type.\n                name: \"leftPowerPhase\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            70: {\n                num: 70, // Left power phase peak angles. Data value indexes defined by power_phase_type.\n                name: \"leftPowerPhasePeak\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            71: {\n                num: 71, // Right power phase angles. Data value indexes defined by power_phase_type.\n                name: \"rightPowerPhase\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            72: {\n                num: 72, // Right power phase peak angles. Data value indexes defined by power_phase_type.\n                name: \"rightPowerPhasePeak\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            73: {\n                num: 73,\n                name: \"enhancedSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            78: {\n                num: 78,\n                name: \"enhancedAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            81: {\n                num: 81, // lev battery state of charge\n                name: \"batterySoc\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            82: {\n                num: 82, // lev motor power\n                name: \"motorPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            83: {\n                num: 83,\n                name: \"verticalRatio\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            84: {\n                num: 84,\n                name: \"stanceTimeBalance\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            85: {\n                num: 85,\n                name: \"stepLength\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            87: {\n                num: 87, // Supports larger cycle sizes needed for paddlesports. Max cycle size: 655.35\n                name: \"cycleLength16\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            91: {\n                num: 91, // Includes atmospheric pressure\n                name: \"absolutePressure\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"Pa\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            92: {\n                num: 92, // 0 if above water\n                name: \"depth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            93: {\n                num: 93, // 0 if above water\n                name: \"nextStopDepth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            94: {\n                num: 94,\n                name: \"nextStopTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            95: {\n                num: 95,\n                name: \"timeToSurface\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            96: {\n                num: 96,\n                name: \"ndlTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            97: {\n                num: 97,\n                name: \"cnsLoad\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            98: {\n                num: 98,\n                name: \"n2Load\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            99: {\n                num: 99,\n                name: \"respirationRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: [1, ],\n                offset: [0, ],\n                units: [\"s\", ],\n                bits: [8,],\n                    components: [\"108\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            108: {\n                num: 108,\n                name: \"enhancedRespirationRate\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"Breaths/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            114: {\n                num: 114, // The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.\n                name: \"grit\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            115: {\n                num: 115, // The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.\n                name: \"flow\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            116: {\n                num: 116, // Current Stress value\n                name: \"currentStress\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            117: {\n                num: 117,\n                name: \"ebikeTravelRange\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"km\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            118: {\n                num: 118,\n                name: \"ebikeBatteryLevel\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            119: {\n                num: 119,\n                name: \"ebikeAssistMode\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"depends on sensor\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            120: {\n                num: 120,\n                name: \"ebikeAssistLevelPercent\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            123: {\n                num: 123,\n                name: \"airTimeRemaining\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            124: {\n                num: 124, // Pressure-based surface air consumption\n                name: \"pressureSac\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"bar/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            125: {\n                num: 125, // Volumetric surface air consumption\n                name: \"volumeSac\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"L/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            126: {\n                num: 126, // Respiratory minute volume\n                name: \"rmv\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"L/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            127: {\n                num: 127,\n                name: \"ascentRate\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            129: {\n                num: 129, // Current partial pressure of oxygen\n                name: \"po2\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            139: {\n                num: 139,\n                name: \"coreTemperature\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        21: {\n            num: 21,\n            name: \"event\",\n            messagesKey: \"eventMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"event\",\n                type: \"event\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"eventType\",\n                type: \"eventType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"data16\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [1, ],\n                offset: [0, ],\n                units: [\"\", ],\n                bits: [16,],\n                    components: [\"3\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"data\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"timerTrigger\", \n                        type: \"timerTrigger\",\n                        baseType: \"enum\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 0 },\n                        ],\n                    },\n                   {\n                        name: \"coursePointIndex\", \n                        type: \"messageIndex\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 10 },\n                        ],\n                    },\n                   {\n                        name: \"batteryLevel\", \n                        type: \"uint16\",\n                        baseType: \"uint16\",\n                        scale: 1000,\n                        offset: 0,\n                        units: \"V\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 11 },\n                        ],\n                    },\n                   {\n                        name: \"virtualPartnerSpeed\", \n                        type: \"uint16\",\n                        baseType: \"uint16\",\n                        scale: 1000,\n                        offset: 0,\n                        units: \"m/s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 12 },\n                        ],\n                    },\n                   {\n                        name: \"hrHighAlert\", \n                        type: \"uint8\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"bpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 13 },\n                        ],\n                    },\n                   {\n                        name: \"hrLowAlert\", \n                        type: \"uint8\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"bpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 14 },\n                        ],\n                    },\n                   {\n                        name: \"speedHighAlert\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1000,\n                        offset: 0,\n                        units: \"m/s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 15 },\n                        ],\n                    },\n                   {\n                        name: \"speedLowAlert\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1000,\n                        offset: 0,\n                        units: \"m/s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 16 },\n                        ],\n                    },\n                   {\n                        name: \"cadHighAlert\", \n                        type: \"uint16\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"rpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 17 },\n                        ],\n                    },\n                   {\n                        name: \"cadLowAlert\", \n                        type: \"uint16\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"rpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 18 },\n                        ],\n                    },\n                   {\n                        name: \"powerHighAlert\", \n                        type: \"uint16\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"watts\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 19 },\n                        ],\n                    },\n                   {\n                        name: \"powerLowAlert\", \n                        type: \"uint16\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"watts\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 20 },\n                        ],\n                    },\n                   {\n                        name: \"timeDurationAlert\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1000,\n                        offset: 0,\n                        units: \"s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 23 },\n                        ],\n                    },\n                   {\n                        name: \"distanceDurationAlert\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 100,\n                        offset: 0,\n                        units: \"m\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 24 },\n                        ],\n                    },\n                   {\n                        name: \"calorieDurationAlert\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"calories\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 25 },\n                        ],\n                    },\n                   {\n                        name: \"fitnessEquipmentState\", \n                        type: \"fitnessEquipmentState\",\n                        baseType: \"enum\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 27 },\n                        ],\n                    },\n                   {\n                        name: \"sportPoint\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: [1, 1, ],\n                        offset: [0, 0, ],\n                        units: [\"\", \"\", ],\n                        bits: [16,16,],\n                        components: [\"7\", \"8\", ],\n                        hasComponents: true,\n                        map:[\n                            { name: \"event\", value: 33 },\n                        ],\n                    },\n                   {\n                        name: \"gearChangeData\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: [1, 1, 1, 1, ],\n                        offset: [0, 0, 0, 0, ],\n                        units: [\"\", \"\", \"\", \"\", ],\n                        bits: [8,8,8,8,],\n                        components: [\"11\", \"12\", \"9\", \"10\", ],\n                        hasComponents: true,\n                        map:[\n                            { name: \"event\", value: 42 },\n                            { name: \"event\", value: 43 },\n                        ],\n                    },\n                   {\n                        name: \"riderPosition\",  // Indicates the rider position value.\n                        type: \"riderPositionType\",\n                        baseType: \"enum\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 44 },\n                        ],\n                    },\n                   {\n                        name: \"commTimeout\", \n                        type: \"commTimeoutType\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 47 },\n                        ],\n                    },\n                   {\n                        name: \"diveAlert\", \n                        type: \"diveAlert\",\n                        baseType: \"enum\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 56 },\n                        ],\n                    },\n                   {\n                        name: \"autoActivityDetectDuration\", \n                        type: \"uint16\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"min\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 54 },\n                        ],\n                    },\n                   {\n                        name: \"radarThreatAlert\",  // The first byte is the radar_threat_level_max, the second byte is the radar_threat_count, third bytes is the average approach speed, and the 4th byte is the max approach speed\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: [1, 1, 10, 10, ],\n                        offset: [0, 0, 0, 0, ],\n                        units: [\"\", \"\", \"\", \"\", ],\n                        bits: [8,8,8,8,],\n                        components: [\"21\", \"22\", \"23\", \"24\", ],\n                        hasComponents: true,\n                        map:[\n                            { name: \"event\", value: 75 },\n                        ],\n                    },\n                   ]\n            },\n            4: {\n                num: 4,\n                name: \"eventGroup\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Do not populate directly. Autogenerated by decoder for sport_point subfield components\n                name: \"score\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Do not populate directly. Autogenerated by decoder for sport_point subfield components\n                name: \"opponentScore\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9, // Do not populate directly. Autogenerated by decoder for gear_change subfield components. Front gear number. 1 is innermost.\n                name: \"frontGearNum\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10, // Do not populate directly. Autogenerated by decoder for gear_change subfield components. Number of front teeth.\n                name: \"frontGear\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11, // Do not populate directly. Autogenerated by decoder for gear_change subfield components. Rear gear number. 1 is innermost.\n                name: \"rearGearNum\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12, // Do not populate directly. Autogenerated by decoder for gear_change subfield components. Number of rear teeth.\n                name: \"rearGear\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"deviceIndex\",\n                type: \"deviceIndex\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14, // Activity Type associated with an auto_activity_detect event\n                name: \"activityType\",\n                type: \"activityType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            15: {\n                num: 15, // Timestamp of when the event started\n                name: \"startTimestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"autoActivityDetectStartTimestamp\",  // Auto Activity Detect Start Timestamp.\n                        type: \"dateTime\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"event\", value: 54 },\n                        ],\n                    },\n                   ]\n            },\n            21: {\n                num: 21, // Do not populate directly. Autogenerated by decoder for threat_alert subfield components.\n                name: \"radarThreatLevelMax\",\n                type: \"radarThreatLevelType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            22: {\n                num: 22, // Do not populate directly. Autogenerated by decoder for threat_alert subfield components.\n                name: \"radarThreatCount\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            23: {\n                num: 23, // Do not populate directly. Autogenerated by decoder for radar_threat_alert subfield components\n                name: \"radarThreatAvgApproachSpeed\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            24: {\n                num: 24, // Do not populate directly. Autogenerated by decoder for radar_threat_alert subfield components\n                name: \"radarThreatMaxApproachSpeed\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        23: {\n            num: 23,\n            name: \"deviceInfo\",\n            messagesKey: \"deviceInfoMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"deviceIndex\",\n                type: \"deviceIndex\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"deviceType\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"bleDeviceType\", \n                        type: \"bleDeviceType\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sourceType\", value: 3 },\n                        ],\n                    },\n                   {\n                        name: \"antplusDeviceType\", \n                        type: \"antplusDeviceType\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sourceType\", value: 1 },\n                        ],\n                    },\n                   {\n                        name: \"antDeviceType\", \n                        type: \"uint8\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sourceType\", value: 0 },\n                        ],\n                    },\n                   {\n                        name: \"localDeviceType\", \n                        type: \"localDeviceType\",\n                        baseType: \"uint8\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sourceType\", value: 5 },\n                        ],\n                    },\n                   ]\n            },\n            2: {\n                num: 2,\n                name: \"manufacturer\",\n                type: \"manufacturer\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"serialNumber\",\n                type: \"uint32z\",\n                baseType: \"uint32z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"product\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"faveroProduct\", \n                        type: \"faveroProduct\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"manufacturer\", value: 263 },\n                        ],\n                    },\n                   {\n                        name: \"garminProduct\", \n                        type: \"garminProduct\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"manufacturer\", value: 1 },\n                            { name: \"manufacturer\", value: 15 },\n                            { name: \"manufacturer\", value: 13 },\n                            { name: \"manufacturer\", value: 89 },\n                        ],\n                    },\n                   ]\n            },\n            5: {\n                num: 5,\n                name: \"softwareVersion\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"hardwareVersion\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Reset by new battery or charge.\n                name: \"cumOperatingTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"batteryVoltage\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 256,\n                offset: 0,\n                units: \"V\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"batteryStatus\",\n                type: \"batteryStatus\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            18: {\n                num: 18, // Indicates the location of the sensor\n                name: \"sensorPosition\",\n                type: \"bodyLocation\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            19: {\n                num: 19, // Used to describe the sensor or location\n                name: \"descriptor\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            20: {\n                num: 20,\n                name: \"antTransmissionType\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            21: {\n                num: 21,\n                name: \"antDeviceNumber\",\n                type: \"uint16z\",\n                baseType: \"uint16z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            22: {\n                num: 22,\n                name: \"antNetwork\",\n                type: \"antNetwork\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            25: {\n                num: 25,\n                name: \"sourceType\",\n                type: \"sourceType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            27: {\n                num: 27, // Optional free form string to indicate the devices name or model\n                name: \"productName\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            32: {\n                num: 32,\n                name: \"batteryLevel\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        375: {\n            num: 375,\n            name: \"deviceAuxBatteryInfo\",\n            messagesKey: \"deviceAuxBatteryInfoMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"deviceIndex\",\n                type: \"deviceIndex\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"batteryVoltage\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 256,\n                offset: 0,\n                units: \"V\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"batteryStatus\",\n                type: \"batteryStatus\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"batteryIdentifier\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        72: {\n            num: 72, // Corresponds to file_id of workout or course.\n            name: \"trainingFile\",\n            messagesKey: \"trainingFileMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"type\",\n                type: \"file\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"manufacturer\",\n                type: \"manufacturer\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"product\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"faveroProduct\", \n                        type: \"faveroProduct\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"manufacturer\", value: 263 },\n                        ],\n                    },\n                   {\n                        name: \"garminProduct\", \n                        type: \"garminProduct\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"manufacturer\", value: 1 },\n                            { name: \"manufacturer\", value: 15 },\n                            { name: \"manufacturer\", value: 13 },\n                            { name: \"manufacturer\", value: 89 },\n                        ],\n                    },\n                   ]\n            },\n            3: {\n                num: 3,\n                name: \"serialNumber\",\n                type: \"uint32z\",\n                baseType: \"uint32z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"timeCreated\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        128: {\n            num: 128,\n            name: \"weatherConditions\",\n            messagesKey: \"weatherConditionsMesgs\",\n            fields: {\n            253: {\n                num: 253, // time of update for current conditions, else forecast time\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Current or forecast\n                name: \"weatherReport\",\n                type: \"weatherReport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"temperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Corresponds to GSC Response weatherIcon field\n                name: \"condition\",\n                type: \"weatherStatus\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"windDirection\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"windSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // range 0-100\n                name: \"precipitationProbability\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Heat Index if GCS heatIdx above or equal to 90F or wind chill if GCS windChill below or equal to 32F\n                name: \"temperatureFeelsLike\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"relativeHumidity\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // string corresponding to GCS response location string\n                name: \"location\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"observedAtTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"observedLocationLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"observedLocationLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12,\n                name: \"dayOfWeek\",\n                type: \"dayOfWeek\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"highTemperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14,\n                name: \"lowTemperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        129: {\n            num: 129,\n            name: \"weatherAlert\",\n            messagesKey: \"weatherAlertMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Unique identifier from GCS report ID string, length is 12\n                name: \"reportId\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Time alert was issued\n                name: \"issueTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Time alert expires\n                name: \"expireTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Warning, Watch, Advisory, Statement\n                name: \"severity\",\n                type: \"weatherSeverity\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Tornado, Severe Thunderstorm, etc.\n                name: \"type\",\n                type: \"weatherSevereType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        160: {\n            num: 160,\n            name: \"gpsMetadata\",\n            messagesKey: \"gpsMetadataMesgs\",\n            fields: {\n            253: {\n                num: 253, // Whole second part of the timestamp.\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Millisecond part of the timestamp.\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"positionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"positionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"enhancedAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"enhancedSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"heading\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Used to correlate UTC to system time if the timestamp of the message is in system time. This UTC time is derived from the GPS data.\n                name: \"utcTimestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // velocity[0] is lon velocity. Velocity[1] is lat velocity. Velocity[2] is altitude velocity.\n                name: \"velocity\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 100,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        161: {\n            num: 161,\n            name: \"cameraEvent\",\n            messagesKey: \"cameraEventMesgs\",\n            fields: {\n            253: {\n                num: 253, // Whole second part of the timestamp.\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Millisecond part of the timestamp.\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"cameraEventType\",\n                type: \"cameraEventType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"cameraFileUuid\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"cameraOrientation\",\n                type: \"cameraOrientationType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        164: {\n            num: 164,\n            name: \"gyroscopeData\",\n            messagesKey: \"gyroscopeDataMesgs\",\n            fields: {\n            253: {\n                num: 253, // Whole second part of the timestamp\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Millisecond part of the timestamp.\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Each time in the array describes the time at which the gyro sample with the corrosponding index was taken. Limited to 30 samples in each message. The samples may span across seconds. Array size must match the number of samples in gyro_x and gyro_y and gyro_z\n                name: \"sampleTimeOffset\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read.\n                name: \"gyroX\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read.\n                name: \"gyroY\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read.\n                name: \"gyroZ\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // Calibrated gyro reading\n                name: \"calibratedGyroX\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"deg/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Calibrated gyro reading\n                name: \"calibratedGyroY\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"deg/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Calibrated gyro reading\n                name: \"calibratedGyroZ\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"deg/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        165: {\n            num: 165,\n            name: \"accelerometerData\",\n            messagesKey: \"accelerometerDataMesgs\",\n            fields: {\n            253: {\n                num: 253, // Whole second part of the timestamp\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Millisecond part of the timestamp.\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Each time in the array describes the time at which the accelerometer sample with the corrosponding index was taken. Limited to 30 samples in each message. The samples may span across seconds. Array size must match the number of samples in accel_x and accel_y and accel_z\n                name: \"sampleTimeOffset\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read.\n                name: \"accelX\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read.\n                name: \"accelY\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read.\n                name: \"accelZ\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // Calibrated accel reading\n                name: \"calibratedAccelX\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"g\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Calibrated accel reading\n                name: \"calibratedAccelY\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"g\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Calibrated accel reading\n                name: \"calibratedAccelZ\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"g\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Calibrated accel reading\n                name: \"compressedCalibratedAccelX\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"mG\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9, // Calibrated accel reading\n                name: \"compressedCalibratedAccelY\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"mG\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10, // Calibrated accel reading\n                name: \"compressedCalibratedAccelZ\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"mG\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        208: {\n            num: 208,\n            name: \"magnetometerData\",\n            messagesKey: \"magnetometerDataMesgs\",\n            fields: {\n            253: {\n                num: 253, // Whole second part of the timestamp\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Millisecond part of the timestamp.\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Each time in the array describes the time at which the compass sample with the corrosponding index was taken. Limited to 30 samples in each message. The samples may span across seconds. Array size must match the number of samples in cmps_x and cmps_y and cmps_z\n                name: \"sampleTimeOffset\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read.\n                name: \"magX\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read.\n                name: \"magY\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read.\n                name: \"magZ\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // Calibrated Magnetometer reading\n                name: \"calibratedMagX\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"G\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Calibrated Magnetometer reading\n                name: \"calibratedMagY\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"G\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Calibrated Magnetometer reading\n                name: \"calibratedMagZ\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"G\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        209: {\n            num: 209,\n            name: \"barometerData\",\n            messagesKey: \"barometerDataMesgs\",\n            fields: {\n            253: {\n                num: 253, // Whole second part of the timestamp\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Millisecond part of the timestamp.\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Each time in the array describes the time at which the barometer sample with the corrosponding index was taken. The samples may span across seconds. Array size must match the number of samples in baro_cal\n                name: \"sampleTimeOffset\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // These are the raw ADC reading. The samples may span across seconds. A conversion will need to be done on this data once read.\n                name: \"baroPres\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"Pa\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        167: {\n            num: 167,\n            name: \"threeDSensorCalibration\",\n            messagesKey: \"threeDSensorCalibrationMesgs\",\n            fields: {\n            253: {\n                num: 253, // Whole second part of the timestamp\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Indicates which sensor the calibration is for\n                name: \"sensorType\",\n                type: \"sensorType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Calibration factor used to convert from raw ADC value to degrees, g, etc.\n                name: \"calibrationFactor\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"accelCalFactor\",  // Accelerometer calibration factor\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"g\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sensorType\", value: 0 },\n                        ],\n                    },\n                   {\n                        name: \"gyroCalFactor\",  // Gyro calibration factor\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"deg/s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sensorType\", value: 1 },\n                        ],\n                    },\n                   ]\n            },\n            2: {\n                num: 2, // Calibration factor divisor\n                name: \"calibrationDivisor\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Level shift value used to shift the ADC value back into range\n                name: \"levelShift\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Internal calibration factors, one for each: xy, yx, zx\n                name: \"offsetCal\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // 3 x 3 rotation matrix (row major)\n                name: \"orientationMatrix\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: true,\n                scale: 65535,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        210: {\n            num: 210,\n            name: \"oneDSensorCalibration\",\n            messagesKey: \"oneDSensorCalibrationMesgs\",\n            fields: {\n            253: {\n                num: 253, // Whole second part of the timestamp\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Indicates which sensor the calibration is for\n                name: \"sensorType\",\n                type: \"sensorType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Calibration factor used to convert from raw ADC value to degrees, g, etc.\n                name: \"calibrationFactor\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"baroCalFactor\",  // Barometer calibration factor\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"Pa\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sensorType\", value: 3 },\n                        ],\n                    },\n                   ]\n            },\n            2: {\n                num: 2, // Calibration factor divisor\n                name: \"calibrationDivisor\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"counts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Level shift value used to shift the ADC value back into range\n                name: \"levelShift\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Internal Calibration factor\n                name: \"offsetCal\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        169: {\n            num: 169,\n            name: \"videoFrame\",\n            messagesKey: \"videoFrameMesgs\",\n            fields: {\n            253: {\n                num: 253, // Whole second part of the timestamp\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Millisecond part of the timestamp.\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Number of the frame that the timestamp and timestamp_ms correlate to\n                name: \"frameNumber\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        174: {\n            num: 174,\n            name: \"obdiiData\",\n            messagesKey: \"obdiiDataMesgs\",\n            fields: {\n            253: {\n                num: 253, // Timestamp message was output\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Fractional part of timestamp, added to timestamp\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Offset of PID reading [i] from start_timestamp+start_timestamp_ms. Readings may span accross seconds.\n                name: \"timeOffset\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Parameter ID\n                name: \"pid\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Raw parameter data\n                name: \"rawData\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Optional, data size of PID[i]. If not specified refer to SAE J1979.\n                name: \"pidDataSize\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // System time associated with sample expressed in ms, can be used instead of time_offset. There will be a system_time value for each raw_data element. For multibyte pids the system_time is repeated.\n                name: \"systemTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Timestamp of first sample recorded in the message. Used with time_offset to generate time of each sample\n                name: \"startTimestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Fractional part of start_timestamp\n                name: \"startTimestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        177: {\n            num: 177,\n            name: \"nmeaSentence\",\n            messagesKey: \"nmeaSentenceMesgs\",\n            fields: {\n            253: {\n                num: 253, // Timestamp message was output\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Fractional part of timestamp, added to timestamp\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // NMEA sentence\n                name: \"sentence\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        178: {\n            num: 178,\n            name: \"aviationAttitude\",\n            messagesKey: \"aviationAttitudeMesgs\",\n            fields: {\n            253: {\n                num: 253, // Timestamp message was output\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Fractional part of timestamp, added to timestamp\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // System time associated with sample expressed in ms.\n                name: \"systemTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Range -PI/2 to +PI/2\n                name: \"pitch\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 10430.38,\n                offset: 0,\n                units: \"radians\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Range -PI to +PI\n                name: \"roll\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 10430.38,\n                offset: 0,\n                units: \"radians\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Range -78.4 to +78.4 (-8 Gs to 8 Gs)\n                name: \"accelLateral\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 100,\n                offset: 0,\n                units: \"m/s^2\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // Range -78.4 to +78.4 (-8 Gs to 8 Gs)\n                name: \"accelNormal\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 100,\n                offset: 0,\n                units: \"m/s^2\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Range -8.727 to +8.727 (-500 degs/sec to +500 degs/sec)\n                name: \"turnRate\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 1024,\n                offset: 0,\n                units: \"radians/second\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"stage\",\n                type: \"attitudeStage\",\n                baseType: \"enum\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // The percent complete of the current attitude stage. Set to 0 for attitude stages 0, 1 and 2 and to 100 for attitude stage 3 by AHRS modules that do not support it. Range - 100\n                name: \"attitudeStageComplete\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9, // Track Angle/Heading Range 0 - 2pi\n                name: \"track\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 10430.38,\n                offset: 0,\n                units: \"radians\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"validity\",\n                type: \"attitudeValidity\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        184: {\n            num: 184,\n            name: \"video\",\n            messagesKey: \"videoMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"url\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"hostingProvider\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Playback time of video\n                name: \"duration\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        185: {\n            num: 185,\n            name: \"videoTitle\",\n            messagesKey: \"videoTitleMesgs\",\n            fields: {\n            254: {\n                num: 254, // Long titles will be split into multiple parts\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Total number of title parts\n                name: \"messageCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"text\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        186: {\n            num: 186,\n            name: \"videoDescription\",\n            messagesKey: \"videoDescriptionMesgs\",\n            fields: {\n            254: {\n                num: 254, // Long descriptions will be split into multiple parts\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Total number of description parts\n                name: \"messageCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"text\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        187: {\n            num: 187,\n            name: \"videoClip\",\n            messagesKey: \"videoClipMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"clipNumber\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"startTimestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"startTimestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"endTimestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"endTimestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Start of clip in video time\n                name: \"clipStart\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // End of clip in video time\n                name: \"clipEnd\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        225: {\n            num: 225,\n            name: \"set\",\n            messagesKey: \"setMesgs\",\n            fields: {\n            254: {\n                num: 254, // Timestamp of the set\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"duration\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // # of repitions of the movement\n                name: \"repetitions\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Amount of weight applied for the set\n                name: \"weight\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 16,\n                offset: 0,\n                units: \"kg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"setType\",\n                type: \"setType\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Start time of the set\n                name: \"startTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"category\",\n                type: \"exerciseCategory\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Based on the associated category, see [category]_exercise_names\n                name: \"categorySubtype\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"weightDisplayUnit\",\n                type: \"fitBaseUnit\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"wktStepIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        285: {\n            num: 285,\n            name: \"jump\",\n            messagesKey: \"jumpMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"distance\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"height\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"rotations\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"hangTime\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // A score for a jump calculated based on hang time, rotations, and distance.\n                name: \"score\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"positionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"positionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"speed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [1000, ],\n                offset: [0, ],\n                units: [\"m/s\", ],\n                bits: [16,],\n                    components: [\"8\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"enhancedSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        312: {\n            num: 312,\n            name: \"split\",\n            messagesKey: \"splitMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"splitType\",\n                type: \"splitType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"totalElapsedTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"totalTimerTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"totalDistance\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"avgSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"startTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"totalAscent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14,\n                name: \"totalDescent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            21: {\n                num: 21,\n                name: \"startPositionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            22: {\n                num: 22,\n                name: \"startPositionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            23: {\n                num: 23,\n                name: \"endPositionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            24: {\n                num: 24,\n                name: \"endPositionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            25: {\n                num: 25,\n                name: \"maxSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            26: {\n                num: 26,\n                name: \"avgVertSpeed\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            27: {\n                num: 27,\n                name: \"endTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            28: {\n                num: 28,\n                name: \"totalCalories\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            74: {\n                num: 74,\n                name: \"startElevation\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            110: {\n                num: 110,\n                name: \"totalMovingTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        313: {\n            num: 313,\n            name: \"splitSummary\",\n            messagesKey: \"splitSummaryMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"splitType\",\n                type: \"splitType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"numSplits\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"totalTimerTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"totalDistance\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"avgSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"maxSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"totalAscent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"totalDescent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"avgHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"maxHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12,\n                name: \"avgVertSpeed\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"totalCalories\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            77: {\n                num: 77,\n                name: \"totalMovingTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        317: {\n            num: 317,\n            name: \"climbPro\",\n            messagesKey: \"climbProMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"positionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"positionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"climbProEvent\",\n                type: \"climbProEvent\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"climbNumber\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"climbCategory\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"currentDist\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        206: {\n            num: 206, // Must be logged before developer field is used\n            name: \"fieldDescription\",\n            messagesKey: \"fieldDescriptionMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"developerDataIndex\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"fieldDefinitionNumber\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"fitBaseTypeId\",\n                type: \"fitBaseType\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"fieldName\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"array\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"components\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"scale\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"offset\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"units\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"bits\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"accumulate\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"fitBaseUnitId\",\n                type: \"fitBaseUnit\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14,\n                name: \"nativeMesgNum\",\n                type: \"mesgNum\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            15: {\n                num: 15,\n                name: \"nativeFieldNum\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        207: {\n            num: 207, // Must be logged before field description\n            name: \"developerDataId\",\n            messagesKey: \"developerDataIdMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"developerId\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"applicationId\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"manufacturerId\",\n                type: \"manufacturer\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"developerDataIndex\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"applicationVersion\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        31: {\n            num: 31,\n            name: \"course\",\n            messagesKey: \"courseMesgs\",\n            fields: {\n            4: {\n                num: 4,\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"capabilities\",\n                type: \"courseCapabilities\",\n                baseType: \"uint32z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"subSport\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        32: {\n            num: 32,\n            name: \"coursePoint\",\n            messagesKey: \"coursePointMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"positionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"positionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"distance\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"type\",\n                type: \"coursePoint\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"favorite\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        148: {\n            num: 148, // Unique Identification data for a segment file\n            name: \"segmentId\",\n            messagesKey: \"segmentIdMesgs\",\n            fields: {\n            0: {\n                num: 0, // Friendly name assigned to segment\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // UUID of the segment\n                name: \"uuid\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Sport associated with the segment\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Segment enabled for evaluation\n                name: \"enabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Primary key of the user that created the segment\n                name: \"userProfilePrimaryKey\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // ID of the device that created the segment\n                name: \"deviceId\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Index for the Leader Board entry selected as the default race participant\n                name: \"defaultRaceLeader\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Indicates if any segments should be deleted\n                name: \"deleteStatus\",\n                type: \"segmentDeleteStatus\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Indicates how the segment was selected to be sent to the device\n                name: \"selectionType\",\n                type: \"segmentSelectionType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        149: {\n            num: 149, // Unique Identification data for an individual segment leader within a segment file\n            name: \"segmentLeaderboardEntry\",\n            messagesKey: \"segmentLeaderboardEntryMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Friendly name assigned to leader\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Leader classification\n                name: \"type\",\n                type: \"segmentLeaderboardType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Primary user ID of this leader\n                name: \"groupPrimaryKey\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // ID of the activity associated with this leader time\n                name: \"activityId\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Segment Time (includes pauses)\n                name: \"segmentTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // String version of the activity_id. 21 characters long, express in decimal\n                name: \"activityIdString\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        150: {\n            num: 150, // Navigation and race evaluation point for a segment decribing a point along the segment path and time it took each segment leader to reach that point\n            name: \"segmentPoint\",\n            messagesKey: \"segmentPointMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"positionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"positionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Accumulated distance along the segment at the described point\n                name: \"distance\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Accumulated altitude along the segment at the described point\n                name: \"altitude\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [5, ],\n                offset: [500, ],\n                units: [\"m\", ],\n                bits: [16,],\n                    components: [\"6\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            5: {\n                num: 5, // Accumualted time each leader board member required to reach the described point. This value is zero for all leader board members at the starting point of the segment.\n                name: \"leaderTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Accumulated altitude along the segment at the described point\n                name: \"enhancedAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        142: {\n            num: 142,\n            name: \"segmentLap\",\n            messagesKey: \"segmentLapMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            253: {\n                num: 253, // Lap end time.\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"event\",\n                type: \"event\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"eventType\",\n                type: \"eventType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"startTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"startPositionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"startPositionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"endPositionLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"endPositionLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Time (includes pauses)\n                name: \"totalElapsedTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Timer Time (excludes pauses)\n                name: \"totalTimerTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"totalDistance\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"totalCycles\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"cycles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"totalStrokes\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"strokes\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"sport\", value: 2 },\n                        ],\n                    },\n                   ]\n            },\n            11: {\n                num: 11,\n                name: \"totalCalories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12, // If New Leaf\n                name: \"totalFatCalories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"avgSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14,\n                name: \"maxSpeed\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            15: {\n                num: 15,\n                name: \"avgHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            16: {\n                num: 16,\n                name: \"maxHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            17: {\n                num: 17, // total_cycles / total_timer_time if non_zero_avg_cadence otherwise total_cycles / total_elapsed_time\n                name: \"avgCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            18: {\n                num: 18,\n                name: \"maxCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            19: {\n                num: 19, // total_power / total_timer_time if non_zero_avg_power otherwise total_power / total_elapsed_time\n                name: \"avgPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            20: {\n                num: 20,\n                name: \"maxPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            21: {\n                num: 21,\n                name: \"totalAscent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            22: {\n                num: 22,\n                name: \"totalDescent\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            23: {\n                num: 23,\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            24: {\n                num: 24,\n                name: \"eventGroup\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            25: {\n                num: 25, // North east corner latitude.\n                name: \"necLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            26: {\n                num: 26, // North east corner longitude.\n                name: \"necLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            27: {\n                num: 27, // South west corner latitude.\n                name: \"swcLat\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            28: {\n                num: 28, // South west corner latitude.\n                name: \"swcLong\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"semicircles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            29: {\n                num: 29,\n                name: \"name\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            30: {\n                num: 30,\n                name: \"normalizedPower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            31: {\n                num: 31,\n                name: \"leftRightBalance\",\n                type: \"leftRightBalance100\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            32: {\n                num: 32,\n                name: \"subSport\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            33: {\n                num: 33,\n                name: \"totalWork\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"J\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            34: {\n                num: 34,\n                name: \"avgAltitude\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [5, ],\n                offset: [500, ],\n                units: [\"m\", ],\n                bits: [16,],\n                    components: [\"91\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            35: {\n                num: 35,\n                name: \"maxAltitude\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [5, ],\n                offset: [500, ],\n                units: [\"m\", ],\n                bits: [16,],\n                    components: [\"92\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            36: {\n                num: 36,\n                name: \"gpsAccuracy\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            37: {\n                num: 37,\n                name: \"avgGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            38: {\n                num: 38,\n                name: \"avgPosGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            39: {\n                num: 39,\n                name: \"avgNegGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            40: {\n                num: 40,\n                name: \"maxPosGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            41: {\n                num: 41,\n                name: \"maxNegGrade\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            42: {\n                num: 42,\n                name: \"avgTemperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            43: {\n                num: 43,\n                name: \"maxTemperature\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            44: {\n                num: 44,\n                name: \"totalMovingTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            45: {\n                num: 45,\n                name: \"avgPosVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            46: {\n                num: 46,\n                name: \"avgNegVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            47: {\n                num: 47,\n                name: \"maxPosVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            48: {\n                num: 48,\n                name: \"maxNegVerticalSpeed\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            49: {\n                num: 49,\n                name: \"timeInHrZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            50: {\n                num: 50,\n                name: \"timeInSpeedZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            51: {\n                num: 51,\n                name: \"timeInCadenceZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            52: {\n                num: 52,\n                name: \"timeInPowerZone\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            53: {\n                num: 53,\n                name: \"repetitionNum\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            54: {\n                num: 54,\n                name: \"minAltitude\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: [5, ],\n                offset: [500, ],\n                units: [\"m\", ],\n                bits: [16,],\n                    components: [\"93\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            55: {\n                num: 55,\n                name: \"minHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            56: {\n                num: 56,\n                name: \"activeTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            57: {\n                num: 57,\n                name: \"wktStepIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            58: {\n                num: 58,\n                name: \"sportEvent\",\n                type: \"sportEvent\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            59: {\n                num: 59,\n                name: \"avgLeftTorqueEffectiveness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            60: {\n                num: 60,\n                name: \"avgRightTorqueEffectiveness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            61: {\n                num: 61,\n                name: \"avgLeftPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            62: {\n                num: 62,\n                name: \"avgRightPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            63: {\n                num: 63,\n                name: \"avgCombinedPedalSmoothness\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            64: {\n                num: 64,\n                name: \"status\",\n                type: \"segmentLapStatus\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            65: {\n                num: 65,\n                name: \"uuid\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            66: {\n                num: 66, // fractional part of the avg_cadence\n                name: \"avgFractionalCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            67: {\n                num: 67, // fractional part of the max_cadence\n                name: \"maxFractionalCadence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            68: {\n                num: 68, // fractional part of the total_cycles\n                name: \"totalFractionalCycles\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"cycles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            69: {\n                num: 69,\n                name: \"frontGearShiftCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            70: {\n                num: 70,\n                name: \"rearGearShiftCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            71: {\n                num: 71, // Total time spent in the standing position\n                name: \"timeStanding\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            72: {\n                num: 72, // Number of transitions to the standing state\n                name: \"standCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            73: {\n                num: 73, // Average left platform center offset\n                name: \"avgLeftPco\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            74: {\n                num: 74, // Average right platform center offset\n                name: \"avgRightPco\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            75: {\n                num: 75, // Average left power phase angles. Data value indexes defined by power_phase_type.\n                name: \"avgLeftPowerPhase\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            76: {\n                num: 76, // Average left power phase peak angles. Data value indexes defined by power_phase_type.\n                name: \"avgLeftPowerPhasePeak\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            77: {\n                num: 77, // Average right power phase angles. Data value indexes defined by power_phase_type.\n                name: \"avgRightPowerPhase\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            78: {\n                num: 78, // Average right power phase peak angles. Data value indexes defined by power_phase_type.\n                name: \"avgRightPowerPhasePeak\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 0.7111111,\n                offset: 0,\n                units: \"degrees\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            79: {\n                num: 79, // Average power by position. Data value indexes defined by rider_position_type.\n                name: \"avgPowerPosition\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            80: {\n                num: 80, // Maximum power by position. Data value indexes defined by rider_position_type.\n                name: \"maxPowerPosition\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"watts\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            81: {\n                num: 81, // Average cadence by position. Data value indexes defined by rider_position_type.\n                name: \"avgCadencePosition\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            82: {\n                num: 82, // Maximum cadence by position. Data value indexes defined by rider_position_type.\n                name: \"maxCadencePosition\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"rpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            83: {\n                num: 83, // Manufacturer that produced the segment\n                name: \"manufacturer\",\n                type: \"manufacturer\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            84: {\n                num: 84, // The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.\n                name: \"totalGrit\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kGrit\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            85: {\n                num: 85, // The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.\n                name: \"totalFlow\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"Flow\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            86: {\n                num: 86, // The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.\n                name: \"avgGrit\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kGrit\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            87: {\n                num: 87, // The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.\n                name: \"avgFlow\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"Flow\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            89: {\n                num: 89, // fractional part of total_ascent\n                name: \"totalFractionalAscent\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            90: {\n                num: 90, // fractional part of total_descent\n                name: \"totalFractionalDescent\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            91: {\n                num: 91,\n                name: \"enhancedAvgAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            92: {\n                num: 92,\n                name: \"enhancedMaxAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            93: {\n                num: 93,\n                name: \"enhancedMinAltitude\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 5,\n                offset: 500,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        151: {\n            num: 151, // Summary of the unique segment and leaderboard information associated with a segment file. This message is used to compile a segment list file describing all segment files on a device. The segment list file is used when refreshing the contents of a segment file with the latest available leaderboard information.\n            name: \"segmentFile\",\n            messagesKey: \"segmentFileMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // UUID of the segment file\n                name: \"fileUuid\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Enabled state of the segment file\n                name: \"enabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Primary key of the user that created the segment file\n                name: \"userProfilePrimaryKey\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Leader type of each leader in the segment file\n                name: \"leaderType\",\n                type: \"segmentLeaderboardType\",\n                baseType: \"enum\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Group primary key of each leader in the segment file\n                name: \"leaderGroupPrimaryKey\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9, // Activity ID of each leader in the segment file\n                name: \"leaderActivityId\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10, // String version of the activity ID of each leader in the segment file. 21 characters long for each ID, express in decimal\n                name: \"leaderActivityIdString\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11, // Index for the Leader Board entry selected as the default race participant\n                name: \"defaultRaceLeader\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        26: {\n            num: 26,\n            name: \"workout\",\n            messagesKey: \"workoutMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"capabilities\",\n                type: \"workoutCapabilities\",\n                baseType: \"uint32z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // number of valid steps\n                name: \"numValidSteps\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"wktName\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"subSport\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14,\n                name: \"poolLength\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            15: {\n                num: 15,\n                name: \"poolLengthUnit\",\n                type: \"displayMeasure\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            17: {\n                num: 17, // Description of the workout\n                name: \"wktDescription\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        158: {\n            num: 158,\n            name: \"workoutSession\",\n            messagesKey: \"workoutSessionMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"subSport\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"numValidSteps\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"firstStepIndex\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"poolLength\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"poolLengthUnit\",\n                type: \"displayMeasure\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        27: {\n            num: 27,\n            name: \"workoutStep\",\n            messagesKey: \"workoutStepMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"wktStepName\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"durationType\",\n                type: \"wktStepDuration\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"durationValue\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"durationTime\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1000,\n                        offset: 0,\n                        units: \"s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 0 },\n                            { name: \"durationType\", value: 28 },\n                        ],\n                    },\n                   {\n                        name: \"durationDistance\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 100,\n                        offset: 0,\n                        units: \"m\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 1 },\n                        ],\n                    },\n                   {\n                        name: \"durationHr\", \n                        type: \"workoutHr\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or bpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 2 },\n                            { name: \"durationType\", value: 3 },\n                        ],\n                    },\n                   {\n                        name: \"durationCalories\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"calories\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 4 },\n                        ],\n                    },\n                   {\n                        name: \"durationStep\",  // message_index of step to loop back to. Steps are assumed to be in the order by message_index. custom_name and intensity members are undefined for this duration type.\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 6 },\n                            { name: \"durationType\", value: 7 },\n                            { name: \"durationType\", value: 8 },\n                            { name: \"durationType\", value: 9 },\n                            { name: \"durationType\", value: 10 },\n                            { name: \"durationType\", value: 11 },\n                            { name: \"durationType\", value: 12 },\n                            { name: \"durationType\", value: 13 },\n                        ],\n                    },\n                   {\n                        name: \"durationPower\", \n                        type: \"workoutPower\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or watts\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 14 },\n                            { name: \"durationType\", value: 15 },\n                        ],\n                    },\n                   {\n                        name: \"durationReps\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 29 },\n                        ],\n                    },\n                   ]\n            },\n            3: {\n                num: 3,\n                name: \"targetType\",\n                type: \"wktStepTarget\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"targetValue\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"targetSpeedZone\",  // speed zone (1-10);Custom =0;\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 0 },\n                        ],\n                    },\n                   {\n                        name: \"targetHrZone\",  // hr zone (1-5);Custom =0;\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 1 },\n                        ],\n                    },\n                   {\n                        name: \"targetCadenceZone\",  // Zone (1-?); Custom = 0;\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 3 },\n                        ],\n                    },\n                   {\n                        name: \"targetPowerZone\",  // Power Zone ( 1-7); Custom = 0;\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 4 },\n                        ],\n                    },\n                   {\n                        name: \"repeatSteps\",  // # of repetitions\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 6 },\n                        ],\n                    },\n                   {\n                        name: \"repeatTime\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1000,\n                        offset: 0,\n                        units: \"s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 7 },\n                        ],\n                    },\n                   {\n                        name: \"repeatDistance\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 100,\n                        offset: 0,\n                        units: \"m\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 8 },\n                        ],\n                    },\n                   {\n                        name: \"repeatCalories\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"calories\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 9 },\n                        ],\n                    },\n                   {\n                        name: \"repeatHr\", \n                        type: \"workoutHr\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or bpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 10 },\n                            { name: \"durationType\", value: 11 },\n                        ],\n                    },\n                   {\n                        name: \"repeatPower\", \n                        type: \"workoutPower\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or watts\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"durationType\", value: 12 },\n                            { name: \"durationType\", value: 13 },\n                        ],\n                    },\n                   {\n                        name: \"targetStrokeType\", \n                        type: \"swimStroke\",\n                        baseType: \"enum\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 11 },\n                        ],\n                    },\n                   ]\n            },\n            5: {\n                num: 5,\n                name: \"customTargetValueLow\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"customTargetSpeedLow\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1000,\n                        offset: 0,\n                        units: \"m/s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 0 },\n                        ],\n                    },\n                   {\n                        name: \"customTargetHeartRateLow\", \n                        type: \"workoutHr\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or bpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 1 },\n                        ],\n                    },\n                   {\n                        name: \"customTargetCadenceLow\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"rpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 3 },\n                        ],\n                    },\n                   {\n                        name: \"customTargetPowerLow\", \n                        type: \"workoutPower\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or watts\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 4 },\n                        ],\n                    },\n                   ]\n            },\n            6: {\n                num: 6,\n                name: \"customTargetValueHigh\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"customTargetSpeedHigh\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1000,\n                        offset: 0,\n                        units: \"m/s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 0 },\n                        ],\n                    },\n                   {\n                        name: \"customTargetHeartRateHigh\", \n                        type: \"workoutHr\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or bpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 1 },\n                        ],\n                    },\n                   {\n                        name: \"customTargetCadenceHigh\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"rpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 3 },\n                        ],\n                    },\n                   {\n                        name: \"customTargetPowerHigh\", \n                        type: \"workoutPower\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or watts\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"targetType\", value: 4 },\n                        ],\n                    },\n                   ]\n            },\n            7: {\n                num: 7,\n                name: \"intensity\",\n                type: \"intensity\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"notes\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"equipment\",\n                type: \"workoutEquipment\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"exerciseCategory\",\n                type: \"exerciseCategory\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"exerciseName\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12,\n                name: \"exerciseWeight\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"kg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"weightDisplayUnit\",\n                type: \"fitBaseUnit\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            19: {\n                num: 19,\n                name: \"secondaryTargetType\",\n                type: \"wktStepTarget\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            20: {\n                num: 20,\n                name: \"secondaryTargetValue\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"secondaryTargetSpeedZone\",  // speed zone (1-10);Custom =0;\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 0 },\n                        ],\n                    },\n                   {\n                        name: \"secondaryTargetHrZone\",  // hr zone (1-5);Custom =0;\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 1 },\n                        ],\n                    },\n                   {\n                        name: \"secondaryTargetCadenceZone\",  // Zone (1-?); Custom = 0;\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 3 },\n                        ],\n                    },\n                   {\n                        name: \"secondaryTargetPowerZone\",  // Power Zone ( 1-7); Custom = 0;\n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 4 },\n                        ],\n                    },\n                   {\n                        name: \"secondaryTargetStrokeType\", \n                        type: \"swimStroke\",\n                        baseType: \"enum\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 11 },\n                        ],\n                    },\n                   ]\n            },\n            21: {\n                num: 21,\n                name: \"secondaryCustomTargetValueLow\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"secondaryCustomTargetSpeedLow\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1000,\n                        offset: 0,\n                        units: \"m/s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 0 },\n                        ],\n                    },\n                   {\n                        name: \"secondaryCustomTargetHeartRateLow\", \n                        type: \"workoutHr\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or bpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 1 },\n                        ],\n                    },\n                   {\n                        name: \"secondaryCustomTargetCadenceLow\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"rpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 3 },\n                        ],\n                    },\n                   {\n                        name: \"secondaryCustomTargetPowerLow\", \n                        type: \"workoutPower\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or watts\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 4 },\n                        ],\n                    },\n                   ]\n            },\n            22: {\n                num: 22,\n                name: \"secondaryCustomTargetValueHigh\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"secondaryCustomTargetSpeedHigh\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1000,\n                        offset: 0,\n                        units: \"m/s\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 0 },\n                        ],\n                    },\n                   {\n                        name: \"secondaryCustomTargetHeartRateHigh\", \n                        type: \"workoutHr\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or bpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 1 },\n                        ],\n                    },\n                   {\n                        name: \"secondaryCustomTargetCadenceHigh\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"rpm\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 3 },\n                        ],\n                    },\n                   {\n                        name: \"secondaryCustomTargetPowerHigh\", \n                        type: \"workoutPower\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"% or watts\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"secondaryTargetType\", value: 4 },\n                        ],\n                    },\n                   ]\n            },\n        },\n     },\n        264: {\n            num: 264,\n            name: \"exerciseTitle\",\n            messagesKey: \"exerciseTitleMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"exerciseCategory\",\n                type: \"exerciseCategory\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"exerciseName\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"wktStepName\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        28: {\n            num: 28,\n            name: \"schedule\",\n            messagesKey: \"scheduleMesgs\",\n            fields: {\n            0: {\n                num: 0, // Corresponds to file_id of scheduled workout / course.\n                name: \"manufacturer\",\n                type: \"manufacturer\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Corresponds to file_id of scheduled workout / course.\n                name: \"product\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"faveroProduct\", \n                        type: \"faveroProduct\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"manufacturer\", value: 263 },\n                        ],\n                    },\n                   {\n                        name: \"garminProduct\", \n                        type: \"garminProduct\",\n                        baseType: \"uint16\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"manufacturer\", value: 1 },\n                            { name: \"manufacturer\", value: 15 },\n                            { name: \"manufacturer\", value: 13 },\n                            { name: \"manufacturer\", value: 89 },\n                        ],\n                    },\n                   ]\n            },\n            2: {\n                num: 2, // Corresponds to file_id of scheduled workout / course.\n                name: \"serialNumber\",\n                type: \"uint32z\",\n                baseType: \"uint32z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Corresponds to file_id of scheduled workout / course.\n                name: \"timeCreated\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // TRUE if this activity has been started\n                name: \"completed\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"type\",\n                type: \"schedule\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"scheduledTime\",\n                type: \"localDateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        33: {\n            num: 33,\n            name: \"totals\",\n            messagesKey: \"totalsMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Excludes pauses\n                name: \"timerTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"distance\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"calories\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Includes pauses\n                name: \"elapsedTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"sessions\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"activeTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"sportIndex\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        30: {\n            num: 30,\n            name: \"weightScale\",\n            messagesKey: \"weightScaleMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"weight\",\n                type: \"weight\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"kg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"percentFat\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"percentHydration\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"%\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"visceralFatMass\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"kg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"boneMass\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"kg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"muscleMass\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"kg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"basalMet\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 4,\n                offset: 0,\n                units: \"kcal/day\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"physiqueRating\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9, // ~4kJ per kcal, 0.25 allows max 16384 kcal\n                name: \"activeMet\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 4,\n                offset: 0,\n                units: \"kcal/day\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"metabolicAge\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"years\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"visceralFatRating\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12, // Associates this weight scale message to a user. This corresponds to the index of the user profile message in the weight scale file.\n                name: \"userProfileIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13,\n                name: \"bmi\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"kg/m^2\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        51: {\n            num: 51,\n            name: \"bloodPressure\",\n            messagesKey: \"bloodPressureMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"systolicPressure\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mmHg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"diastolicPressure\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mmHg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"meanArterialPressure\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mmHg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"map3SampleMean\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mmHg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"mapMorningValues\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mmHg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"mapEveningValues\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"mmHg\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"heartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"heartRateType\",\n                type: \"hrType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"status\",\n                type: \"bpStatus\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9, // Associates this blood pressure message to a user. This corresponds to the index of the user profile message in the blood pressure file.\n                name: \"userProfileIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        103: {\n            num: 103,\n            name: \"monitoringInfo\",\n            messagesKey: \"monitoringInfoMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Use to convert activity timestamps to local time if device does not support time zone and daylight savings time correction.\n                name: \"localTimestamp\",\n                type: \"localDateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"activityType\",\n                type: \"activityType\",\n                baseType: \"enum\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Indexed by activity_type\n                name: \"cyclesToDistance\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 5000,\n                offset: 0,\n                units: \"m/cycle\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Indexed by activity_type\n                name: \"cyclesToCalories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 5000,\n                offset: 0,\n                units: \"kcal/cycle\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"restingMetabolicRate\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal / day\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        55: {\n            num: 55,\n            name: \"monitoring\",\n            messagesKey: \"monitoringMesgs\",\n            fields: {\n            253: {\n                num: 253, // Must align to logging interval, for example, time must be 00:00:00 for daily log.\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Associates this data to device_info message. Not required for file with single device (sensor).\n                name: \"deviceIndex\",\n                type: \"deviceIndex\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Accumulated total calories. Maintained by MonitoringReader for each activity_type. See SDK documentation\n                name: \"calories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Accumulated distance. Maintained by MonitoringReader for each activity_type. See SDK documentation.\n                name: \"distance\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Accumulated cycles. Maintained by MonitoringReader for each activity_type. See SDK documentation.\n                name: \"cycles\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 2,\n                offset: 0,\n                units: \"cycles\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: [{\n                        name: \"steps\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 1,\n                        offset: 0,\n                        units: \"steps\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"activityType\", value: 6 },\n                            { name: \"activityType\", value: 1 },\n                        ],\n                    },\n                   {\n                        name: \"strokes\", \n                        type: \"uint32\",\n                        baseType: \"uint32\",\n                        scale: 2,\n                        offset: 0,\n                        units: \"strokes\",\n                        bits: [],\n                        components: [],\n                        hasComponents: false,\n                        map:[\n                            { name: \"activityType\", value: 2 },\n                            { name: \"activityType\", value: 5 },\n                        ],\n                    },\n                   ]\n            },\n            4: {\n                num: 4,\n                name: \"activeTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"activityType\",\n                type: \"activityType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"activitySubtype\",\n                type: \"activitySubtype\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"activityLevel\",\n                type: \"activityLevel\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"distance16\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"100 * m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"cycles16\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"2 * cycles (steps)\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"activeTime16\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11, // Must align to logging interval, for example, time must be 00:00:00 for daily log.\n                name: \"localTimestamp\",\n                type: \"localDateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12, // Avg temperature during the logging interval ended at timestamp\n                name: \"temperature\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14, // Min temperature during the logging interval ended at timestamp\n                name: \"temperatureMin\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            15: {\n                num: 15, // Max temperature during the logging interval ended at timestamp\n                name: \"temperatureMax\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"C\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            16: {\n                num: 16, // Indexed using minute_activity_level enum\n                name: \"activityTime\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"minutes\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            19: {\n                num: 19,\n                name: \"activeCalories\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"kcal\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            24: {\n                num: 24, // Indicates single type / intensity for duration since last monitoring message.\n                name: \"currentActivityTypeIntensity\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: false,\n                scale: [1, 1, ],\n                offset: [0, 0, ],\n                units: [\"\", \"\", ],\n                bits: [5,3,],\n                    components: [\"5\", \"28\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            25: {\n                num: 25,\n                name: \"timestampMin8\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            26: {\n                num: 26,\n                name: \"timestamp16\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            27: {\n                num: 27,\n                name: \"heartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            28: {\n                num: 28,\n                name: \"intensity\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            29: {\n                num: 29,\n                name: \"durationMin\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            30: {\n                num: 30,\n                name: \"duration\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            31: {\n                num: 31,\n                name: \"ascent\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            32: {\n                num: 32,\n                name: \"descent\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            33: {\n                num: 33,\n                name: \"moderateActivityMinutes\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"minutes\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            34: {\n                num: 34,\n                name: \"vigorousActivityMinutes\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"minutes\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        211: {\n            num: 211,\n            name: \"monitoringHrData\",\n            messagesKey: \"monitoringHrDataMesgs\",\n            fields: {\n            253: {\n                num: 253, // Must align to logging interval, for example, time must be 00:00:00 for daily log.\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // 7-day rolling average\n                name: \"restingHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // RHR for today only. (Feeds into 7-day average)\n                name: \"currentDayRestingHeartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        269: {\n            num: 269,\n            name: \"spo2Data\",\n            messagesKey: \"spo2DataMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"readingSpo2\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"readingConfidence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Mode when data was captured\n                name: \"mode\",\n                type: \"spo2MeasurementType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        132: {\n            num: 132,\n            name: \"hr\",\n            messagesKey: \"hrMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"fractionalTimestamp\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 32768,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"time256\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: [256, ],\n                offset: [0, ],\n                units: [\"s\", ],\n                bits: [8,],\n                    components: [\"0\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"filteredBpm\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"eventTimestamp\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1024,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: true,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"eventTimestamp12\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: [1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, ],\n                offset: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],\n                units: [\"s\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", ],\n                bits: [12,12,12,12,12,12,12,12,12,12,],\n                    components: [\"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n        },\n     },\n        227: {\n            num: 227, // Value from 1 to 100 calculated by FirstBeat\n            name: \"stressLevel\",\n            messagesKey: \"stressLevelMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"stressLevelValue\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Time stress score was calculated\n                name: \"stressLevelTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        229: {\n            num: 229,\n            name: \"maxMetData\",\n            messagesKey: \"maxMetDataMesgs\",\n            fields: {\n            0: {\n                num: 0, // Time maxMET and vo2 were calculated\n                name: \"updateTime\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"vo2Max\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"mL/kg/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"sport\",\n                type: \"sport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"subSport\",\n                type: \"subSport\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"maxMetCategory\",\n                type: \"maxMetCategory\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9, // Indicates if calibrated data was used in the calculation\n                name: \"calibratedData\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12, // Indicates if the estimate was obtained using a chest strap or wrist heart rate\n                name: \"hrSource\",\n                type: \"maxMetHeartRateSource\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13, // Indidcates if the estimate was obtained using onboard GPS or connected GPS\n                name: \"speedSource\",\n                type: \"maxMetSpeedSource\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        314: {\n            num: 314, // Body battery data used for HSA custom data logging\n            name: \"hsaBodyBatteryData\",\n            messagesKey: \"hsaBodyBatteryDataMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Processing interval length in seconds\n                name: \"processingInterval\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Body battery level: [0,100] Blank: -16\n                name: \"level\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Body battery charged value\n                name: \"charged\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Body battery uncharged value\n                name: \"uncharged\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        315: {\n            num: 315, // HSA events\n            name: \"hsaEvent\",\n            messagesKey: \"hsaEventMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Event ID. Health SDK use only\n                name: \"eventId\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        302: {\n            num: 302, // Raw accelerometer data used for HSA custom data logging\n            name: \"hsaAccelerometerData\",\n            messagesKey: \"hsaAccelerometerDataMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Millisecond resolution of the timestamp\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Sampling Interval in Milliseconds\n                name: \"samplingInterval\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // X-Axis Measurement\n                name: \"accelX\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 1.024,\n                offset: 0,\n                units: \"mG\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Y-Axis Measurement\n                name: \"accelY\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 1.024,\n                offset: 0,\n                units: \"mG\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Z-Axis Measurement\n                name: \"accelZ\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 1.024,\n                offset: 0,\n                units: \"mG\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // 32 kHz timestamp\n                name: \"timestamp32k\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        376: {\n            num: 376,\n            name: \"hsaGyroscopeData\",\n            messagesKey: \"hsaGyroscopeDataMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Millisecond resolution of the timestamp\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Sampling Interval in 32 kHz timescale\n                name: \"samplingInterval\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"1/32768 s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // X-Axis Measurement\n                name: \"gyroX\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 28.57143,\n                offset: 0,\n                units: \"deg/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Y-Axis Measurement\n                name: \"gyroY\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 28.57143,\n                offset: 0,\n                units: \"deg/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Z-Axis Measurement\n                name: \"gyroZ\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 28.57143,\n                offset: 0,\n                units: \"deg/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // 32 kHz timestamp\n                name: \"timestamp32k\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"1/32768 s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        304: {\n            num: 304, // User's current daily step data used for HSA custom data logging\n            name: \"hsaStepData\",\n            messagesKey: \"hsaStepDataMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Processing interval length in seconds. File start: 0xFFFFFFEF File stop: 0xFFFFFFEE\n                name: \"processingInterval\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Total step sum\n                name: \"steps\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"steps\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        305: {\n            num: 305, // User's current SpO2 data used for HSA custom data logging\n            name: \"hsaSpo2Data\",\n            messagesKey: \"hsaSpo2DataMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Processing interval length in seconds\n                name: \"processingInterval\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // SpO2 Reading: [70,100] Blank: 240\n                name: \"readingSpo2\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // SpO2 Confidence: [0,254]\n                name: \"confidence\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        306: {\n            num: 306, // User's current stress data used for HSA custom data logging\n            name: \"hsaStressData\",\n            messagesKey: \"hsaStressDataMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Processing interval length in seconds\n                name: \"processingInterval\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Stress Level: [0,100] Off wrist: -1 Excess motion: -2 Not enough data: -3 Recovering from exercise: -4 Unidentified: -5 Blank: -16\n                name: \"stressLevel\",\n                type: \"sint8\",\n                baseType: \"sint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        307: {\n            num: 307, // User's current respiration data used for HSA custom data logging\n            name: \"hsaRespirationData\",\n            messagesKey: \"hsaRespirationDataMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Processing interval length in seconds\n                name: \"processingInterval\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Breaths / min: [1,100] Invalid: 255 Excess motion: 254 Off wrist: 253 Not available: 252 Blank: 2.4\n                name: \"respirationRate\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: true,\n                scale: 100,\n                offset: 0,\n                units: \"breaths/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        308: {\n            num: 308, // User's current heart rate data used for HSA custom data logging\n            name: \"hsaHeartRateData\",\n            messagesKey: \"hsaHeartRateDataMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Processing interval length in seconds\n                name: \"processingInterval\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Status of measurements in buffer - 0 indicates SEARCHING 1 indicates LOCKED\n                name: \"status\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Beats / min. Blank: 0\n                name: \"heartRate\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"bpm\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        389: {\n            num: 389, // Configuration data for HSA custom data logging\n            name: \"hsaConfigurationData\",\n            messagesKey: \"hsaConfigurationDataMesgs\",\n            fields: {\n            253: {\n                num: 253, // Encoded configuration data\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Encoded configuration data. Health SDK use only\n                name: \"data\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Size in bytes of data field\n                name: \"dataSize\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        409: {\n            num: 409, // Wrist temperature data used for HSA custom data logging\n            name: \"hsaWristTemperatureData\",\n            messagesKey: \"hsaWristTemperatureDataMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Processing interval length in seconds\n                name: \"processingInterval\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Wrist temperature reading\n                name: \"value\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"degC\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        145: {\n            num: 145,\n            name: \"memoGlob\",\n            messagesKey: \"memoGlobMesgs\",\n            fields: {\n            250: {\n                num: 250, // Sequence number of memo blocks\n                name: \"partIndex\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Deprecated. Use data field.\n                name: \"memo\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Message Number of the parent message\n                name: \"mesgNum\",\n                type: \"mesgNum\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Index of mesg that this glob is associated with.\n                name: \"parentIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Field within the parent that this glob is associated with\n                name: \"fieldNum\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Block of utf8 bytes. Note, mutltibyte characters may be split across adjoining memo_glob messages.\n                name: \"data\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        275: {\n            num: 275,\n            name: \"sleepLevel\",\n            messagesKey: \"sleepLevelMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"sleepLevel\",\n                type: \"sleepLevel\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        82: {\n            num: 82,\n            name: \"antChannelId\",\n            messagesKey: \"antChannelIdMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"channelNumber\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"deviceType\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"deviceNumber\",\n                type: \"uint16z\",\n                baseType: \"uint16z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"transmissionType\",\n                type: \"uint8z\",\n                baseType: \"uint8z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"deviceIndex\",\n                type: \"deviceIndex\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        80: {\n            num: 80,\n            name: \"antRx\",\n            messagesKey: \"antRxMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"fractionalTimestamp\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 32768,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"mesgId\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"mesgData\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: [1, 1, 1, 1, 1, 1, 1, 1, 1, ],\n                offset: [0, 0, 0, 0, 0, 0, 0, 0, 0, ],\n                units: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", ],\n                bits: [8,8,8,8,8,8,8,8,8,],\n                    components: [\"3\", \"4\", \"4\", \"4\", \"4\", \"4\", \"4\", \"4\", \"4\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"channelNumber\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"data\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        81: {\n            num: 81,\n            name: \"antTx\",\n            messagesKey: \"antTxMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"fractionalTimestamp\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 32768,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"mesgId\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"mesgData\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: [1, 1, 1, 1, 1, 1, 1, 1, 1, ],\n                offset: [0, 0, 0, 0, 0, 0, 0, 0, 0, ],\n                units: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", ],\n                bits: [8,8,8,8,8,8,8,8,8,],\n                    components: [\"3\", \"4\", \"4\", \"4\", \"4\", \"4\", \"4\", \"4\", \"4\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"channelNumber\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"data\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        200: {\n            num: 200,\n            name: \"exdScreenConfiguration\",\n            messagesKey: \"exdScreenConfigurationMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"screenIndex\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // number of fields in screen\n                name: \"fieldCount\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"layout\",\n                type: \"exdLayout\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"screenEnabled\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        201: {\n            num: 201,\n            name: \"exdDataFieldConfiguration\",\n            messagesKey: \"exdDataFieldConfigurationMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"screenIndex\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"conceptField\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: false,\n                scale: [1, 1, ],\n                offset: [0, 0, ],\n                units: [\"\", \"\", ],\n                bits: [4,4,],\n                    components: [\"2\", \"3\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"fieldId\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"conceptCount\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"displayType\",\n                type: \"exdDisplayType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"title\",\n                type: \"string\",\n                baseType: \"string\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        202: {\n            num: 202,\n            name: \"exdDataConceptConfiguration\",\n            messagesKey: \"exdDataConceptConfigurationMesgs\",\n            fields: {\n            0: {\n                num: 0,\n                name: \"screenIndex\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"conceptField\",\n                type: \"byte\",\n                baseType: \"byte\",\n                array: false,\n                scale: [1, 1, ],\n                offset: [0, 0, ],\n                units: [\"\", \"\", ],\n                bits: [4,4,],\n                    components: [\"2\", \"3\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"fieldId\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"conceptIndex\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"dataPage\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"conceptKey\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"scaling\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"dataUnits\",\n                type: \"exdDataUnits\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"qualifier\",\n                type: \"exdQualifiers\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"descriptor\",\n                type: \"exdDescriptors\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"isSigned\",\n                type: \"bool\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        268: {\n            num: 268,\n            name: \"diveSummary\",\n            messagesKey: \"diveSummaryMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"referenceMesg\",\n                type: \"mesgNum\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"referenceIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // 0 if above water\n                name: \"avgDepth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // 0 if above water\n                name: \"maxDepth\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Time since end of last dive\n                name: \"surfaceInterval\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"startCns\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"endCns\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7,\n                name: \"startN2\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8,\n                name: \"endN2\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"percent\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9,\n                name: \"o2Toxicity\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"OTUs\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10,\n                name: \"diveNumber\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11,\n                name: \"bottomTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            12: {\n                num: 12, // Average pressure-based surface air consumption\n                name: \"avgPressureSac\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"bar/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            13: {\n                num: 13, // Average volumetric surface air consumption\n                name: \"avgVolumeSac\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"L/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14, // Average respiratory minute volume\n                name: \"avgRmv\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"L/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            15: {\n                num: 15, // Time to reach deepest level stop\n                name: \"descentTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            16: {\n                num: 16, // Time after leaving bottom until reaching surface\n                name: \"ascentTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            17: {\n                num: 17, // Average ascent rate, not including descents or stops\n                name: \"avgAscentRate\",\n                type: \"sint32\",\n                baseType: \"sint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            22: {\n                num: 22, // Average descent rate, not including ascents or stops\n                name: \"avgDescentRate\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            23: {\n                num: 23, // Maximum ascent rate\n                name: \"maxAscentRate\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            24: {\n                num: 24, // Maximum descent rate\n                name: \"maxDescentRate\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            25: {\n                num: 25, // Time spent neither ascending nor descending\n                name: \"hangTime\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        289: {\n            num: 289, // Number of acclerometer zero crossings summed over the specified time interval\n            name: \"aadAccelFeatures\",\n            messagesKey: \"aadAccelFeaturesMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Time interval length in seconds\n                name: \"time\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Total accelerometer energy in the interval\n                name: \"energyTotal\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Count of zero crossings\n                name: \"zeroCrossCnt\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Instance ID of zero crossing algorithm\n                name: \"instance\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Total accelerometer time above threshold in the interval\n                name: \"timeAboveThreshold\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 25,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        78: {\n            num: 78, // Heart rate variability\n            name: \"hrv\",\n            messagesKey: \"hrvMesgs\",\n            fields: {\n            0: {\n                num: 0, // Time between beats\n                name: \"time\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1000,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        290: {\n            num: 290, // Array of heart beat intervals\n            name: \"beatIntervals\",\n            messagesKey: \"beatIntervalsMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Milliseconds past date_time\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Array of millisecond times between beats\n                name: \"time\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        370: {\n            num: 370,\n            name: \"hrvStatusSummary\",\n            messagesKey: \"hrvStatusSummaryMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // 7 day RMSSD average over sleep\n                name: \"weeklyAverage\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Last night RMSSD average over sleep\n                name: \"lastNightAverage\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // 5 minute high RMSSD value over sleep\n                name: \"lastNight5MinHigh\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // 3 week baseline, upper boundary of low HRV status\n                name: \"baselineLowUpper\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // 3 week baseline, lower boundary of balanced HRV status\n                name: \"baselineBalancedLower\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // 3 week baseline, upper boundary of balanced HRV status\n                name: \"baselineBalancedUpper\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"status\",\n                type: \"hrvStatus\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        371: {\n            num: 371,\n            name: \"hrvValue\",\n            messagesKey: \"hrvValueMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // 5 minute RMSSD\n                name: \"value\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 128,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        372: {\n            num: 372, // Raw Beat-to-Beat Interval values\n            name: \"rawBbi\",\n            messagesKey: \"rawBbiMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Millisecond resolution of the timestamp\n                name: \"timestampMs\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // 1 bit for gap indicator, 1 bit for quality indicator, and 14 bits for Beat-to-Beat interval values in whole-integer millisecond resolution\n                name: \"data\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ],\n                offset: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],\n                units: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", ],\n                bits: [14,1,1,14,1,1,14,1,1,14,1,1,14,1,1,14,1,1,14,1,1,14,1,1,14,1,1,14,1,1,14,1,1,14,1,1,14,1,1,14,1,1,14,1,1,],\n                    components: [\"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", \"2\", \"3\", \"4\", ],\n                    isAccumulated: false,\n                    hasComponents: true,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Array of millisecond times between beats\n                name: \"time\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"ms\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // 1 = high confidence. 0 = low confidence. N/A when gap = 1\n                name: \"quality\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // 1 = gap (time represents ms gap length). 0 = BBI data\n                name: \"gap\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: true,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        297: {\n            num: 297,\n            name: \"respirationRate\",\n            messagesKey: \"respirationRateMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0, // Breaths * 100 /min, -300 indicates invalid, -200 indicates large motion, -100 indicates off wrist\n                name: \"respirationRate\",\n                type: \"sint16\",\n                baseType: \"sint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"breaths/min\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        387: {\n            num: 387, // Specifically used for XERO products.\n            name: \"chronoShotSession\",\n            messagesKey: \"chronoShotSessionMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"minSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"maxSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"avgSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"shotCount\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4,\n                name: \"projectileType\",\n                type: \"projectileType\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5,\n                name: \"grainWeight\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 10,\n                offset: 0,\n                units: \"gr\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6,\n                name: \"standardDeviation\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        388: {\n            num: 388, // Specifically used for XERO products.\n            name: \"chronoShotData\",\n            messagesKey: \"chronoShotDataMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"shotSpeed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1000,\n                offset: 0,\n                units: \"m/s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"shotNum\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        319: {\n            num: 319,\n            name: \"tankUpdate\",\n            messagesKey: \"tankUpdateMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"sensor\",\n                type: \"antChannelId\",\n                baseType: \"uint32z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"pressure\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"bar\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        323: {\n            num: 323,\n            name: \"tankSummary\",\n            messagesKey: \"tankSummaryMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"s\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"sensor\",\n                type: \"antChannelId\",\n                baseType: \"uint32z\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1,\n                name: \"startPressure\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"bar\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2,\n                name: \"endPressure\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"bar\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3,\n                name: \"volumeUsed\",\n                type: \"uint32\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"L\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        346: {\n            num: 346,\n            name: \"sleepAssessment\",\n            messagesKey: \"sleepAssessmentMesgs\",\n            fields: {\n            0: {\n                num: 0, // Average of awake_time_score and awakenings_count_score. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"combinedAwakeScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // Score that evaluates the total time spent awake between sleep. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"awakeTimeScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // Score that evaluates the number of awakenings that interrupt sleep. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"awakeningsCountScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            3: {\n                num: 3, // Score that evaluates the amount of deep sleep. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"deepSleepScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Score that evaluates the quality of sleep based on sleep stages, heart-rate variability and possible awakenings during the night. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"sleepDurationScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            5: {\n                num: 5, // Score that evaluates the amount of light sleep. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"lightSleepScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            6: {\n                num: 6, // Total score that summarizes the overall quality of sleep, combining sleep duration and quality. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"overallSleepScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            7: {\n                num: 7, // Score that evaluates the quality of sleep based on sleep stages, heart-rate variability and possible awakenings during the night. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"sleepQualityScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            8: {\n                num: 8, // Score that evaluates stress and recovery during sleep. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"sleepRecoveryScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            9: {\n                num: 9, // Score that evaluates the amount of REM sleep. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"remSleepScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            10: {\n                num: 10, // Score that evaluates the amount of restlessness during sleep. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"sleepRestlessnessScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            11: {\n                num: 11, // The number of awakenings during sleep.\n                name: \"awakeningsCount\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            14: {\n                num: 14, // Score that evaluates the sleep interruptions. If valid: 0 (worst) to 100 (best). If unknown: FIT_UINT8_INVALID.\n                name: \"interruptionsScore\",\n                type: \"uint8\",\n                baseType: \"uint8\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            15: {\n                num: 15, // Excludes stress during awake periods in the sleep window\n                name: \"averageStressDuringSleep\",\n                type: \"uint16\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 100,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        470: {\n            num: 470,\n            name: \"sleepDisruptionSeverityPeriod\",\n            messagesKey: \"sleepDisruptionSeverityPeriodMesgs\",\n            fields: {\n            254: {\n                num: 254,\n                name: \"messageIndex\",\n                type: \"messageIndex\",\n                baseType: \"uint16\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"severity\",\n                type: \"sleepDisruptionSeverity\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        471: {\n            num: 471,\n            name: \"sleepDisruptionOvernightSeverity\",\n            messagesKey: \"sleepDisruptionOvernightSeverityMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"severity\",\n                type: \"sleepDisruptionSeverity\",\n                baseType: \"enum\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        398: {\n            num: 398,\n            name: \"skinTempOvernight\",\n            messagesKey: \"skinTempOvernightMesgs\",\n            fields: {\n            253: {\n                num: 253,\n                name: \"timestamp\",\n                type: \"dateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            0: {\n                num: 0,\n                name: \"localTimestamp\",\n                type: \"localDateTime\",\n                baseType: \"uint32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            1: {\n                num: 1, // The average overnight deviation from baseline temperature in degrees C\n                name: \"averageDeviation\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            2: {\n                num: 2, // The average 7 day overnight deviation from baseline temperature in degrees C\n                name: \"average7DayDeviation\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n            4: {\n                num: 4, // Final overnight temperature value\n                name: \"nightlyValue\",\n                type: \"float32\",\n                baseType: \"float32\",\n                array: false,\n                scale: 1,\n                offset: 0,\n                units: \"\",\n                bits: [],\n                    components: [],\n                    isAccumulated: false,\n                    hasComponents: false,\n                    subFields: []\n            },\n        },\n     },\n        105: {\n            num: 105,\n            name: \"pad\",\n            messagesKey: \"padMesgs\",\n            fields: {\n        },\n     },\n},\ntypes: {\n   file: {\n       1: \"device\", // Read only, single file. Must be in root directory.\n       2: \"settings\", // Read/write, single file. Directory=Settings\n       3: \"sport\", // Read/write, multiple files, file number = sport type. Directory=Sports\n       4: \"activity\", // Read/erase, multiple files. Directory=Activities\n       5: \"workout\", // Read/write/erase, multiple files. Directory=Workouts\n       6: \"course\", // Read/write/erase, multiple files. Directory=Courses\n       7: \"schedules\", // Read/write, single file. Directory=Schedules\n       9: \"weight\", // Read only, single file. Circular buffer. All message definitions at start of file. Directory=Weight\n       10: \"totals\", // Read only, single file. Directory=Totals\n       11: \"goals\", // Read/write, single file. Directory=Goals\n       14: \"bloodPressure\", // Read only. Directory=Blood Pressure\n       15: \"monitoringA\", // Read only. Directory=Monitoring. File number=sub type.\n       20: \"activitySummary\", // Read/erase, multiple files. Directory=Activities\n       28: \"monitoringDaily\",\n       32: \"monitoringB\", // Read only. Directory=Monitoring. File number=identifier\n       34: \"segment\", // Read/write/erase. Multiple Files. Directory=Segments\n       35: \"segmentList\", // Read/write/erase. Single File. Directory=Segments\n       40: \"exdConfiguration\", // Read/write/erase. Single File. Directory=Settings\n       0xF7: \"mfgRangeMin\", // 0xF7 - 0xFE reserved for manufacturer specific file types\n       0xFE: \"mfgRangeMax\", // 0xF7 - 0xFE reserved for manufacturer specific file types\n       },\n   mesgNum: {\n       0: \"fileId\",\n       1: \"capabilities\",\n       2: \"deviceSettings\",\n       3: \"userProfile\",\n       4: \"hrmProfile\",\n       5: \"sdmProfile\",\n       6: \"bikeProfile\",\n       7: \"zonesTarget\",\n       8: \"hrZone\",\n       9: \"powerZone\",\n       10: \"metZone\",\n       12: \"sport\",\n       13: \"trainingSettings\",\n       15: \"goal\",\n       18: \"session\",\n       19: \"lap\",\n       20: \"record\",\n       21: \"event\",\n       23: \"deviceInfo\",\n       26: \"workout\",\n       27: \"workoutStep\",\n       28: \"schedule\",\n       30: \"weightScale\",\n       31: \"course\",\n       32: \"coursePoint\",\n       33: \"totals\",\n       34: \"activity\",\n       35: \"software\",\n       37: \"fileCapabilities\",\n       38: \"mesgCapabilities\",\n       39: \"fieldCapabilities\",\n       49: \"fileCreator\",\n       51: \"bloodPressure\",\n       53: \"speedZone\",\n       55: \"monitoring\",\n       72: \"trainingFile\",\n       78: \"hrv\",\n       80: \"antRx\",\n       81: \"antTx\",\n       82: \"antChannelId\",\n       101: \"length\",\n       103: \"monitoringInfo\",\n       105: \"pad\",\n       106: \"slaveDevice\",\n       127: \"connectivity\",\n       128: \"weatherConditions\",\n       129: \"weatherAlert\",\n       131: \"cadenceZone\",\n       132: \"hr\",\n       142: \"segmentLap\",\n       145: \"memoGlob\",\n       148: \"segmentId\",\n       149: \"segmentLeaderboardEntry\",\n       150: \"segmentPoint\",\n       151: \"segmentFile\",\n       158: \"workoutSession\",\n       159: \"watchfaceSettings\",\n       160: \"gpsMetadata\",\n       161: \"cameraEvent\",\n       162: \"timestampCorrelation\",\n       164: \"gyroscopeData\",\n       165: \"accelerometerData\",\n       167: \"threeDSensorCalibration\",\n       169: \"videoFrame\",\n       174: \"obdiiData\",\n       177: \"nmeaSentence\",\n       178: \"aviationAttitude\",\n       184: \"video\",\n       185: \"videoTitle\",\n       186: \"videoDescription\",\n       187: \"videoClip\",\n       188: \"ohrSettings\",\n       200: \"exdScreenConfiguration\",\n       201: \"exdDataFieldConfiguration\",\n       202: \"exdDataConceptConfiguration\",\n       206: \"fieldDescription\",\n       207: \"developerDataId\",\n       208: \"magnetometerData\",\n       209: \"barometerData\",\n       210: \"oneDSensorCalibration\",\n       211: \"monitoringHrData\",\n       216: \"timeInZone\",\n       225: \"set\",\n       227: \"stressLevel\",\n       229: \"maxMetData\",\n       258: \"diveSettings\",\n       259: \"diveGas\",\n       262: \"diveAlarm\",\n       264: \"exerciseTitle\",\n       268: \"diveSummary\",\n       269: \"spo2Data\",\n       275: \"sleepLevel\",\n       285: \"jump\",\n       289: \"aadAccelFeatures\",\n       290: \"beatIntervals\",\n       297: \"respirationRate\",\n       302: \"hsaAccelerometerData\",\n       304: \"hsaStepData\",\n       305: \"hsaSpo2Data\",\n       306: \"hsaStressData\",\n       307: \"hsaRespirationData\",\n       308: \"hsaHeartRateData\",\n       312: \"split\",\n       313: \"splitSummary\",\n       314: \"hsaBodyBatteryData\",\n       315: \"hsaEvent\",\n       317: \"climbPro\",\n       319: \"tankUpdate\",\n       323: \"tankSummary\",\n       346: \"sleepAssessment\",\n       370: \"hrvStatusSummary\",\n       371: \"hrvValue\",\n       372: \"rawBbi\",\n       375: \"deviceAuxBatteryInfo\",\n       376: \"hsaGyroscopeData\",\n       387: \"chronoShotSession\",\n       388: \"chronoShotData\",\n       389: \"hsaConfigurationData\",\n       393: \"diveApneaAlarm\",\n       398: \"skinTempOvernight\",\n       409: \"hsaWristTemperatureData\", // Message number for the HSA wrist temperature data message\n       470: \"sleepDisruptionSeverityPeriod\",\n       471: \"sleepDisruptionOvernightSeverity\",\n       0xFF00: \"mfgRangeMin\", // 0xFF00 - 0xFFFE reserved for manufacturer specific messages\n       0xFFFE: \"mfgRangeMax\", // 0xFF00 - 0xFFFE reserved for manufacturer specific messages\n       },\n   checksum: {\n       0: \"clear\", // Allows clear of checksum for flash memory where can only write 1 to 0 without erasing sector.\n       1: \"ok\", // Set to mark checksum as valid if computes to invalid values 0 or 0xFF. Checksum can also be set to ok to save encoding computation time.\n       },\n   fileFlags: {\n       0x02: \"read\",\n       0x04: \"write\",\n       0x08: \"erase\",\n       },\n   mesgCount: {\n       0: \"numPerFile\",\n       1: \"maxPerFile\",\n       2: \"maxPerFileType\",\n       },\n   dateTime: {\n       0x10000000: \"min\", // if date_time is < 0x10000000 then it is system time (seconds from device power on)\n       },\n   localDateTime: {\n       0x10000000: \"min\", // if date_time is < 0x10000000 then it is system time (seconds from device power on)\n       },\n   messageIndex: {\n       0x8000: \"selected\", // message is selected if set\n       0x7000: \"reserved\", // reserved (default 0)\n       0x0FFF: \"mask\", // index\n       },\n   deviceIndex: {\n       0: \"creator\", // Creator of the file is always device index 0.\n       },\n   gender: {\n       0: \"female\",\n       1: \"male\",\n       },\n   language: {\n       0: \"english\",\n       1: \"french\",\n       2: \"italian\",\n       3: \"german\",\n       4: \"spanish\",\n       5: \"croatian\",\n       6: \"czech\",\n       7: \"danish\",\n       8: \"dutch\",\n       9: \"finnish\",\n       10: \"greek\",\n       11: \"hungarian\",\n       12: \"norwegian\",\n       13: \"polish\",\n       14: \"portuguese\",\n       15: \"slovakian\",\n       16: \"slovenian\",\n       17: \"swedish\",\n       18: \"russian\",\n       19: \"turkish\",\n       20: \"latvian\",\n       21: \"ukrainian\",\n       22: \"arabic\",\n       23: \"farsi\",\n       24: \"bulgarian\",\n       25: \"romanian\",\n       26: \"chinese\",\n       27: \"japanese\",\n       28: \"korean\",\n       29: \"taiwanese\",\n       30: \"thai\",\n       31: \"hebrew\",\n       32: \"brazilianPortuguese\",\n       33: \"indonesian\",\n       34: \"malaysian\",\n       35: \"vietnamese\",\n       36: \"burmese\",\n       37: \"mongolian\",\n       254: \"custom\",\n       },\n   languageBits0: {\n       0x01: \"english\",\n       0x02: \"french\",\n       0x04: \"italian\",\n       0x08: \"german\",\n       0x10: \"spanish\",\n       0x20: \"croatian\",\n       0x40: \"czech\",\n       0x80: \"danish\",\n       },\n   languageBits1: {\n       0x01: \"dutch\",\n       0x02: \"finnish\",\n       0x04: \"greek\",\n       0x08: \"hungarian\",\n       0x10: \"norwegian\",\n       0x20: \"polish\",\n       0x40: \"portuguese\",\n       0x80: \"slovakian\",\n       },\n   languageBits2: {\n       0x01: \"slovenian\",\n       0x02: \"swedish\",\n       0x04: \"russian\",\n       0x08: \"turkish\",\n       0x10: \"latvian\",\n       0x20: \"ukrainian\",\n       0x40: \"arabic\",\n       0x80: \"farsi\",\n       },\n   languageBits3: {\n       0x01: \"bulgarian\",\n       0x02: \"romanian\",\n       0x04: \"chinese\",\n       0x08: \"japanese\",\n       0x10: \"korean\",\n       0x20: \"taiwanese\",\n       0x40: \"thai\",\n       0x80: \"hebrew\",\n       },\n   languageBits4: {\n       0x01: \"brazilianPortuguese\",\n       0x02: \"indonesian\",\n       0x04: \"malaysian\",\n       0x08: \"vietnamese\",\n       0x10: \"burmese\",\n       0x20: \"mongolian\",\n       },\n   timeZone: {\n       0: \"almaty\",\n       1: \"bangkok\",\n       2: \"bombay\",\n       3: \"brasilia\",\n       4: \"cairo\",\n       5: \"capeVerdeIs\",\n       6: \"darwin\",\n       7: \"eniwetok\",\n       8: \"fiji\",\n       9: \"hongKong\",\n       10: \"islamabad\",\n       11: \"kabul\",\n       12: \"magadan\",\n       13: \"midAtlantic\",\n       14: \"moscow\",\n       15: \"muscat\",\n       16: \"newfoundland\",\n       17: \"samoa\",\n       18: \"sydney\",\n       19: \"tehran\",\n       20: \"tokyo\",\n       21: \"usAlaska\",\n       22: \"usAtlantic\",\n       23: \"usCentral\",\n       24: \"usEastern\",\n       25: \"usHawaii\",\n       26: \"usMountain\",\n       27: \"usPacific\",\n       28: \"other\",\n       29: \"auckland\",\n       30: \"kathmandu\",\n       31: \"europeWesternWet\",\n       32: \"europeCentralCet\",\n       33: \"europeEasternEet\",\n       34: \"jakarta\",\n       35: \"perth\",\n       36: \"adelaide\",\n       37: \"brisbane\",\n       38: \"tasmania\",\n       39: \"iceland\",\n       40: \"amsterdam\",\n       41: \"athens\",\n       42: \"barcelona\",\n       43: \"berlin\",\n       44: \"brussels\",\n       45: \"budapest\",\n       46: \"copenhagen\",\n       47: \"dublin\",\n       48: \"helsinki\",\n       49: \"lisbon\",\n       50: \"london\",\n       51: \"madrid\",\n       52: \"munich\",\n       53: \"oslo\",\n       54: \"paris\",\n       55: \"prague\",\n       56: \"reykjavik\",\n       57: \"rome\",\n       58: \"stockholm\",\n       59: \"vienna\",\n       60: \"warsaw\",\n       61: \"zurich\",\n       62: \"quebec\",\n       63: \"ontario\",\n       64: \"manitoba\",\n       65: \"saskatchewan\",\n       66: \"alberta\",\n       67: \"britishColumbia\",\n       68: \"boise\",\n       69: \"boston\",\n       70: \"chicago\",\n       71: \"dallas\",\n       72: \"denver\",\n       73: \"kansasCity\",\n       74: \"lasVegas\",\n       75: \"losAngeles\",\n       76: \"miami\",\n       77: \"minneapolis\",\n       78: \"newYork\",\n       79: \"newOrleans\",\n       80: \"phoenix\",\n       81: \"santaFe\",\n       82: \"seattle\",\n       83: \"washingtonDc\",\n       84: \"usArizona\",\n       85: \"chita\",\n       86: \"ekaterinburg\",\n       87: \"irkutsk\",\n       88: \"kaliningrad\",\n       89: \"krasnoyarsk\",\n       90: \"novosibirsk\",\n       91: \"petropavlovskKamchatskiy\",\n       92: \"samara\",\n       93: \"vladivostok\",\n       94: \"mexicoCentral\",\n       95: \"mexicoMountain\",\n       96: \"mexicoPacific\",\n       97: \"capeTown\",\n       98: \"winkhoek\",\n       99: \"lagos\",\n       100: \"riyahd\",\n       101: \"venezuela\",\n       102: \"australiaLh\",\n       103: \"santiago\",\n       253: \"manual\",\n       254: \"automatic\",\n       },\n   displayMeasure: {\n       0: \"metric\",\n       1: \"statute\",\n       2: \"nautical\",\n       },\n   displayHeart: {\n       0: \"bpm\",\n       1: \"max\",\n       2: \"reserve\",\n       },\n   displayPower: {\n       0: \"watts\",\n       1: \"percentFtp\",\n       },\n   displayPosition: {\n       0: \"degree\", // dd.dddddd\n       1: \"degreeMinute\", // dddmm.mmm\n       2: \"degreeMinuteSecond\", // dddmmss\n       3: \"austrianGrid\", // Austrian Grid (BMN)\n       4: \"britishGrid\", // British National Grid\n       5: \"dutchGrid\", // Dutch grid system\n       6: \"hungarianGrid\", // Hungarian grid system\n       7: \"finnishGrid\", // Finnish grid system Zone3 KKJ27\n       8: \"germanGrid\", // Gausss Krueger (German)\n       9: \"icelandicGrid\", // Icelandic Grid\n       10: \"indonesianEquatorial\", // Indonesian Equatorial LCO\n       11: \"indonesianIrian\", // Indonesian Irian LCO\n       12: \"indonesianSouthern\", // Indonesian Southern LCO\n       13: \"indiaZone0\", // India zone 0\n       14: \"indiaZoneIA\", // India zone IA\n       15: \"indiaZoneIB\", // India zone IB\n       16: \"indiaZoneIIA\", // India zone IIA\n       17: \"indiaZoneIIB\", // India zone IIB\n       18: \"indiaZoneIIIA\", // India zone IIIA\n       19: \"indiaZoneIIIB\", // India zone IIIB\n       20: \"indiaZoneIVA\", // India zone IVA\n       21: \"indiaZoneIVB\", // India zone IVB\n       22: \"irishTransverse\", // Irish Transverse Mercator\n       23: \"irishGrid\", // Irish Grid\n       24: \"loran\", // Loran TD\n       25: \"maidenheadGrid\", // Maidenhead grid system\n       26: \"mgrsGrid\", // MGRS grid system\n       27: \"newZealandGrid\", // New Zealand grid system\n       28: \"newZealandTransverse\", // New Zealand Transverse Mercator\n       29: \"qatarGrid\", // Qatar National Grid\n       30: \"modifiedSwedishGrid\", // Modified RT-90 (Sweden)\n       31: \"swedishGrid\", // RT-90 (Sweden)\n       32: \"southAfricanGrid\", // South African Grid\n       33: \"swissGrid\", // Swiss CH-1903 grid\n       34: \"taiwanGrid\", // Taiwan Grid\n       35: \"unitedStatesGrid\", // United States National Grid\n       36: \"utmUpsGrid\", // UTM/UPS grid system\n       37: \"westMalayan\", // West Malayan RSO\n       38: \"borneoRso\", // Borneo RSO\n       39: \"estonianGrid\", // Estonian grid system\n       40: \"latvianGrid\", // Latvian Transverse Mercator\n       41: \"swedishRef99Grid\", // Reference Grid 99 TM (Swedish)\n       },\n   switch: {\n       0: \"off\",\n       1: \"on\",\n       2: \"auto\",\n       },\n   sport: {\n       0: \"generic\",\n       1: \"running\",\n       2: \"cycling\",\n       3: \"transition\", // Mulitsport transition\n       4: \"fitnessEquipment\",\n       5: \"swimming\",\n       6: \"basketball\",\n       7: \"soccer\",\n       8: \"tennis\",\n       9: \"americanFootball\",\n       10: \"training\",\n       11: \"walking\",\n       12: \"crossCountrySkiing\",\n       13: \"alpineSkiing\",\n       14: \"snowboarding\",\n       15: \"rowing\",\n       16: \"mountaineering\",\n       17: \"hiking\",\n       18: \"multisport\",\n       19: \"paddling\",\n       20: \"flying\",\n       21: \"eBiking\",\n       22: \"motorcycling\",\n       23: \"boating\",\n       24: \"driving\",\n       25: \"golf\",\n       26: \"hangGliding\",\n       27: \"horsebackRiding\",\n       28: \"hunting\",\n       29: \"fishing\",\n       30: \"inlineSkating\",\n       31: \"rockClimbing\",\n       32: \"sailing\",\n       33: \"iceSkating\",\n       34: \"skyDiving\",\n       35: \"snowshoeing\",\n       36: \"snowmobiling\",\n       37: \"standUpPaddleboarding\",\n       38: \"surfing\",\n       39: \"wakeboarding\",\n       40: \"waterSkiing\",\n       41: \"kayaking\",\n       42: \"rafting\",\n       43: \"windsurfing\",\n       44: \"kitesurfing\",\n       45: \"tactical\",\n       46: \"jumpmaster\",\n       47: \"boxing\",\n       48: \"floorClimbing\",\n       49: \"baseball\",\n       53: \"diving\",\n       62: \"hiit\",\n       64: \"racket\",\n       65: \"wheelchairPushWalk\",\n       66: \"wheelchairPushRun\",\n       67: \"meditation\",\n       69: \"discGolf\",\n       71: \"cricket\",\n       72: \"rugby\",\n       73: \"hockey\",\n       74: \"lacrosse\",\n       75: \"volleyball\",\n       76: \"waterTubing\",\n       77: \"wakesurfing\",\n       80: \"mixedMartialArts\",\n       82: \"snorkeling\",\n       83: \"dance\",\n       84: \"jumpRope\",\n       254: \"all\", // All is for goals only to include all sports.\n       },\n   sportBits0: {\n       0x01: \"generic\",\n       0x02: \"running\",\n       0x04: \"cycling\",\n       0x08: \"transition\", // Mulitsport transition\n       0x10: \"fitnessEquipment\",\n       0x20: \"swimming\",\n       0x40: \"basketball\",\n       0x80: \"soccer\",\n       },\n   sportBits1: {\n       0x01: \"tennis\",\n       0x02: \"americanFootball\",\n       0x04: \"training\",\n       0x08: \"walking\",\n       0x10: \"crossCountrySkiing\",\n       0x20: \"alpineSkiing\",\n       0x40: \"snowboarding\",\n       0x80: \"rowing\",\n       },\n   sportBits2: {\n       0x01: \"mountaineering\",\n       0x02: \"hiking\",\n       0x04: \"multisport\",\n       0x08: \"paddling\",\n       0x10: \"flying\",\n       0x20: \"eBiking\",\n       0x40: \"motorcycling\",\n       0x80: \"boating\",\n       },\n   sportBits3: {\n       0x01: \"driving\",\n       0x02: \"golf\",\n       0x04: \"hangGliding\",\n       0x08: \"horsebackRiding\",\n       0x10: \"hunting\",\n       0x20: \"fishing\",\n       0x40: \"inlineSkating\",\n       0x80: \"rockClimbing\",\n       },\n   sportBits4: {\n       0x01: \"sailing\",\n       0x02: \"iceSkating\",\n       0x04: \"skyDiving\",\n       0x08: \"snowshoeing\",\n       0x10: \"snowmobiling\",\n       0x20: \"standUpPaddleboarding\",\n       0x40: \"surfing\",\n       0x80: \"wakeboarding\",\n       },\n   sportBits5: {\n       0x01: \"waterSkiing\",\n       0x02: \"kayaking\",\n       0x04: \"rafting\",\n       0x08: \"windsurfing\",\n       0x10: \"kitesurfing\",\n       0x20: \"tactical\",\n       0x40: \"jumpmaster\",\n       0x80: \"boxing\",\n       },\n   sportBits6: {\n       0x01: \"floorClimbing\",\n       },\n   subSport: {\n       0: \"generic\",\n       1: \"treadmill\", // Run/Fitness Equipment\n       2: \"street\", // Run\n       3: \"trail\", // Run\n       4: \"track\", // Run\n       5: \"spin\", // Cycling\n       6: \"indoorCycling\", // Cycling/Fitness Equipment\n       7: \"road\", // Cycling\n       8: \"mountain\", // Cycling\n       9: \"downhill\", // Cycling\n       10: \"recumbent\", // Cycling\n       11: \"cyclocross\", // Cycling\n       12: \"handCycling\", // Cycling\n       13: \"trackCycling\", // Cycling\n       14: \"indoorRowing\", // Fitness Equipment\n       15: \"elliptical\", // Fitness Equipment\n       16: \"stairClimbing\", // Fitness Equipment\n       17: \"lapSwimming\", // Swimming\n       18: \"openWater\", // Swimming\n       19: \"flexibilityTraining\", // Training\n       20: \"strengthTraining\", // Training\n       21: \"warmUp\", // Tennis\n       22: \"match\", // Tennis\n       23: \"exercise\", // Tennis\n       24: \"challenge\",\n       25: \"indoorSkiing\", // Fitness Equipment\n       26: \"cardioTraining\", // Training\n       27: \"indoorWalking\", // Walking/Fitness Equipment\n       28: \"eBikeFitness\", // E-Biking\n       29: \"bmx\", // Cycling\n       30: \"casualWalking\", // Walking\n       31: \"speedWalking\", // Walking\n       32: \"bikeToRunTransition\", // Transition\n       33: \"runToBikeTransition\", // Transition\n       34: \"swimToBikeTransition\", // Transition\n       35: \"atv\", // Motorcycling\n       36: \"motocross\", // Motorcycling\n       37: \"backcountry\", // Alpine Skiing/Snowboarding\n       38: \"resort\", // Alpine Skiing/Snowboarding\n       39: \"rcDrone\", // Flying\n       40: \"wingsuit\", // Flying\n       41: \"whitewater\", // Kayaking/Rafting\n       42: \"skateSkiing\", // Cross Country Skiing\n       43: \"yoga\", // Training\n       44: \"pilates\", // Fitness Equipment\n       45: \"indoorRunning\", // Run\n       46: \"gravelCycling\", // Cycling\n       47: \"eBikeMountain\", // Cycling\n       48: \"commuting\", // Cycling\n       49: \"mixedSurface\", // Cycling\n       50: \"navigate\",\n       51: \"trackMe\",\n       52: \"map\",\n       53: \"singleGasDiving\", // Diving\n       54: \"multiGasDiving\", // Diving\n       55: \"gaugeDiving\", // Diving\n       56: \"apneaDiving\", // Diving\n       57: \"apneaHunting\", // Diving\n       58: \"virtualActivity\",\n       59: \"obstacle\", // Used for events where participants run, crawl through mud, climb over walls, etc.\n       62: \"breathing\",\n       65: \"sailRace\", // Sailing\n       67: \"ultra\", // Ultramarathon\n       68: \"indoorClimbing\", // Climbing\n       69: \"bouldering\", // Climbing\n       70: \"hiit\", // High Intensity Interval Training\n       73: \"amrap\", // HIIT\n       74: \"emom\", // HIIT\n       75: \"tabata\", // HIIT\n       84: \"pickleball\", // Racket\n       85: \"padel\", // Racket\n       86: \"indoorWheelchairWalk\",\n       87: \"indoorWheelchairRun\",\n       88: \"indoorHandCycling\",\n       94: \"squash\",\n       95: \"badminton\",\n       96: \"racquetball\",\n       97: \"tableTennis\",\n       110: \"flyCanopy\", // Flying\n       111: \"flyParaglide\", // Flying\n       112: \"flyParamotor\", // Flying\n       113: \"flyPressurized\", // Flying\n       114: \"flyNavigate\", // Flying\n       115: \"flyTimer\", // Flying\n       116: \"flyAltimeter\", // Flying\n       117: \"flyWx\", // Flying\n       118: \"flyVfr\", // Flying\n       119: \"flyIfr\", // Flying\n       254: \"all\",\n       },\n   sportEvent: {\n       0: \"uncategorized\",\n       1: \"geocaching\",\n       2: \"fitness\",\n       3: \"recreation\",\n       4: \"race\",\n       5: \"specialEvent\",\n       6: \"training\",\n       7: \"transportation\",\n       8: \"touring\",\n       },\n   activity: {\n       0: \"manual\",\n       1: \"autoMultiSport\",\n       },\n   intensity: {\n       0: \"active\",\n       1: \"rest\",\n       2: \"warmup\",\n       3: \"cooldown\",\n       4: \"recovery\",\n       5: \"interval\",\n       6: \"other\",\n       },\n   sessionTrigger: {\n       0: \"activityEnd\",\n       1: \"manual\", // User changed sport.\n       2: \"autoMultiSport\", // Auto multi-sport feature is enabled and user pressed lap button to advance session.\n       3: \"fitnessEquipment\", // Auto sport change caused by user linking to fitness equipment.\n       },\n   autolapTrigger: {\n       0: \"time\",\n       1: \"distance\",\n       2: \"positionStart\",\n       3: \"positionLap\",\n       4: \"positionWaypoint\",\n       5: \"positionMarked\",\n       6: \"off\",\n       13: \"autoSelect\",\n       },\n   lapTrigger: {\n       0: \"manual\",\n       1: \"time\",\n       2: \"distance\",\n       3: \"positionStart\",\n       4: \"positionLap\",\n       5: \"positionWaypoint\",\n       6: \"positionMarked\",\n       7: \"sessionEnd\",\n       8: \"fitnessEquipment\",\n       },\n   timeMode: {\n       0: \"hour12\",\n       1: \"hour24\", // Does not use a leading zero and has a colon\n       2: \"military\", // Uses a leading zero and does not have a colon\n       3: \"hour12WithSeconds\",\n       4: \"hour24WithSeconds\",\n       5: \"utc\",\n       },\n   backlightMode: {\n       0: \"off\",\n       1: \"manual\",\n       2: \"keyAndMessages\",\n       3: \"autoBrightness\",\n       4: \"smartNotifications\",\n       5: \"keyAndMessagesNight\",\n       6: \"keyAndMessagesAndSmartNotifications\",\n       },\n   dateMode: {\n       0: \"dayMonth\",\n       1: \"monthDay\",\n       },\n   backlightTimeout: {\n       0: \"infinite\", // Backlight stays on forever.\n       },\n   event: {\n       0: \"timer\", // Group 0. Start / stop_all\n       3: \"workout\", // start / stop\n       4: \"workoutStep\", // Start at beginning of workout. Stop at end of each step.\n       5: \"powerDown\", // stop_all group 0\n       6: \"powerUp\", // stop_all group 0\n       7: \"offCourse\", // start / stop group 0\n       8: \"session\", // Stop at end of each session.\n       9: \"lap\", // Stop at end of each lap.\n       10: \"coursePoint\", // marker\n       11: \"battery\", // marker\n       12: \"virtualPartnerPace\", // Group 1. Start at beginning of activity if VP enabled, when VP pace is changed during activity or VP enabled mid activity. stop_disable when VP disabled.\n       13: \"hrHighAlert\", // Group 0. Start / stop when in alert condition.\n       14: \"hrLowAlert\", // Group 0. Start / stop when in alert condition.\n       15: \"speedHighAlert\", // Group 0. Start / stop when in alert condition.\n       16: \"speedLowAlert\", // Group 0. Start / stop when in alert condition.\n       17: \"cadHighAlert\", // Group 0. Start / stop when in alert condition.\n       18: \"cadLowAlert\", // Group 0. Start / stop when in alert condition.\n       19: \"powerHighAlert\", // Group 0. Start / stop when in alert condition.\n       20: \"powerLowAlert\", // Group 0. Start / stop when in alert condition.\n       21: \"recoveryHr\", // marker\n       22: \"batteryLow\", // marker\n       23: \"timeDurationAlert\", // Group 1. Start if enabled mid activity (not required at start of activity). Stop when duration is reached. stop_disable if disabled.\n       24: \"distanceDurationAlert\", // Group 1. Start if enabled mid activity (not required at start of activity). Stop when duration is reached. stop_disable if disabled.\n       25: \"calorieDurationAlert\", // Group 1. Start if enabled mid activity (not required at start of activity). Stop when duration is reached. stop_disable if disabled.\n       26: \"activity\", // Group 1.. Stop at end of activity.\n       27: \"fitnessEquipment\", // marker\n       28: \"length\", // Stop at end of each length.\n       32: \"userMarker\", // marker\n       33: \"sportPoint\", // marker\n       36: \"calibration\", // start/stop/marker\n       42: \"frontGearChange\", // marker\n       43: \"rearGearChange\", // marker\n       44: \"riderPositionChange\", // marker\n       45: \"elevHighAlert\", // Group 0. Start / stop when in alert condition.\n       46: \"elevLowAlert\", // Group 0. Start / stop when in alert condition.\n       47: \"commTimeout\", // marker\n       54: \"autoActivityDetect\", // marker\n       56: \"diveAlert\", // marker\n       57: \"diveGasSwitched\", // marker\n       71: \"tankPressureReserve\", // marker\n       72: \"tankPressureCritical\", // marker\n       73: \"tankLost\", // marker\n       75: \"radarThreatAlert\", // start/stop/marker\n       76: \"tankBatteryLow\", // marker\n       81: \"tankPodConnected\", // marker - tank pod has connected\n       82: \"tankPodDisconnected\", // marker - tank pod has lost connection\n       },\n   eventType: {\n       0: \"start\",\n       1: \"stop\",\n       2: \"consecutiveDepreciated\",\n       3: \"marker\",\n       4: \"stopAll\",\n       5: \"beginDepreciated\",\n       6: \"endDepreciated\",\n       7: \"endAllDepreciated\",\n       8: \"stopDisable\",\n       9: \"stopDisableAll\",\n       },\n   timerTrigger: {\n       0: \"manual\",\n       1: \"auto\",\n       2: \"fitnessEquipment\",\n       },\n   fitnessEquipmentState: {\n       0: \"ready\",\n       1: \"inUse\",\n       2: \"paused\",\n       3: \"unknown\", // lost connection to fitness equipment\n       },\n   tone: {\n       0: \"off\",\n       1: \"tone\",\n       2: \"vibrate\",\n       3: \"toneAndVibrate\",\n       },\n   autoscroll: {\n       0: \"none\",\n       1: \"slow\",\n       2: \"medium\",\n       3: \"fast\",\n       },\n   activityClass: {\n       0x7F: \"level\", // 0 to 100\n       100: \"levelMax\",\n       0x80: \"athlete\",\n       },\n   hrZoneCalc: {\n       0: \"custom\",\n       1: \"percentMaxHr\",\n       2: \"percentHrr\",\n       3: \"percentLthr\",\n       },\n   pwrZoneCalc: {\n       0: \"custom\",\n       1: \"percentFtp\",\n       },\n   wktStepDuration: {\n       0: \"time\",\n       1: \"distance\",\n       2: \"hrLessThan\",\n       3: \"hrGreaterThan\",\n       4: \"calories\",\n       5: \"open\",\n       6: \"repeatUntilStepsCmplt\",\n       7: \"repeatUntilTime\",\n       8: \"repeatUntilDistance\",\n       9: \"repeatUntilCalories\",\n       10: \"repeatUntilHrLessThan\",\n       11: \"repeatUntilHrGreaterThan\",\n       12: \"repeatUntilPowerLessThan\",\n       13: \"repeatUntilPowerGreaterThan\",\n       14: \"powerLessThan\",\n       15: \"powerGreaterThan\",\n       16: \"trainingPeaksTss\",\n       17: \"repeatUntilPowerLastLapLessThan\",\n       18: \"repeatUntilMaxPowerLastLapLessThan\",\n       19: \"power3sLessThan\",\n       20: \"power10sLessThan\",\n       21: \"power30sLessThan\",\n       22: \"power3sGreaterThan\",\n       23: \"power10sGreaterThan\",\n       24: \"power30sGreaterThan\",\n       25: \"powerLapLessThan\",\n       26: \"powerLapGreaterThan\",\n       27: \"repeatUntilTrainingPeaksTss\",\n       28: \"repetitionTime\",\n       29: \"reps\",\n       31: \"timeOnly\",\n       },\n   wktStepTarget: {\n       0: \"speed\",\n       1: \"heartRate\",\n       2: \"open\",\n       3: \"cadence\",\n       4: \"power\",\n       5: \"grade\",\n       6: \"resistance\",\n       7: \"power3s\",\n       8: \"power10s\",\n       9: \"power30s\",\n       10: \"powerLap\",\n       11: \"swimStroke\",\n       12: \"speedLap\",\n       13: \"heartRateLap\",\n       },\n   goal: {\n       0: \"time\",\n       1: \"distance\",\n       2: \"calories\",\n       3: \"frequency\",\n       4: \"steps\",\n       5: \"ascent\",\n       6: \"activeMinutes\",\n       },\n   goalRecurrence: {\n       0: \"off\",\n       1: \"daily\",\n       2: \"weekly\",\n       3: \"monthly\",\n       4: \"yearly\",\n       5: \"custom\",\n       },\n   goalSource: {\n       0: \"auto\", // Device generated\n       1: \"community\", // Social network sourced goal\n       2: \"user\", // Manually generated\n       },\n   schedule: {\n       0: \"workout\",\n       1: \"course\",\n       },\n   coursePoint: {\n       0: \"generic\",\n       1: \"summit\",\n       2: \"valley\",\n       3: \"water\",\n       4: \"food\",\n       5: \"danger\",\n       6: \"left\",\n       7: \"right\",\n       8: \"straight\",\n       9: \"firstAid\",\n       10: \"fourthCategory\",\n       11: \"thirdCategory\",\n       12: \"secondCategory\",\n       13: \"firstCategory\",\n       14: \"horsCategory\",\n       15: \"sprint\",\n       16: \"leftFork\",\n       17: \"rightFork\",\n       18: \"middleFork\",\n       19: \"slightLeft\",\n       20: \"sharpLeft\",\n       21: \"slightRight\",\n       22: \"sharpRight\",\n       23: \"uTurn\",\n       24: \"segmentStart\",\n       25: \"segmentEnd\",\n       27: \"campsite\",\n       28: \"aidStation\",\n       29: \"restArea\",\n       30: \"generalDistance\", // Used with UpAhead\n       31: \"service\",\n       32: \"energyGel\",\n       33: \"sportsDrink\",\n       34: \"mileMarker\",\n       35: \"checkpoint\",\n       36: \"shelter\",\n       37: \"meetingSpot\",\n       38: \"overlook\",\n       39: \"toilet\",\n       40: \"shower\",\n       41: \"gear\",\n       42: \"sharpCurve\",\n       43: \"steepIncline\",\n       44: \"tunnel\",\n       45: \"bridge\",\n       46: \"obstacle\",\n       47: \"crossing\",\n       48: \"store\",\n       49: \"transition\",\n       50: \"navaid\",\n       51: \"transport\",\n       52: \"alert\",\n       53: \"info\",\n       },\n   manufacturer: {\n       1: \"garmin\",\n       2: \"garminFr405Antfs\", // Do not use. Used by FR405 for ANTFS man id.\n       3: \"zephyr\",\n       4: \"dayton\",\n       5: \"idt\",\n       6: \"srm\",\n       7: \"quarq\",\n       8: \"ibike\",\n       9: \"saris\",\n       10: \"sparkHk\",\n       11: \"tanita\",\n       12: \"echowell\",\n       13: \"dynastreamOem\",\n       14: \"nautilus\",\n       15: \"dynastream\",\n       16: \"timex\",\n       17: \"metrigear\",\n       18: \"xelic\",\n       19: \"beurer\",\n       20: \"cardiosport\",\n       21: \"aAndD\",\n       22: \"hmm\",\n       23: \"suunto\",\n       24: \"thitaElektronik\",\n       25: \"gpulse\",\n       26: \"cleanMobile\",\n       27: \"pedalBrain\",\n       28: \"peaksware\",\n       29: \"saxonar\",\n       30: \"lemondFitness\",\n       31: \"dexcom\",\n       32: \"wahooFitness\",\n       33: \"octaneFitness\",\n       34: \"archinoetics\",\n       35: \"theHurtBox\",\n       36: \"citizenSystems\",\n       37: \"magellan\",\n       38: \"osynce\",\n       39: \"holux\",\n       40: \"concept2\",\n       41: \"shimano\",\n       42: \"oneGiantLeap\",\n       43: \"aceSensor\",\n       44: \"brimBrothers\",\n       45: \"xplova\",\n       46: \"perceptionDigital\",\n       47: \"bf1systems\",\n       48: \"pioneer\",\n       49: \"spantec\",\n       50: \"metalogics\",\n       51: \"4iiiis\",\n       52: \"seikoEpson\",\n       53: \"seikoEpsonOem\",\n       54: \"iforPowell\",\n       55: \"maxwellGuider\",\n       56: \"starTrac\",\n       57: \"breakaway\",\n       58: \"alatechTechnologyLtd\",\n       59: \"mioTechnologyEurope\",\n       60: \"rotor\",\n       61: \"geonaute\",\n       62: \"idBike\",\n       63: \"specialized\",\n       64: \"wtek\",\n       65: \"physicalEnterprises\",\n       66: \"northPoleEngineering\",\n       67: \"bkool\",\n       68: \"cateye\",\n       69: \"stagesCycling\",\n       70: \"sigmasport\",\n       71: \"tomtom\",\n       72: \"peripedal\",\n       73: \"wattbike\",\n       76: \"moxy\",\n       77: \"ciclosport\",\n       78: \"powerbahn\",\n       79: \"acornProjectsAps\",\n       80: \"lifebeam\",\n       81: \"bontrager\",\n       82: \"wellgo\",\n       83: \"scosche\",\n       84: \"magura\",\n       85: \"woodway\",\n       86: \"elite\",\n       87: \"nielsenKellerman\",\n       88: \"dkCity\",\n       89: \"tacx\",\n       90: \"directionTechnology\",\n       91: \"magtonic\",\n       92: \"1partcarbon\",\n       93: \"insideRideTechnologies\",\n       94: \"soundOfMotion\",\n       95: \"stryd\",\n       96: \"icg\", // Indoorcycling Group\n       97: \"miPulse\",\n       98: \"bsxAthletics\",\n       99: \"look\",\n       100: \"campagnoloSrl\",\n       101: \"bodyBikeSmart\",\n       102: \"praxisworks\",\n       103: \"limitsTechnology\", // Limits Technology Ltd.\n       104: \"topactionTechnology\", // TopAction Technology Inc.\n       105: \"cosinuss\",\n       106: \"fitcare\",\n       107: \"magene\",\n       108: \"giantManufacturingCo\",\n       109: \"tigrasport\", // Tigrasport\n       110: \"salutron\",\n       111: \"technogym\",\n       112: \"brytonSensors\",\n       113: \"latitudeLimited\",\n       114: \"soaringTechnology\",\n       115: \"igpsport\",\n       116: \"thinkrider\",\n       117: \"gopherSport\",\n       118: \"waterrower\",\n       119: \"orangetheory\",\n       120: \"inpeak\",\n       121: \"kinetic\",\n       122: \"johnsonHealthTech\",\n       123: \"polarElectro\",\n       124: \"seesense\",\n       125: \"nciTechnology\",\n       126: \"iqsquare\",\n       127: \"leomo\",\n       128: \"ifitCom\",\n       129: \"corosByte\",\n       130: \"versaDesign\",\n       131: \"chileaf\",\n       132: \"cycplus\",\n       133: \"gravaaByte\",\n       134: \"sigeyi\",\n       135: \"coospo\",\n       136: \"geoid\",\n       137: \"bosch\",\n       138: \"kyto\",\n       139: \"kineticSports\",\n       140: \"decathlonByte\",\n       141: \"tqSystems\",\n       142: \"tagHeuer\",\n       143: \"keiserFitness\",\n       144: \"zwiftByte\",\n       145: \"porscheEp\",\n       146: \"blackbird\",\n       147: \"meilanByte\",\n       148: \"ezon\",\n       149: \"laisi\",\n       150: \"myzone\",\n       151: \"abawo\",\n       152: \"bafang\",\n       153: \"luhongTechnology\",\n       255: \"development\",\n       257: \"healthandlife\",\n       258: \"lezyne\",\n       259: \"scribeLabs\",\n       260: \"zwift\",\n       261: \"watteam\",\n       262: \"recon\",\n       263: \"faveroElectronics\",\n       264: \"dynovelo\",\n       265: \"strava\",\n       266: \"precor\", // Amer Sports\n       267: \"bryton\",\n       268: \"sram\",\n       269: \"navman\", // MiTAC Global Corporation (Mio Technology)\n       270: \"cobi\", // COBI GmbH\n       271: \"spivi\",\n       272: \"mioMagellan\",\n       273: \"evesports\",\n       274: \"sensitivusGauge\",\n       275: \"podoon\",\n       276: \"lifeTimeFitness\",\n       277: \"falcoEMotors\", // Falco eMotors Inc.\n       278: \"minoura\",\n       279: \"cycliq\",\n       280: \"luxottica\",\n       281: \"trainerRoad\",\n       282: \"theSufferfest\",\n       283: \"fullspeedahead\",\n       284: \"virtualtraining\",\n       285: \"feedbacksports\",\n       286: \"omata\",\n       287: \"vdo\",\n       288: \"magneticdays\",\n       289: \"hammerhead\",\n       290: \"kineticByKurt\",\n       291: \"shapelog\",\n       292: \"dabuziduo\",\n       293: \"jetblack\",\n       294: \"coros\",\n       295: \"virtugo\",\n       296: \"velosense\",\n       297: \"cycligentinc\",\n       298: \"trailforks\",\n       299: \"mahleEbikemotion\",\n       300: \"nurvv\",\n       301: \"microprogram\",\n       302: \"zone5cloud\",\n       303: \"greenteg\",\n       304: \"yamahaMotors\",\n       305: \"whoop\",\n       306: \"gravaa\",\n       307: \"onelap\",\n       308: \"monarkExercise\",\n       309: \"form\",\n       310: \"decathlon\",\n       311: \"syncros\",\n       312: \"heatup\",\n       313: \"cannondale\",\n       314: \"trueFitness\",\n       315: \"rGTCycling\",\n       316: \"vasa\",\n       317: \"raceRepublic\",\n       318: \"fazua\",\n       319: \"orekaTraining\",\n       320: \"lsec\", // Lishun Electric & Communication\n       321: \"lululemonStudio\",\n       322: \"shanyue\",\n       323: \"spinningMda\",\n       324: \"hilldating\",\n       325: \"aeroSensor\",\n       326: \"nike\",\n       327: \"magicshine\",\n       328: \"ictrainer\",\n       329: \"absoluteCycling\",\n       330: \"eoSwimbetter\",\n       331: \"mywhoosh\",\n       332: \"ravemen\",\n       333: \"tektroRacingProducts\",\n       334: \"daradInnovationCorporation\",\n       335: \"cycloptim\",\n       337: \"runna\",\n       5759: \"actigraphcorp\",\n       },\n   garminProduct: {\n       1: \"hrm1\",\n       2: \"axh01\", // AXH01 HRM chipset\n       3: \"axb01\",\n       4: \"axb02\",\n       5: \"hrm2ss\",\n       6: \"dsiAlf02\",\n       7: \"hrm3ss\",\n       8: \"hrmRunSingleByteProductId\", // hrm_run model for HRM ANT+ messaging\n       9: \"bsm\", // BSM model for ANT+ messaging\n       10: \"bcm\", // BCM model for ANT+ messaging\n       11: \"axs01\", // AXS01 HRM Bike Chipset model for ANT+ messaging\n       12: \"hrmTriSingleByteProductId\", // hrm_tri model for HRM ANT+ messaging\n       13: \"hrm4RunSingleByteProductId\", // hrm4 run model for HRM ANT+ messaging\n       14: \"fr225SingleByteProductId\", // fr225 model for HRM ANT+ messaging\n       15: \"gen3BsmSingleByteProductId\", // gen3_bsm model for Bike Speed ANT+ messaging\n       16: \"gen3BcmSingleByteProductId\", // gen3_bcm model for Bike Cadence ANT+ messaging\n       22: \"hrmFitSingleByteProductId\",\n       255: \"oHR\", // Garmin Wearable Optical Heart Rate Sensor for ANT+ HR Profile Broadcasting\n       473: \"fr301China\",\n       474: \"fr301Japan\",\n       475: \"fr301Korea\",\n       494: \"fr301Taiwan\",\n       717: \"fr405\", // Forerunner 405\n       782: \"fr50\", // Forerunner 50\n       987: \"fr405Japan\",\n       988: \"fr60\", // Forerunner 60\n       1011: \"dsiAlf01\",\n       1018: \"fr310xt\", // Forerunner 310\n       1036: \"edge500\",\n       1124: \"fr110\", // Forerunner 110\n       1169: \"edge800\",\n       1199: \"edge500Taiwan\",\n       1213: \"edge500Japan\",\n       1253: \"chirp\",\n       1274: \"fr110Japan\",\n       1325: \"edge200\",\n       1328: \"fr910xt\",\n       1333: \"edge800Taiwan\",\n       1334: \"edge800Japan\",\n       1341: \"alf04\",\n       1345: \"fr610\",\n       1360: \"fr210Japan\",\n       1380: \"vectorSs\",\n       1381: \"vectorCp\",\n       1386: \"edge800China\",\n       1387: \"edge500China\",\n       1405: \"approachG10\",\n       1410: \"fr610Japan\",\n       1422: \"edge500Korea\",\n       1436: \"fr70\",\n       1446: \"fr310xt4t\",\n       1461: \"amx\",\n       1482: \"fr10\",\n       1497: \"edge800Korea\",\n       1499: \"swim\",\n       1537: \"fr910xtChina\",\n       1551: \"fenix\",\n       1555: \"edge200Taiwan\",\n       1561: \"edge510\",\n       1567: \"edge810\",\n       1570: \"tempe\",\n       1600: \"fr910xtJapan\",\n       1623: \"fr620\",\n       1632: \"fr220\",\n       1664: \"fr910xtKorea\",\n       1688: \"fr10Japan\",\n       1721: \"edge810Japan\",\n       1735: \"virbElite\",\n       1736: \"edgeTouring\", // Also Edge Touring Plus\n       1742: \"edge510Japan\",\n       1743: \"hrmTri\", // Also HRM-Swim\n       1752: \"hrmRun\",\n       1765: \"fr920xt\",\n       1821: \"edge510Asia\",\n       1822: \"edge810China\",\n       1823: \"edge810Taiwan\",\n       1836: \"edge1000\",\n       1837: \"vivoFit\",\n       1853: \"virbRemote\",\n       1885: \"vivoKi\",\n       1903: \"fr15\",\n       1907: \"vivoActive\",\n       1918: \"edge510Korea\",\n       1928: \"fr620Japan\",\n       1929: \"fr620China\",\n       1930: \"fr220Japan\",\n       1931: \"fr220China\",\n       1936: \"approachS6\",\n       1956: \"vivoSmart\",\n       1967: \"fenix2\",\n       1988: \"epix\",\n       2050: \"fenix3\",\n       2052: \"edge1000Taiwan\",\n       2053: \"edge1000Japan\",\n       2061: \"fr15Japan\",\n       2067: \"edge520\",\n       2070: \"edge1000China\",\n       2072: \"fr620Russia\",\n       2073: \"fr220Russia\",\n       2079: \"vectorS\",\n       2100: \"edge1000Korea\",\n       2130: \"fr920xtTaiwan\",\n       2131: \"fr920xtChina\",\n       2132: \"fr920xtJapan\",\n       2134: \"virbx\",\n       2135: \"vivoSmartApac\",\n       2140: \"etrexTouch\",\n       2147: \"edge25\",\n       2148: \"fr25\",\n       2150: \"vivoFit2\",\n       2153: \"fr225\",\n       2156: \"fr630\",\n       2157: \"fr230\",\n       2158: \"fr735xt\",\n       2160: \"vivoActiveApac\",\n       2161: \"vector2\",\n       2162: \"vector2s\",\n       2172: \"virbxe\",\n       2173: \"fr620Taiwan\",\n       2174: \"fr220Taiwan\",\n       2175: \"truswing\",\n       2187: \"d2airvenu\",\n       2188: \"fenix3China\",\n       2189: \"fenix3Twn\",\n       2192: \"variaHeadlight\",\n       2193: \"variaTaillightOld\",\n       2204: \"edgeExplore1000\",\n       2219: \"fr225Asia\",\n       2225: \"variaRadarTaillight\",\n       2226: \"variaRadarDisplay\",\n       2238: \"edge20\",\n       2260: \"edge520Asia\",\n       2261: \"edge520Japan\",\n       2262: \"d2Bravo\",\n       2266: \"approachS20\",\n       2271: \"vivoSmart2\",\n       2274: \"edge1000Thai\",\n       2276: \"variaRemote\",\n       2288: \"edge25Asia\",\n       2289: \"edge25Jpn\",\n       2290: \"edge20Asia\",\n       2292: \"approachX40\",\n       2293: \"fenix3Japan\",\n       2294: \"vivoSmartEmea\",\n       2310: \"fr630Asia\",\n       2311: \"fr630Jpn\",\n       2313: \"fr230Jpn\",\n       2327: \"hrm4Run\",\n       2332: \"epixJapan\",\n       2337: \"vivoActiveHr\",\n       2347: \"vivoSmartGpsHr\",\n       2348: \"vivoSmartHr\",\n       2361: \"vivoSmartHrAsia\",\n       2362: \"vivoSmartGpsHrAsia\",\n       2368: \"vivoMove\",\n       2379: \"variaTaillight\",\n       2396: \"fr235Asia\",\n       2397: \"fr235Japan\",\n       2398: \"variaVision\",\n       2406: \"vivoFit3\",\n       2407: \"fenix3Korea\",\n       2408: \"fenix3Sea\",\n       2413: \"fenix3Hr\",\n       2417: \"virbUltra30\",\n       2429: \"indexSmartScale\",\n       2431: \"fr235\",\n       2432: \"fenix3Chronos\",\n       2441: \"oregon7xx\",\n       2444: \"rino7xx\",\n       2457: \"epixKorea\",\n       2473: \"fenix3HrChn\",\n       2474: \"fenix3HrTwn\",\n       2475: \"fenix3HrJpn\",\n       2476: \"fenix3HrSea\",\n       2477: \"fenix3HrKor\",\n       2496: \"nautix\",\n       2497: \"vivoActiveHrApac\",\n       2503: \"fr35\",\n       2512: \"oregon7xxWw\",\n       2530: \"edge820\",\n       2531: \"edgeExplore820\",\n       2533: \"fr735xtApac\",\n       2534: \"fr735xtJapan\",\n       2544: \"fenix5s\",\n       2547: \"d2BravoTitanium\",\n       2567: \"variaUt800\", // Varia UT 800 SW\n       2593: \"runningDynamicsPod\",\n       2599: \"edge820China\",\n       2600: \"edge820Japan\",\n       2604: \"fenix5x\",\n       2606: \"vivoFitJr\",\n       2622: \"vivoSmart3\",\n       2623: \"vivoSport\",\n       2628: \"edge820Taiwan\",\n       2629: \"edge820Korea\",\n       2630: \"edge820Sea\",\n       2650: \"fr35Hebrew\",\n       2656: \"approachS60\",\n       2667: \"fr35Apac\",\n       2668: \"fr35Japan\",\n       2675: \"fenix3ChronosAsia\",\n       2687: \"virb360\",\n       2691: \"fr935\",\n       2697: \"fenix5\",\n       2700: \"vivoactive3\",\n       2733: \"fr235ChinaNfc\",\n       2769: \"foretrex601_701\",\n       2772: \"vivoMoveHr\",\n       2713: \"edge1030\",\n       2727: \"fr35Sea\",\n       2787: \"vector3\",\n       2796: \"fenix5Asia\",\n       2797: \"fenix5sAsia\",\n       2798: \"fenix5xAsia\",\n       2806: \"approachZ80\",\n       2814: \"fr35Korea\",\n       2819: \"d2charlie\",\n       2831: \"vivoSmart3Apac\",\n       2832: \"vivoSportApac\",\n       2833: \"fr935Asia\",\n       2859: \"descent\",\n       2878: \"vivoFit4\",\n       2886: \"fr645\",\n       2888: \"fr645m\",\n       2891: \"fr30\",\n       2900: \"fenix5sPlus\",\n       2909: \"edge130\",\n       2924: \"edge1030Asia\",\n       2927: \"vivosmart4\",\n       2945: \"vivoMoveHrAsia\",\n       2962: \"approachX10\",\n       2977: \"fr30Asia\",\n       2988: \"vivoactive3mW\",\n       3003: \"fr645Asia\",\n       3004: \"fr645mAsia\",\n       3011: \"edgeExplore\",\n       3028: \"gpsmap66\",\n       3049: \"approachS10\",\n       3066: \"vivoactive3mL\",\n       3076: \"fr245\",\n       3077: \"fr245Music\",\n       3085: \"approachG80\",\n       3092: \"edge130Asia\",\n       3095: \"edge1030Bontrager\",\n       3110: \"fenix5Plus\",\n       3111: \"fenix5xPlus\",\n       3112: \"edge520Plus\",\n       3113: \"fr945\",\n       3121: \"edge530\",\n       3122: \"edge830\",\n       3126: \"instinctEsports\",\n       3134: \"fenix5sPlusApac\",\n       3135: \"fenix5xPlusApac\",\n       3142: \"edge520PlusApac\",\n       3143: \"descentT1\",\n       3144: \"fr235lAsia\",\n       3145: \"fr245Asia\",\n       3163: \"vivoActive3mApac\",\n       3192: \"gen3Bsm\", // gen3 bike speed sensor\n       3193: \"gen3Bcm\", // gen3 bike cadence sensor\n       3218: \"vivoSmart4Asia\",\n       3224: \"vivoactive4Small\",\n       3225: \"vivoactive4Large\",\n       3226: \"venu\",\n       3246: \"marqDriver\",\n       3247: \"marqAviator\",\n       3248: \"marqCaptain\",\n       3249: \"marqCommander\",\n       3250: \"marqExpedition\",\n       3251: \"marqAthlete\",\n       3258: \"descentMk2\",\n       3282: \"fr45\",\n       3284: \"gpsmap66i\",\n       3287: \"fenix6SSport\",\n       3288: \"fenix6S\",\n       3289: \"fenix6Sport\",\n       3290: \"fenix6\",\n       3291: \"fenix6x\",\n       3299: \"hrmDual\", // HRM-Dual\n       3300: \"hrmPro\", // HRM-Pro\n       3308: \"vivoMove3Premium\",\n       3314: \"approachS40\",\n       3321: \"fr245mAsia\",\n       3349: \"edge530Apac\",\n       3350: \"edge830Apac\",\n       3378: \"vivoMove3\",\n       3387: \"vivoActive4SmallAsia\",\n       3388: \"vivoActive4LargeAsia\",\n       3389: \"vivoActive4OledAsia\",\n       3405: \"swim2\",\n       3420: \"marqDriverAsia\",\n       3421: \"marqAviatorAsia\",\n       3422: \"vivoMove3Asia\",\n       3441: \"fr945Asia\",\n       3446: \"vivoActive3tChn\",\n       3448: \"marqCaptainAsia\",\n       3449: \"marqCommanderAsia\",\n       3450: \"marqExpeditionAsia\",\n       3451: \"marqAthleteAsia\",\n       3461: \"indexSmartScale2\",\n       3466: \"instinctSolar\",\n       3469: \"fr45Asia\",\n       3473: \"vivoactive3Daimler\",\n       3498: \"legacyRey\",\n       3499: \"legacyDarthVader\",\n       3500: \"legacyCaptainMarvel\",\n       3501: \"legacyFirstAvenger\",\n       3512: \"fenix6sSportAsia\",\n       3513: \"fenix6sAsia\",\n       3514: \"fenix6SportAsia\",\n       3515: \"fenix6Asia\",\n       3516: \"fenix6xAsia\",\n       3535: \"legacyCaptainMarvelAsia\",\n       3536: \"legacyFirstAvengerAsia\",\n       3537: \"legacyReyAsia\",\n       3538: \"legacyDarthVaderAsia\",\n       3542: \"descentMk2s\",\n       3558: \"edge130Plus\",\n       3570: \"edge1030Plus\",\n       3578: \"rally200\", // Rally 100/200 Power Meter Series\n       3589: \"fr745\",\n       3596: \"venusqMusic\",\n       3599: \"venusqMusicV2\",\n       3600: \"venusq\",\n       3615: \"lily\",\n       3624: \"marqAdventurer\",\n       3638: \"enduro\",\n       3639: \"swim2Apac\",\n       3648: \"marqAdventurerAsia\",\n       3652: \"fr945Lte\",\n       3702: \"descentMk2Asia\", // Mk2 and Mk2i\n       3703: \"venu2\",\n       3704: \"venu2s\",\n       3737: \"venuDaimlerAsia\",\n       3739: \"marqGolfer\",\n       3740: \"venuDaimler\",\n       3794: \"fr745Asia\",\n       3808: \"variaRct715\",\n       3809: \"lilyAsia\",\n       3812: \"edge1030PlusAsia\",\n       3813: \"edge130PlusAsia\",\n       3823: \"approachS12\",\n       3872: \"enduroAsia\",\n       3837: \"venusqAsia\",\n       3843: \"edge1040\",\n       3850: \"marqGolferAsia\",\n       3851: \"venu2Plus\",\n       3865: \"gnss\", // Airoha AG3335M Family\n       3869: \"fr55\",\n       3888: \"instinct2\",\n       3889: \"instinct2s\",\n       3905: \"fenix7s\",\n       3906: \"fenix7\",\n       3907: \"fenix7x\",\n       3908: \"fenix7sApac\",\n       3909: \"fenix7Apac\",\n       3910: \"fenix7xApac\",\n        3927: \"approachG12\",\n       3930: \"descentMk2sAsia\",\n       3934: \"approachS42\",\n       3943: \"epixGen2\",\n       3944: \"epixGen2Apac\",\n       3949: \"venu2sAsia\",\n       3950: \"venu2Asia\",\n       3978: \"fr945LteAsia\",\n       3982: \"vivoMoveSport\",\n       3983: \"vivomoveTrend\",\n       3986: \"approachS12Asia\",\n       3990: \"fr255Music\",\n       3991: \"fr255SmallMusic\",\n       3992: \"fr255\",\n       3993: \"fr255Small\",\n        4001: \"approachG12Asia\",\n       4002: \"approachS42Asia\",\n       4005: \"descentG1\",\n       4017: \"venu2PlusAsia\",\n       4024: \"fr955\",\n       4033: \"fr55Asia\",\n       4061: \"edge540\",\n       4062: \"edge840\",\n       4063: \"vivosmart5\",\n       4071: \"instinct2Asia\",\n       4105: \"marqGen2\", // Adventurer, Athlete, Captain, Golfer\n       4115: \"venusq2\",\n       4116: \"venusq2music\",\n       4124: \"marqGen2Aviator\",\n       4125: \"d2AirX10\",\n       4130: \"hrmProPlus\",\n       4132: \"descentG1Asia\",\n       4135: \"tactix7\",\n       4155: \"instinctCrossover\",\n       4169: \"edgeExplore2\",\n       4222: \"descentMk3\",\n       4223: \"descentMk3i\",\n       4233: \"approachS70\",\n       4257: \"fr265Large\",\n       4258: \"fr265Small\",\n       4260: \"venu3\",\n       4261: \"venu3s\",\n       4265: \"tacxNeoSmart\", // Neo Smart, Tacx\n       4266: \"tacxNeo2Smart\", // Neo 2 Smart, Tacx\n       4267: \"tacxNeo2TSmart\", // Neo 2T Smart, Tacx\n       4268: \"tacxNeoSmartBike\", // Neo Smart Bike, Tacx\n       4269: \"tacxSatoriSmart\", // Satori Smart, Tacx\n       4270: \"tacxFlowSmart\", // Flow Smart, Tacx\n       4271: \"tacxVortexSmart\", // Vortex Smart, Tacx\n       4272: \"tacxBushidoSmart\", // Bushido Smart, Tacx\n       4273: \"tacxGeniusSmart\", // Genius Smart, Tacx\n       4274: \"tacxFluxFluxSSmart\", // Flux/Flux S Smart, Tacx\n       4275: \"tacxFlux2Smart\", // Flux 2 Smart, Tacx\n       4276: \"tacxMagnum\", // Magnum, Tacx\n       4305: \"edge1040Asia\",\n       4312: \"epixGen2Pro42\",\n       4313: \"epixGen2Pro47\",\n       4314: \"epixGen2Pro51\",\n       4315: \"fr965\",\n       4341: \"enduro2\",\n       4374: \"fenix7sProSolar\",\n       4375: \"fenix7ProSolar\",\n       4376: \"fenix7xProSolar\",\n       4380: \"lily2\",\n       4394: \"instinct2x\",\n       4426: \"vivoactive5\",\n       4432: \"fr165\",\n       4433: \"fr165Music\",\n       4440: \"edge1050\",\n       4442: \"descentT2\",\n       4446: \"hrmFit\",\n       4472: \"marqGen2Commander\",\n       4477: \"lilyAthlete\", // aka the Lily 2 Active\n       4532: \"fenix8Solar\",\n       4533: \"fenix8SolarLarge\",\n       4534: \"fenix8Small\",\n       4536: \"fenix8\",\n       4556: \"d2Mach1Pro\",\n       4575: \"enduro3\",\n       4583: \"instinctE40mm\",\n       4584: \"instinctE45mm\",\n       4585: \"instinct3Solar45mm\",\n       4586: \"instinct3Amoled45mm\",\n       4587: \"instinct3Amoled50mm\",\n       4588: \"descentG2\",\n       4603: \"venuX1\",\n       4606: \"hrm200\",\n       4625: \"vivoactive6\",\n       4647: \"approachS44\",\n       4655: \"edgeMtb\",\n       4656: \"approachS50\",\n       4666: \"fenixE\",\n       4759: \"instinct3Solar50mm\",\n       4775: \"tactix8Amoled\",\n       4776: \"tactix8Solar\",\n       10007: \"sdm4\", // SDM4 footpod\n       10014: \"edgeRemote\",\n       20533: \"tacxTrainingAppWin\",\n       20534: \"tacxTrainingAppMac\",\n       20565: \"tacxTrainingAppMacCatalyst\",\n       20119: \"trainingCenter\",\n       30045: \"tacxTrainingAppAndroid\",\n       30046: \"tacxTrainingAppIos\",\n       30047: \"tacxTrainingAppLegacy\",\n       65531: \"connectiqSimulator\",\n       65532: \"androidAntplusPlugin\",\n       65534: \"connect\", // Garmin Connect website\n       },\n   antplusDeviceType: {\n       1: \"antfs\",\n       11: \"bikePower\",\n       12: \"environmentSensorLegacy\",\n       15: \"multiSportSpeedDistance\",\n       16: \"control\",\n       17: \"fitnessEquipment\",\n       18: \"bloodPressure\",\n       19: \"geocacheNode\",\n       20: \"lightElectricVehicle\",\n       25: \"envSensor\",\n       26: \"racquet\",\n       27: \"controlHub\",\n       31: \"muscleOxygen\",\n       34: \"shifting\",\n       35: \"bikeLightMain\",\n       36: \"bikeLightShared\",\n       38: \"exd\",\n       40: \"bikeRadar\",\n       46: \"bikeAero\",\n       119: \"weightScale\",\n       120: \"heartRate\",\n       121: \"bikeSpeedCadence\",\n       122: \"bikeCadence\",\n       123: \"bikeSpeed\",\n       124: \"strideSpeedDistance\",\n       },\n   antNetwork: {\n       0: \"public\",\n       1: \"antplus\",\n       2: \"antfs\",\n       3: \"private\",\n       },\n   workoutCapabilities: {\n       0x00000001: \"interval\",\n       0x00000002: \"custom\",\n       0x00000004: \"fitnessEquipment\",\n       0x00000008: \"firstbeat\",\n       0x00000010: \"newLeaf\",\n       0x00000020: \"tcx\", // For backwards compatibility. Watch should add missing id fields then clear flag.\n       0x00000080: \"speed\", // Speed source required for workout step.\n       0x00000100: \"heartRate\", // Heart rate source required for workout step.\n       0x00000200: \"distance\", // Distance source required for workout step.\n       0x00000400: \"cadence\", // Cadence source required for workout step.\n       0x00000800: \"power\", // Power source required for workout step.\n       0x00001000: \"grade\", // Grade source required for workout step.\n       0x00002000: \"resistance\", // Resistance source required for workout step.\n       0x00004000: \"protected\",\n       },\n   batteryStatus: {\n       1: \"new\",\n       2: \"good\",\n       3: \"ok\",\n       4: \"low\",\n       5: \"critical\",\n       6: \"charging\",\n       7: \"unknown\",\n       },\n   hrType: {\n       0: \"normal\",\n       1: \"irregular\",\n       },\n   courseCapabilities: {\n       0x00000001: \"processed\",\n       0x00000002: \"valid\",\n       0x00000004: \"time\",\n       0x00000008: \"distance\",\n       0x00000010: \"position\",\n       0x00000020: \"heartRate\",\n       0x00000040: \"power\",\n       0x00000080: \"cadence\",\n       0x00000100: \"training\",\n       0x00000200: \"navigation\",\n       0x00000400: \"bikeway\",\n       0x00001000: \"aviation\", // Denote course files to be used as flight plans\n       },\n   weight: {\n       0xFFFE: \"calculating\",\n       },\n   workoutHr: {\n       100: \"bpmOffset\",\n       },\n   workoutPower: {\n       1000: \"wattsOffset\",\n       },\n   bpStatus: {\n       0: \"noError\",\n       1: \"errorIncompleteData\",\n       2: \"errorNoMeasurement\",\n       3: \"errorDataOutOfRange\",\n       4: \"errorIrregularHeartRate\",\n       },\n   userLocalId: {\n       0x0000: \"localMin\",\n       0x000F: \"localMax\",\n       0x0010: \"stationaryMin\",\n       0x00FF: \"stationaryMax\",\n       0x0100: \"portableMin\",\n       0xFFFE: \"portableMax\",\n       },\n   swimStroke: {\n       0: \"freestyle\",\n       1: \"backstroke\",\n       2: \"breaststroke\",\n       3: \"butterfly\",\n       4: \"drill\",\n       5: \"mixed\",\n       6: \"im\", // IM is a mixed interval containing the same number of lengths for each of: Butterfly, Backstroke, Breaststroke, Freestyle, swam in that order.\n       7: \"imByRound\", // For repeated workout steps, a new individual medly stroke is used for each round.\n       8: \"rimo\", // Reverse IM Order\n       },\n   activityType: {\n       0: \"generic\",\n       1: \"running\",\n       2: \"cycling\",\n       3: \"transition\", // Mulitsport transition\n       4: \"fitnessEquipment\",\n       5: \"swimming\",\n       6: \"walking\",\n       8: \"sedentary\",\n       254: \"all\", // All is for goals only to include all sports.\n       },\n   activitySubtype: {\n       0: \"generic\",\n       1: \"treadmill\", // Run\n       2: \"street\", // Run\n       3: \"trail\", // Run\n       4: \"track\", // Run\n       5: \"spin\", // Cycling\n       6: \"indoorCycling\", // Cycling\n       7: \"road\", // Cycling\n       8: \"mountain\", // Cycling\n       9: \"downhill\", // Cycling\n       10: \"recumbent\", // Cycling\n       11: \"cyclocross\", // Cycling\n       12: \"handCycling\", // Cycling\n       13: \"trackCycling\", // Cycling\n       14: \"indoorRowing\", // Fitness Equipment\n       15: \"elliptical\", // Fitness Equipment\n       16: \"stairClimbing\", // Fitness Equipment\n       17: \"lapSwimming\", // Swimming\n       18: \"openWater\", // Swimming\n       254: \"all\",\n       },\n   activityLevel: {\n       0: \"low\",\n       1: \"medium\",\n       2: \"high\",\n       },\n   side: {\n       0: \"right\",\n       1: \"left\",\n       },\n   leftRightBalance: {\n       0x7F: \"mask\", // % contribution\n       0x80: \"right\", // data corresponds to right if set, otherwise unknown\n       },\n   leftRightBalance100: {\n       0x3FFF: \"mask\", // % contribution scaled by 100\n       0x8000: \"right\", // data corresponds to right if set, otherwise unknown\n       },\n   lengthType: {\n       0: \"idle\", // Rest period. Length with no strokes\n       1: \"active\", // Length with strokes.\n       },\n   dayOfWeek: {\n       0: \"sunday\",\n       1: \"monday\",\n       2: \"tuesday\",\n       3: \"wednesday\",\n       4: \"thursday\",\n       5: \"friday\",\n       6: \"saturday\",\n       },\n   connectivityCapabilities: {\n       0x00000001: \"bluetooth\",\n       0x00000002: \"bluetoothLe\",\n       0x00000004: \"ant\",\n       0x00000008: \"activityUpload\",\n       0x00000010: \"courseDownload\",\n       0x00000020: \"workoutDownload\",\n       0x00000040: \"liveTrack\",\n       0x00000080: \"weatherConditions\",\n       0x00000100: \"weatherAlerts\",\n       0x00000200: \"gpsEphemerisDownload\",\n       0x00000400: \"explicitArchive\",\n       0x00000800: \"setupIncomplete\",\n       0x00001000: \"continueSyncAfterSoftwareUpdate\",\n       0x00002000: \"connectIqAppDownload\",\n       0x00004000: \"golfCourseDownload\",\n       0x00008000: \"deviceInitiatesSync\", // Indicates device is in control of initiating all syncs\n       0x00010000: \"connectIqWatchAppDownload\",\n       0x00020000: \"connectIqWidgetDownload\",\n       0x00040000: \"connectIqWatchFaceDownload\",\n       0x00080000: \"connectIqDataFieldDownload\",\n       0x00100000: \"connectIqAppManagment\", // Device supports delete and reorder of apps via GCM\n       0x00200000: \"swingSensor\",\n       0x00400000: \"swingSensorRemote\",\n       0x00800000: \"incidentDetection\", // Device supports incident detection\n       0x01000000: \"audioPrompts\",\n       0x02000000: \"wifiVerification\", // Device supports reporting wifi verification via GCM\n       0x04000000: \"trueUp\", // Device supports True Up\n       0x08000000: \"findMyWatch\", // Device supports Find My Watch\n       0x10000000: \"remoteManualSync\",\n       0x20000000: \"liveTrackAutoStart\", // Device supports LiveTrack auto start\n       0x40000000: \"liveTrackMessaging\", // Device supports LiveTrack Messaging\n       0x80000000: \"instantInput\", // Device supports instant input feature\n       },\n   weatherReport: {\n       0: \"current\",\n       1: \"forecast\", // Deprecated use hourly_forecast instead\n       1: \"hourlyForecast\",\n       2: \"dailyForecast\",\n       },\n   weatherStatus: {\n       0: \"clear\",\n       1: \"partlyCloudy\",\n       2: \"mostlyCloudy\",\n       3: \"rain\",\n       4: \"snow\",\n       5: \"windy\",\n       6: \"thunderstorms\",\n       7: \"wintryMix\",\n       8: \"fog\",\n       11: \"hazy\",\n       12: \"hail\",\n       13: \"scatteredShowers\",\n       14: \"scatteredThunderstorms\",\n       15: \"unknownPrecipitation\",\n       16: \"lightRain\",\n       17: \"heavyRain\",\n       18: \"lightSnow\",\n       19: \"heavySnow\",\n       20: \"lightRainSnow\",\n       21: \"heavyRainSnow\",\n       22: \"cloudy\",\n       },\n   weatherSeverity: {\n       0: \"unknown\",\n       1: \"warning\",\n       2: \"watch\",\n       3: \"advisory\",\n       4: \"statement\",\n       },\n   weatherSevereType: {\n       0: \"unspecified\",\n       1: \"tornado\",\n       2: \"tsunami\",\n       3: \"hurricane\",\n       4: \"extremeWind\",\n       5: \"typhoon\",\n       6: \"inlandHurricane\",\n       7: \"hurricaneForceWind\",\n       8: \"waterspout\",\n       9: \"severeThunderstorm\",\n       10: \"wreckhouseWinds\",\n       11: \"lesSuetesWind\",\n       12: \"avalanche\",\n       13: \"flashFlood\",\n       14: \"tropicalStorm\",\n       15: \"inlandTropicalStorm\",\n       16: \"blizzard\",\n       17: \"iceStorm\",\n       18: \"freezingRain\",\n       19: \"debrisFlow\",\n       20: \"flashFreeze\",\n       21: \"dustStorm\",\n       22: \"highWind\",\n       23: \"winterStorm\",\n       24: \"heavyFreezingSpray\",\n       25: \"extremeCold\",\n       26: \"windChill\",\n       27: \"coldWave\",\n       28: \"heavySnowAlert\",\n       29: \"lakeEffectBlowingSnow\",\n       30: \"snowSquall\",\n       31: \"lakeEffectSnow\",\n       32: \"winterWeather\",\n       33: \"sleet\",\n       34: \"snowfall\",\n       35: \"snowAndBlowingSnow\",\n       36: \"blowingSnow\",\n       37: \"snowAlert\",\n       38: \"arcticOutflow\",\n       39: \"freezingDrizzle\",\n       40: \"storm\",\n       41: \"stormSurge\",\n       42: \"rainfall\",\n       43: \"arealFlood\",\n       44: \"coastalFlood\",\n       45: \"lakeshoreFlood\",\n       46: \"excessiveHeat\",\n       47: \"heat\",\n       48: \"weather\",\n       49: \"highHeatAndHumidity\",\n       50: \"humidexAndHealth\",\n       51: \"humidex\",\n       52: \"gale\",\n       53: \"freezingSpray\",\n       54: \"specialMarine\",\n       55: \"squall\",\n       56: \"strongWind\",\n       57: \"lakeWind\",\n       58: \"marineWeather\",\n       59: \"wind\",\n       60: \"smallCraftHazardousSeas\",\n       61: \"hazardousSeas\",\n       62: \"smallCraft\",\n       63: \"smallCraftWinds\",\n       64: \"smallCraftRoughBar\",\n       65: \"highWaterLevel\",\n       66: \"ashfall\",\n       67: \"freezingFog\",\n       68: \"denseFog\",\n       69: \"denseSmoke\",\n       70: \"blowingDust\",\n       71: \"hardFreeze\",\n       72: \"freeze\",\n       73: \"frost\",\n       74: \"fireWeather\",\n       75: \"flood\",\n       76: \"ripTide\",\n       77: \"highSurf\",\n       78: \"smog\",\n       79: \"airQuality\",\n       80: \"briskWind\",\n       81: \"airStagnation\",\n       82: \"lowWater\",\n       83: \"hydrological\",\n       84: \"specialWeather\",\n       },\n   timeIntoDay: {\n       },\n   localtimeIntoDay: {\n       },\n   strokeType: {\n       0: \"noEvent\",\n       1: \"other\", // stroke was detected but cannot be identified\n       2: \"serve\",\n       3: \"forehand\",\n       4: \"backhand\",\n       5: \"smash\",\n       },\n   bodyLocation: {\n       0: \"leftLeg\",\n       1: \"leftCalf\",\n       2: \"leftShin\",\n       3: \"leftHamstring\",\n       4: \"leftQuad\",\n       5: \"leftGlute\",\n       6: \"rightLeg\",\n       7: \"rightCalf\",\n       8: \"rightShin\",\n       9: \"rightHamstring\",\n       10: \"rightQuad\",\n       11: \"rightGlute\",\n       12: \"torsoBack\",\n       13: \"leftLowerBack\",\n       14: \"leftUpperBack\",\n       15: \"rightLowerBack\",\n       16: \"rightUpperBack\",\n       17: \"torsoFront\",\n       18: \"leftAbdomen\",\n       19: \"leftChest\",\n       20: \"rightAbdomen\",\n       21: \"rightChest\",\n       22: \"leftArm\",\n       23: \"leftShoulder\",\n       24: \"leftBicep\",\n       25: \"leftTricep\",\n       26: \"leftBrachioradialis\", // Left anterior forearm\n       27: \"leftForearmExtensors\", // Left posterior forearm\n       28: \"rightArm\",\n       29: \"rightShoulder\",\n       30: \"rightBicep\",\n       31: \"rightTricep\",\n       32: \"rightBrachioradialis\", // Right anterior forearm\n       33: \"rightForearmExtensors\", // Right posterior forearm\n       34: \"neck\",\n       35: \"throat\",\n       36: \"waistMidBack\",\n       37: \"waistFront\",\n       38: \"waistLeft\",\n       39: \"waistRight\",\n       },\n   segmentLapStatus: {\n       0: \"end\",\n       1: \"fail\",\n       },\n   segmentLeaderboardType: {\n       0: \"overall\",\n       1: \"personalBest\",\n       2: \"connections\",\n       3: \"group\",\n       4: \"challenger\",\n       5: \"kom\",\n       6: \"qom\",\n       7: \"pr\",\n       8: \"goal\",\n       9: \"carrot\",\n       10: \"clubLeader\",\n       11: \"rival\",\n       12: \"last\",\n       13: \"recentBest\",\n       14: \"courseRecord\",\n       },\n   segmentDeleteStatus: {\n       0: \"doNotDelete\",\n       1: \"deleteOne\",\n       2: \"deleteAll\",\n       },\n   segmentSelectionType: {\n       0: \"starred\",\n       1: \"suggested\",\n       },\n   sourceType: {\n       0: \"ant\", // External device connected with ANT\n       1: \"antplus\", // External device connected with ANT+\n       2: \"bluetooth\", // External device connected with BT\n       3: \"bluetoothLowEnergy\", // External device connected with BLE\n       4: \"wifi\", // External device connected with Wifi\n       5: \"local\", // Onboard device\n       },\n   localDeviceType: {\n       0: \"gps\", // Onboard gps receiver\n       1: \"glonass\", // Onboard glonass receiver\n       2: \"gpsGlonass\", // Onboard gps glonass receiver\n       3: \"accelerometer\", // Onboard sensor\n       4: \"barometer\", // Onboard sensor\n       5: \"temperature\", // Onboard sensor\n       10: \"whr\", // Onboard wrist HR sensor\n       12: \"sensorHub\", // Onboard software package\n       },\n   bleDeviceType: {\n       0: \"connectedGps\", // GPS that is provided over a proprietary bluetooth service\n       1: \"heartRate\",\n       2: \"bikePower\",\n       3: \"bikeSpeedCadence\",\n       4: \"bikeSpeed\",\n       5: \"bikeCadence\",\n       6: \"footpod\",\n       7: \"bikeTrainer\", // Indoor-Bike FTMS protocol\n       },\n   antChannelId: {\n       0xF0000000: \"antExtendedDeviceNumberUpperNibble\",\n       0x0F000000: \"antTransmissionTypeLowerNibble\",\n       0x00FF0000: \"antDeviceType\",\n       0x0000FFFF: \"antDeviceNumber\",\n       },\n   displayOrientation: {\n       0: \"auto\", // automatic if the device supports it\n       1: \"portrait\",\n       2: \"landscape\",\n       3: \"portraitFlipped\", // portrait mode but rotated 180 degrees\n       4: \"landscapeFlipped\", // landscape mode but rotated 180 degrees\n       },\n   workoutEquipment: {\n       0: \"none\",\n       1: \"swimFins\",\n       2: \"swimKickboard\",\n       3: \"swimPaddles\",\n       4: \"swimPullBuoy\",\n       5: \"swimSnorkel\",\n       },\n   watchfaceMode: {\n       0: \"digital\",\n       1: \"analog\",\n       2: \"connectIq\",\n       3: \"disabled\",\n       },\n   digitalWatchfaceLayout: {\n       0: \"traditional\",\n       1: \"modern\",\n       2: \"bold\",\n       },\n   analogWatchfaceLayout: {\n       0: \"minimal\",\n       1: \"traditional\",\n       2: \"modern\",\n       },\n   riderPositionType: {\n       0: \"seated\",\n       1: \"standing\",\n       2: \"transitionToSeated\",\n       3: \"transitionToStanding\",\n       },\n   powerPhaseType: {\n       0: \"powerPhaseStartAngle\",\n       1: \"powerPhaseEndAngle\",\n       2: \"powerPhaseArcLength\",\n       3: \"powerPhaseCenter\",\n       },\n   cameraEventType: {\n       0: \"videoStart\", // Start of video recording\n       1: \"videoSplit\", // Mark of video file split (end of one file, beginning of the other)\n       2: \"videoEnd\", // End of video recording\n       3: \"photoTaken\", // Still photo taken\n       4: \"videoSecondStreamStart\",\n       5: \"videoSecondStreamSplit\",\n       6: \"videoSecondStreamEnd\",\n       7: \"videoSplitStart\", // Mark of video file split start\n       8: \"videoSecondStreamSplitStart\",\n       11: \"videoPause\", // Mark when a video recording has been paused\n       12: \"videoSecondStreamPause\",\n       13: \"videoResume\", // Mark when a video recording has been resumed\n       14: \"videoSecondStreamResume\",\n       },\n   sensorType: {\n       0: \"accelerometer\",\n       1: \"gyroscope\",\n       2: \"compass\", // Magnetometer\n       3: \"barometer\",\n       },\n   bikeLightNetworkConfigType: {\n       0: \"auto\",\n       4: \"individual\",\n       5: \"highVisibility\",\n       6: \"trail\",\n       },\n   commTimeoutType: {\n       0: \"wildcardPairingTimeout\", // Timeout pairing to any device\n       1: \"pairingTimeout\", // Timeout pairing to previously paired device\n       2: \"connectionLost\", // Temporary loss of communications\n       3: \"connectionTimeout\", // Connection closed due to extended bad communications\n       },\n   cameraOrientationType: {\n       0: \"cameraOrientation0\",\n       1: \"cameraOrientation90\",\n       2: \"cameraOrientation180\",\n       3: \"cameraOrientation270\",\n       },\n   attitudeStage: {\n       0: \"failed\",\n       1: \"aligning\",\n       2: \"degraded\",\n       3: \"valid\",\n       },\n   attitudeValidity: {\n       0x0001: \"trackAngleHeadingValid\",\n       0x0002: \"pitchValid\",\n       0x0004: \"rollValid\",\n       0x0008: \"lateralBodyAccelValid\",\n       0x0010: \"normalBodyAccelValid\",\n       0x0020: \"turnRateValid\",\n       0x0040: \"hwFail\",\n       0x0080: \"magInvalid\",\n       0x0100: \"noGps\",\n       0x0200: \"gpsInvalid\",\n       0x0400: \"solutionCoasting\",\n       0x0800: \"trueTrackAngle\",\n       0x1000: \"magneticHeading\",\n       },\n   autoSyncFrequency: {\n       0: \"never\",\n       1: \"occasionally\",\n       2: \"frequent\",\n       3: \"onceADay\",\n       4: \"remote\",\n       },\n   exdLayout: {\n       0: \"fullScreen\",\n       1: \"halfVertical\",\n       2: \"halfHorizontal\",\n       3: \"halfVerticalRightSplit\",\n       4: \"halfHorizontalBottomSplit\",\n       5: \"fullQuarterSplit\",\n       6: \"halfVerticalLeftSplit\",\n       7: \"halfHorizontalTopSplit\",\n       8: \"dynamic\", // The EXD may display the configured concepts in any layout it sees fit.\n       },\n   exdDisplayType: {\n       0: \"numerical\",\n       1: \"simple\",\n       2: \"graph\",\n       3: \"bar\",\n       4: \"circleGraph\",\n       5: \"virtualPartner\",\n       6: \"balance\",\n       7: \"stringList\",\n       8: \"string\",\n       9: \"simpleDynamicIcon\",\n       10: \"gauge\",\n       },\n   exdDataUnits: {\n       0: \"noUnits\",\n       1: \"laps\",\n       2: \"milesPerHour\",\n       3: \"kilometersPerHour\",\n       4: \"feetPerHour\",\n       5: \"metersPerHour\",\n       6: \"degreesCelsius\",\n       7: \"degreesFarenheit\",\n       8: \"zone\",\n       9: \"gear\",\n       10: \"rpm\",\n       11: \"bpm\",\n       12: \"degrees\",\n       13: \"millimeters\",\n       14: \"meters\",\n       15: \"kilometers\",\n       16: \"feet\",\n       17: \"yards\",\n       18: \"kilofeet\",\n       19: \"miles\",\n       20: \"time\",\n       21: \"enumTurnType\",\n       22: \"percent\",\n       23: \"watts\",\n       24: \"wattsPerKilogram\",\n       25: \"enumBatteryStatus\",\n       26: \"enumBikeLightBeamAngleMode\",\n       27: \"enumBikeLightBatteryStatus\",\n       28: \"enumBikeLightNetworkConfigType\",\n       29: \"lights\",\n       30: \"seconds\",\n       31: \"minutes\",\n       32: \"hours\",\n       33: \"calories\",\n       34: \"kilojoules\",\n       35: \"milliseconds\",\n       36: \"secondPerMile\",\n       37: \"secondPerKilometer\",\n       38: \"centimeter\",\n       39: \"enumCoursePoint\",\n       40: \"bradians\",\n       41: \"enumSport\",\n       42: \"inchesHg\",\n       43: \"mmHg\",\n       44: \"mbars\",\n       45: \"hectoPascals\",\n       46: \"feetPerMin\",\n       47: \"metersPerMin\",\n       48: \"metersPerSec\",\n       49: \"eightCardinal\",\n       },\n   exdQualifiers: {\n       0: \"noQualifier\",\n       1: \"instantaneous\",\n       2: \"average\",\n       3: \"lap\",\n       4: \"maximum\",\n       5: \"maximumAverage\",\n       6: \"maximumLap\",\n       7: \"lastLap\",\n       8: \"averageLap\",\n       9: \"toDestination\",\n       10: \"toGo\",\n       11: \"toNext\",\n       12: \"nextCoursePoint\",\n       13: \"total\",\n       14: \"threeSecondAverage\",\n       15: \"tenSecondAverage\",\n       16: \"thirtySecondAverage\",\n       17: \"percentMaximum\",\n       18: \"percentMaximumAverage\",\n       19: \"lapPercentMaximum\",\n       20: \"elapsed\",\n       21: \"sunrise\",\n       22: \"sunset\",\n       23: \"comparedToVirtualPartner\",\n       24: \"maximum24h\",\n       25: \"minimum24h\",\n       26: \"minimum\",\n       27: \"first\",\n       28: \"second\",\n       29: \"third\",\n       30: \"shifter\",\n       31: \"lastSport\",\n       32: \"moving\",\n       33: \"stopped\",\n       34: \"estimatedTotal\",\n       242: \"zone9\",\n       243: \"zone8\",\n       244: \"zone7\",\n       245: \"zone6\",\n       246: \"zone5\",\n       247: \"zone4\",\n       248: \"zone3\",\n       249: \"zone2\",\n       250: \"zone1\",\n       },\n   exdDescriptors: {\n       0: \"bikeLightBatteryStatus\",\n       1: \"beamAngleStatus\",\n       2: \"bateryLevel\",\n       3: \"lightNetworkMode\",\n       4: \"numberLightsConnected\",\n       5: \"cadence\",\n       6: \"distance\",\n       7: \"estimatedTimeOfArrival\",\n       8: \"heading\",\n       9: \"time\",\n       10: \"batteryLevel\",\n       11: \"trainerResistance\",\n       12: \"trainerTargetPower\",\n       13: \"timeSeated\",\n       14: \"timeStanding\",\n       15: \"elevation\",\n       16: \"grade\",\n       17: \"ascent\",\n       18: \"descent\",\n       19: \"verticalSpeed\",\n       20: \"di2BatteryLevel\",\n       21: \"frontGear\",\n       22: \"rearGear\",\n       23: \"gearRatio\",\n       24: \"heartRate\",\n       25: \"heartRateZone\",\n       26: \"timeInHeartRateZone\",\n       27: \"heartRateReserve\",\n       28: \"calories\",\n       29: \"gpsAccuracy\",\n       30: \"gpsSignalStrength\",\n       31: \"temperature\",\n       32: \"timeOfDay\",\n       33: \"balance\",\n       34: \"pedalSmoothness\",\n       35: \"power\",\n       36: \"functionalThresholdPower\",\n       37: \"intensityFactor\",\n       38: \"work\",\n       39: \"powerRatio\",\n       40: \"normalizedPower\",\n       41: \"trainingStressScore\",\n       42: \"timeOnZone\",\n       43: \"speed\",\n       44: \"laps\",\n       45: \"reps\",\n       46: \"workoutStep\",\n       47: \"courseDistance\",\n       48: \"navigationDistance\",\n       49: \"courseEstimatedTimeOfArrival\",\n       50: \"navigationEstimatedTimeOfArrival\",\n       51: \"courseTime\",\n       52: \"navigationTime\",\n       53: \"courseHeading\",\n       54: \"navigationHeading\",\n       55: \"powerZone\",\n       56: \"torqueEffectiveness\",\n       57: \"timerTime\",\n       58: \"powerWeightRatio\",\n       59: \"leftPlatformCenterOffset\",\n       60: \"rightPlatformCenterOffset\",\n       61: \"leftPowerPhaseStartAngle\",\n       62: \"rightPowerPhaseStartAngle\",\n       63: \"leftPowerPhaseFinishAngle\",\n       64: \"rightPowerPhaseFinishAngle\",\n       65: \"gears\", // Combined gear information\n       66: \"pace\",\n       67: \"trainingEffect\",\n       68: \"verticalOscillation\",\n       69: \"verticalRatio\",\n       70: \"groundContactTime\",\n       71: \"leftGroundContactTimeBalance\",\n       72: \"rightGroundContactTimeBalance\",\n       73: \"strideLength\",\n       74: \"runningCadence\",\n       75: \"performanceCondition\",\n       76: \"courseType\",\n       77: \"timeInPowerZone\",\n       78: \"navigationTurn\",\n       79: \"courseLocation\",\n       80: \"navigationLocation\",\n       81: \"compass\",\n       82: \"gearCombo\",\n       83: \"muscleOxygen\",\n       84: \"icon\",\n       85: \"compassHeading\",\n       86: \"gpsHeading\",\n       87: \"gpsElevation\",\n       88: \"anaerobicTrainingEffect\",\n       89: \"course\",\n       90: \"offCourse\",\n       91: \"glideRatio\",\n       92: \"verticalDistance\",\n       93: \"vmg\",\n       94: \"ambientPressure\",\n       95: \"pressure\",\n       96: \"vam\",\n       },\n   autoActivityDetect: {\n       0x00000000: \"none\",\n       0x00000001: \"running\",\n       0x00000002: \"cycling\",\n       0x00000004: \"swimming\",\n       0x00000008: \"walking\",\n       0x00000020: \"elliptical\",\n       0x00000400: \"sedentary\",\n       },\n   supportedExdScreenLayouts: {\n       0x00000001: \"fullScreen\",\n       0x00000002: \"halfVertical\",\n       0x00000004: \"halfHorizontal\",\n       0x00000008: \"halfVerticalRightSplit\",\n       0x00000010: \"halfHorizontalBottomSplit\",\n       0x00000020: \"fullQuarterSplit\",\n       0x00000040: \"halfVerticalLeftSplit\",\n       0x00000080: \"halfHorizontalTopSplit\",\n       },\n   fitBaseType: {\n       0: \"enum\",\n       1: \"sint8\",\n       2: \"uint8\",\n       131: \"sint16\",\n       132: \"uint16\",\n       133: \"sint32\",\n       134: \"uint32\",\n       7: \"string\",\n       136: \"float32\",\n       137: \"float64\",\n       10: \"uint8z\",\n       139: \"uint16z\",\n       140: \"uint32z\",\n       13: \"byte\",\n       142: \"sint64\",\n       143: \"uint64\",\n       144: \"uint64z\",\n       },\n   turnType: {\n       0: \"arrivingIdx\",\n       1: \"arrivingLeftIdx\",\n       2: \"arrivingRightIdx\",\n       3: \"arrivingViaIdx\",\n       4: \"arrivingViaLeftIdx\",\n       5: \"arrivingViaRightIdx\",\n       6: \"bearKeepLeftIdx\",\n       7: \"bearKeepRightIdx\",\n       8: \"continueIdx\",\n       9: \"exitLeftIdx\",\n       10: \"exitRightIdx\",\n       11: \"ferryIdx\",\n       12: \"roundabout45Idx\",\n       13: \"roundabout90Idx\",\n       14: \"roundabout135Idx\",\n       15: \"roundabout180Idx\",\n       16: \"roundabout225Idx\",\n       17: \"roundabout270Idx\",\n       18: \"roundabout315Idx\",\n       19: \"roundabout360Idx\",\n       20: \"roundaboutNeg45Idx\",\n       21: \"roundaboutNeg90Idx\",\n       22: \"roundaboutNeg135Idx\",\n       23: \"roundaboutNeg180Idx\",\n       24: \"roundaboutNeg225Idx\",\n       25: \"roundaboutNeg270Idx\",\n       26: \"roundaboutNeg315Idx\",\n       27: \"roundaboutNeg360Idx\",\n       28: \"roundaboutGenericIdx\",\n       29: \"roundaboutNegGenericIdx\",\n       30: \"sharpTurnLeftIdx\",\n       31: \"sharpTurnRightIdx\",\n       32: \"turnLeftIdx\",\n       33: \"turnRightIdx\",\n       34: \"uturnLeftIdx\",\n       35: \"uturnRightIdx\",\n       36: \"iconInvIdx\",\n       37: \"iconIdxCnt\",\n       },\n   bikeLightBeamAngleMode: {\n       0: \"manual\",\n       1: \"auto\",\n       },\n   fitBaseUnit: {\n       0: \"other\",\n       1: \"kilogram\",\n       2: \"pound\",\n       },\n   setType: {\n       0: \"rest\",\n       1: \"active\",\n       },\n   maxMetCategory: {\n       0: \"generic\",\n       1: \"cycling\",\n       },\n   exerciseCategory: {\n       0: \"benchPress\",\n       1: \"calfRaise\",\n       2: \"cardio\",\n       3: \"carry\",\n       4: \"chop\",\n       5: \"core\",\n       6: \"crunch\",\n       7: \"curl\",\n       8: \"deadlift\",\n       9: \"flye\",\n       10: \"hipRaise\",\n       11: \"hipStability\",\n       12: \"hipSwing\",\n       13: \"hyperextension\",\n       14: \"lateralRaise\",\n       15: \"legCurl\",\n       16: \"legRaise\",\n       17: \"lunge\",\n       18: \"olympicLift\",\n       19: \"plank\",\n       20: \"plyo\",\n       21: \"pullUp\",\n       22: \"pushUp\",\n       23: \"row\",\n       24: \"shoulderPress\",\n       25: \"shoulderStability\",\n       26: \"shrug\",\n       27: \"sitUp\",\n       28: \"squat\",\n       29: \"totalBody\",\n       30: \"tricepsExtension\",\n       31: \"warmUp\",\n       32: \"run\",\n       33: \"bike\",\n       34: \"cardioSensors\", // Exercises within workouts that use GPS/sensors rather than rep counting\n       35: \"move\",\n       36: \"pose\",\n       37: \"bandedExercises\",\n       38: \"battleRope\",\n       39: \"elliptical\",\n       40: \"floorClimb\",\n       41: \"indoorBike\",\n       42: \"indoorRow\",\n       43: \"ladder\",\n       44: \"sandbag\",\n       45: \"sled\",\n       46: \"sledgeHammer\",\n       47: \"stairStepper\",\n       49: \"suspension\",\n       50: \"tire\",\n       52: \"runIndoor\",\n       53: \"bikeOutdoor\",\n       65534: \"unknown\",\n       },\n   benchPressExerciseName: {\n       0: \"alternatingDumbbellChestPressOnSwissBall\",\n       1: \"barbellBenchPress\",\n       2: \"barbellBoardBenchPress\",\n       3: \"barbellFloorPress\",\n       4: \"closeGripBarbellBenchPress\",\n       5: \"declineDumbbellBenchPress\",\n       6: \"dumbbellBenchPress\",\n       7: \"dumbbellFloorPress\",\n       8: \"inclineBarbellBenchPress\",\n       9: \"inclineDumbbellBenchPress\",\n       10: \"inclineSmithMachineBenchPress\",\n       11: \"isometricBarbellBenchPress\",\n       12: \"kettlebellChestPress\",\n       13: \"neutralGripDumbbellBenchPress\",\n       14: \"neutralGripDumbbellInclineBenchPress\",\n       15: \"oneArmFloorPress\",\n       16: \"weightedOneArmFloorPress\",\n       17: \"partialLockout\",\n       18: \"reverseGripBarbellBenchPress\",\n       19: \"reverseGripInclineBenchPress\",\n       20: \"singleArmCableChestPress\",\n       21: \"singleArmDumbbellBenchPress\",\n       22: \"smithMachineBenchPress\",\n       23: \"swissBallDumbbellChestPress\",\n       24: \"tripleStopBarbellBenchPress\",\n       25: \"wideGripBarbellBenchPress\",\n       26: \"alternatingDumbbellChestPress\",\n       },\n   calfRaiseExerciseName: {\n       0: \"3WayCalfRaise\",\n       1: \"3WayWeightedCalfRaise\",\n       2: \"3WaySingleLegCalfRaise\",\n       3: \"3WayWeightedSingleLegCalfRaise\",\n       4: \"donkeyCalfRaise\",\n       5: \"weightedDonkeyCalfRaise\",\n       6: \"seatedCalfRaise\",\n       7: \"weightedSeatedCalfRaise\",\n       8: \"seatedDumbbellToeRaise\",\n       9: \"singleLegBentKneeCalfRaise\",\n       10: \"weightedSingleLegBentKneeCalfRaise\",\n       11: \"singleLegDeclinePushUp\",\n       12: \"singleLegDonkeyCalfRaise\",\n       13: \"weightedSingleLegDonkeyCalfRaise\",\n       14: \"singleLegHipRaiseWithKneeHold\",\n       15: \"singleLegStandingCalfRaise\",\n       16: \"singleLegStandingDumbbellCalfRaise\",\n       17: \"standingBarbellCalfRaise\",\n       18: \"standingCalfRaise\",\n       19: \"weightedStandingCalfRaise\",\n       20: \"standingDumbbellCalfRaise\",\n       },\n   cardioExerciseName: {\n       0: \"bobAndWeaveCircle\",\n       1: \"weightedBobAndWeaveCircle\",\n       2: \"cardioCoreCrawl\",\n       3: \"weightedCardioCoreCrawl\",\n       4: \"doubleUnder\",\n       5: \"weightedDoubleUnder\",\n       6: \"jumpRope\",\n       7: \"weightedJumpRope\",\n       8: \"jumpRopeCrossover\",\n       9: \"weightedJumpRopeCrossover\",\n       10: \"jumpRopeJog\",\n       11: \"weightedJumpRopeJog\",\n       12: \"jumpingJacks\",\n       13: \"weightedJumpingJacks\",\n       14: \"skiMoguls\",\n       15: \"weightedSkiMoguls\",\n       16: \"splitJacks\",\n       17: \"weightedSplitJacks\",\n       18: \"squatJacks\",\n       19: \"weightedSquatJacks\",\n       20: \"tripleUnder\",\n       21: \"weightedTripleUnder\",\n       22: \"elliptical\",\n       23: \"spinning\",\n       24: \"polePaddleForwardWheelchair\",\n       25: \"polePaddleBackwardWheelchair\",\n       26: \"poleHandcycleForwardWheelchair\",\n       27: \"poleHandcycleBackwardWheelchair\",\n       28: \"poleRainbowWheelchair\",\n       29: \"doublePunchForwardWheelchair\",\n       30: \"doublePunchDownWheelchair\",\n       31: \"doublePunchSidewaysWheelchair\",\n       32: \"doublePunchUpWheelchair\",\n       33: \"sitSkiWheelchair\",\n       34: \"sittingJacksWheelchair\",\n       35: \"punchForwardWheelchair\",\n       36: \"punchDownWheelchair\",\n       37: \"punchSidewaysWheelchair\",\n       38: \"punchUpWheelchair\",\n       39: \"punchBagWheelchair\",\n       40: \"poleDdFfUuWheelchair\",\n       41: \"butterflyArmsWheelchair\",\n       42: \"punch\",\n       },\n   carryExerciseName: {\n       0: \"barHolds\",\n       1: \"farmersWalk\",\n       2: \"farmersWalkOnToes\",\n       3: \"hexDumbbellHold\",\n       4: \"overheadCarry\",\n       5: \"dumbbellWaiterCarry\",\n       6: \"farmersCarryWalkLunge\",\n       7: \"farmersCarry\",\n       8: \"farmersCarryOnToes\",\n       },\n   chopExerciseName: {\n       0: \"cablePullThrough\",\n       1: \"cableRotationalLift\",\n       2: \"cableWoodchop\",\n       3: \"crossChopToKnee\",\n       4: \"weightedCrossChopToKnee\",\n       5: \"dumbbellChop\",\n       6: \"halfKneelingRotation\",\n       7: \"weightedHalfKneelingRotation\",\n       8: \"halfKneelingRotationalChop\",\n       9: \"halfKneelingRotationalReverseChop\",\n       10: \"halfKneelingStabilityChop\",\n       11: \"halfKneelingStabilityReverseChop\",\n       12: \"kneelingRotationalChop\",\n       13: \"kneelingRotationalReverseChop\",\n       14: \"kneelingStabilityChop\",\n       15: \"kneelingWoodchopper\",\n       16: \"medicineBallWoodChops\",\n       17: \"powerSquatChops\",\n       18: \"weightedPowerSquatChops\",\n       19: \"standingRotationalChop\",\n       20: \"standingSplitRotationalChop\",\n       21: \"standingSplitRotationalReverseChop\",\n       22: \"standingStabilityReverseChop\",\n       },\n   coreExerciseName: {\n       0: \"absJabs\",\n       1: \"weightedAbsJabs\",\n       2: \"alternatingPlateReach\",\n       3: \"barbellRollout\",\n       4: \"weightedBarbellRollout\",\n       5: \"bodyBarObliqueTwist\",\n       6: \"cableCorePress\",\n       7: \"cableSideBend\",\n       8: \"sideBend\",\n       9: \"weightedSideBend\",\n       10: \"crescentCircle\",\n       11: \"weightedCrescentCircle\",\n       12: \"cyclingRussianTwist\",\n       13: \"weightedCyclingRussianTwist\",\n       14: \"elevatedFeetRussianTwist\",\n       15: \"weightedElevatedFeetRussianTwist\",\n       16: \"halfTurkishGetUp\",\n       17: \"kettlebellWindmill\",\n       18: \"kneelingAbWheel\",\n       19: \"weightedKneelingAbWheel\",\n       20: \"modifiedFrontLever\",\n       21: \"openKneeTucks\",\n       22: \"weightedOpenKneeTucks\",\n       23: \"sideAbsLegLift\",\n       24: \"weightedSideAbsLegLift\",\n       25: \"swissBallJackknife\",\n       26: \"weightedSwissBallJackknife\",\n       27: \"swissBallPike\",\n       28: \"weightedSwissBallPike\",\n       29: \"swissBallRollout\",\n       30: \"weightedSwissBallRollout\",\n       31: \"triangleHipPress\",\n       32: \"weightedTriangleHipPress\",\n       33: \"trxSuspendedJackknife\",\n       34: \"weightedTrxSuspendedJackknife\",\n       35: \"uBoat\",\n       36: \"weightedUBoat\",\n       37: \"windmillSwitches\",\n       38: \"weightedWindmillSwitches\",\n       39: \"alternatingSlideOut\",\n       40: \"weightedAlternatingSlideOut\",\n       41: \"ghdBackExtensions\",\n       42: \"weightedGhdBackExtensions\",\n       43: \"overheadWalk\",\n       44: \"inchworm\",\n       45: \"weightedModifiedFrontLever\",\n       46: \"russianTwist\",\n       47: \"abdominalLegRotations\", // Deprecated do not use\n       48: \"armAndLegExtensionOnKnees\",\n       49: \"bicycle\",\n       50: \"bicepCurlWithLegExtension\",\n       51: \"catCow\",\n       52: \"corkscrew\",\n       53: \"crissCross\",\n       54: \"crissCrossWithBall\", // Deprecated do not use\n       55: \"doubleLegStretch\",\n       56: \"kneeFolds\",\n       57: \"lowerLift\",\n       58: \"neckPull\",\n       59: \"pelvicClocks\",\n       60: \"rollOver\",\n       61: \"rollUp\",\n       62: \"rolling\",\n       63: \"rowing1\",\n       64: \"rowing2\",\n       65: \"scissors\",\n       66: \"singleLegCircles\",\n       67: \"singleLegStretch\",\n       68: \"snakeTwist1And2\", // Deprecated do not use\n       69: \"swan\",\n       70: \"swimming\",\n       71: \"teaser\",\n       72: \"theHundred\",\n       73: \"bicepCurlWithLegExtensionWithWeights\",\n       75: \"hangingLSit\",\n       77: \"lowerLiftWithWeights\",\n       79: \"ringLSit\",\n       80: \"rowing1WithWeights\",\n       81: \"rowing2WithWeights\",\n       82: \"scissorsWithWeights\",\n       83: \"singleLegStretchWithWeights\",\n       84: \"toesToElbows\",\n       85: \"weightedCrissCross\",\n       86: \"weightedDoubleLegStretch\",\n       87: \"weightedTheHundred\",\n       88: \"lSit\",\n       89: \"turkishGetUp\",\n       90: \"weightedRingLSit\",\n       91: \"weightedHangingLSit\",\n       92: \"weightedLSit\",\n       93: \"sideBendLowWheelchair\",\n       94: \"sideBendMidWheelchair\",\n       95: \"sideBendHighWheelchair\",\n       96: \"seatedSideBend\",\n       },\n   crunchExerciseName: {\n       0: \"bicycleCrunch\",\n       1: \"cableCrunch\",\n       2: \"circularArmCrunch\",\n       3: \"crossedArmsCrunch\",\n       4: \"weightedCrossedArmsCrunch\",\n       5: \"crossLegReverseCrunch\",\n       6: \"weightedCrossLegReverseCrunch\",\n       7: \"crunchChop\",\n       8: \"weightedCrunchChop\",\n       9: \"doubleCrunch\",\n       10: \"weightedDoubleCrunch\",\n       11: \"elbowToKneeCrunch\",\n       12: \"weightedElbowToKneeCrunch\",\n       13: \"flutterKicks\",\n       14: \"weightedFlutterKicks\",\n       15: \"foamRollerReverseCrunchOnBench\",\n       16: \"weightedFoamRollerReverseCrunchOnBench\",\n       17: \"foamRollerReverseCrunchWithDumbbell\",\n       18: \"foamRollerReverseCrunchWithMedicineBall\",\n       19: \"frogPress\",\n       20: \"hangingKneeRaiseObliqueCrunch\",\n       21: \"weightedHangingKneeRaiseObliqueCrunch\",\n       22: \"hipCrossover\",\n       23: \"weightedHipCrossover\",\n       24: \"hollowRock\",\n       25: \"weightedHollowRock\",\n       26: \"inclineReverseCrunch\",\n       27: \"weightedInclineReverseCrunch\",\n       28: \"kneelingCableCrunch\",\n       29: \"kneelingCrossCrunch\",\n       30: \"weightedKneelingCrossCrunch\",\n       31: \"kneelingObliqueCableCrunch\",\n       32: \"kneesToElbow\",\n       33: \"legExtensions\",\n       34: \"weightedLegExtensions\",\n       35: \"legLevers\",\n       36: \"mcgillCurlUp\",\n       37: \"weightedMcgillCurlUp\",\n       38: \"modifiedPilatesRollUpWithBall\",\n       39: \"weightedModifiedPilatesRollUpWithBall\",\n       40: \"pilatesCrunch\",\n       41: \"weightedPilatesCrunch\",\n       42: \"pilatesRollUpWithBall\",\n       43: \"weightedPilatesRollUpWithBall\",\n       44: \"raisedLegsCrunch\",\n       45: \"weightedRaisedLegsCrunch\",\n       46: \"reverseCrunch\",\n       47: \"weightedReverseCrunch\",\n       48: \"reverseCrunchOnABench\",\n       49: \"weightedReverseCrunchOnABench\",\n       50: \"reverseCurlAndLift\",\n       51: \"weightedReverseCurlAndLift\",\n       52: \"rotationalLift\",\n       53: \"weightedRotationalLift\",\n       54: \"seatedAlternatingReverseCrunch\",\n       55: \"weightedSeatedAlternatingReverseCrunch\",\n       56: \"seatedLegU\",\n       57: \"weightedSeatedLegU\",\n       58: \"sideToSideCrunchAndWeave\",\n       59: \"weightedSideToSideCrunchAndWeave\",\n       60: \"singleLegReverseCrunch\",\n       61: \"weightedSingleLegReverseCrunch\",\n       62: \"skaterCrunchCross\",\n       63: \"weightedSkaterCrunchCross\",\n       64: \"standingCableCrunch\",\n       65: \"standingSideCrunch\",\n       66: \"stepClimb\",\n       67: \"weightedStepClimb\",\n       68: \"swissBallCrunch\",\n       69: \"swissBallReverseCrunch\",\n       70: \"weightedSwissBallReverseCrunch\",\n       71: \"swissBallRussianTwist\",\n       72: \"weightedSwissBallRussianTwist\",\n       73: \"swissBallSideCrunch\",\n       74: \"weightedSwissBallSideCrunch\",\n       75: \"thoracicCrunchesOnFoamRoller\",\n       76: \"weightedThoracicCrunchesOnFoamRoller\",\n       77: \"tricepsCrunch\",\n       78: \"weightedBicycleCrunch\",\n       79: \"weightedCrunch\",\n       80: \"weightedSwissBallCrunch\",\n       81: \"toesToBar\",\n       82: \"weightedToesToBar\",\n       83: \"crunch\",\n       84: \"straightLegCrunchWithBall\",\n       86: \"legClimbCrunch\",\n       },\n   curlExerciseName: {\n       0: \"alternatingDumbbellBicepsCurl\",\n       1: \"alternatingDumbbellBicepsCurlOnSwissBall\",\n       2: \"alternatingInclineDumbbellBicepsCurl\",\n       3: \"barbellBicepsCurl\",\n       4: \"barbellReverseWristCurl\",\n       5: \"barbellWristCurl\",\n       6: \"behindTheBackBarbellReverseWristCurl\",\n       7: \"behindTheBackOneArmCableCurl\",\n       8: \"cableBicepsCurl\",\n       9: \"cableHammerCurl\",\n       10: \"cheatingBarbellBicepsCurl\",\n       11: \"closeGripEzBarBicepsCurl\",\n       12: \"crossBodyDumbbellHammerCurl\",\n       13: \"deadHangBicepsCurl\",\n       14: \"declineHammerCurl\",\n       15: \"dumbbellBicepsCurlWithStaticHold\",\n       16: \"dumbbellHammerCurl\",\n       17: \"dumbbellReverseWristCurl\",\n       18: \"dumbbellWristCurl\",\n       19: \"ezBarPreacherCurl\",\n       20: \"forwardBendBicepsCurl\",\n       21: \"hammerCurlToPress\",\n       22: \"inclineDumbbellBicepsCurl\",\n       23: \"inclineOffsetThumbDumbbellCurl\",\n       24: \"kettlebellBicepsCurl\",\n       25: \"lyingConcentrationCableCurl\",\n       26: \"oneArmPreacherCurl\",\n       27: \"platePinchCurl\",\n       28: \"preacherCurlWithCable\",\n       29: \"reverseEzBarCurl\",\n       30: \"reverseGripWristCurl\",\n       31: \"reverseGripBarbellBicepsCurl\",\n       32: \"seatedAlternatingDumbbellBicepsCurl\",\n       33: \"seatedDumbbellBicepsCurl\",\n       34: \"seatedReverseDumbbellCurl\",\n       35: \"splitStanceOffsetPinkyDumbbellCurl\",\n       36: \"standingAlternatingDumbbellCurls\",\n       37: \"standingDumbbellBicepsCurl\",\n       38: \"standingEzBarBicepsCurl\",\n       39: \"staticCurl\",\n       40: \"swissBallDumbbellOverheadTricepsExtension\",\n       41: \"swissBallEzBarPreacherCurl\",\n       42: \"twistingStandingDumbbellBicepsCurl\",\n       43: \"wideGripEzBarBicepsCurl\",\n       44: \"oneArmConcentrationCurl\",\n       45: \"standingZottmanBicepsCurl\",\n       46: \"dumbbellBicepsCurl\",\n       47: \"dragCurlWheelchair\",\n       48: \"dumbbellBicepsCurlWheelchair\",\n       49: \"bottleCurl\",\n       50: \"seatedBottleCurl\",\n       },\n   deadliftExerciseName: {\n       0: \"barbellDeadlift\",\n       1: \"barbellStraightLegDeadlift\",\n       2: \"dumbbellDeadlift\",\n       3: \"dumbbellSingleLegDeadliftToRow\",\n       4: \"dumbbellStraightLegDeadlift\",\n       5: \"kettlebellFloorToShelf\",\n       6: \"oneArmOneLegDeadlift\",\n       7: \"rackPull\",\n       8: \"rotationalDumbbellStraightLegDeadlift\",\n       9: \"singleArmDeadlift\",\n       10: \"singleLegBarbellDeadlift\",\n       11: \"singleLegBarbellStraightLegDeadlift\",\n       12: \"singleLegDeadliftWithBarbell\",\n       13: \"singleLegRdlCircuit\",\n       14: \"singleLegRomanianDeadliftWithDumbbell\",\n       15: \"sumoDeadlift\",\n       16: \"sumoDeadliftHighPull\",\n       17: \"trapBarDeadlift\",\n       18: \"wideGripBarbellDeadlift\",\n       20: \"kettlebellDeadlift\",\n       21: \"kettlebellSumoDeadlift\",\n       23: \"romanianDeadlift\",\n       24: \"singleLegRomanianDeadliftCircuit\",\n       25: \"straightLegDeadlift\",\n       },\n   flyeExerciseName: {\n       0: \"cableCrossover\",\n       1: \"declineDumbbellFlye\",\n       2: \"dumbbellFlye\",\n       3: \"inclineDumbbellFlye\",\n       4: \"kettlebellFlye\",\n       5: \"kneelingRearFlye\",\n       6: \"singleArmStandingCableReverseFlye\",\n       7: \"swissBallDumbbellFlye\",\n       8: \"armRotations\",\n       9: \"hugATree\",\n       10: \"faceDownInclineReverseFlye\",\n       11: \"inclineReverseFlye\",\n       12: \"rearDeltFlyWheelchair\",\n       },\n   hipRaiseExerciseName: {\n       0: \"barbellHipThrustOnFloor\",\n       1: \"barbellHipThrustWithBench\",\n       2: \"bentKneeSwissBallReverseHipRaise\",\n       3: \"weightedBentKneeSwissBallReverseHipRaise\",\n       4: \"bridgeWithLegExtension\",\n       5: \"weightedBridgeWithLegExtension\",\n       6: \"clamBridge\",\n       7: \"frontKickTabletop\",\n       8: \"weightedFrontKickTabletop\",\n       9: \"hipExtensionAndCross\",\n       10: \"weightedHipExtensionAndCross\",\n       11: \"hipRaise\",\n       12: \"weightedHipRaise\",\n       13: \"hipRaiseWithFeetOnSwissBall\",\n       14: \"weightedHipRaiseWithFeetOnSwissBall\",\n       15: \"hipRaiseWithHeadOnBosuBall\",\n       16: \"weightedHipRaiseWithHeadOnBosuBall\",\n       17: \"hipRaiseWithHeadOnSwissBall\",\n       18: \"weightedHipRaiseWithHeadOnSwissBall\",\n       19: \"hipRaiseWithKneeSqueeze\",\n       20: \"weightedHipRaiseWithKneeSqueeze\",\n       21: \"inclineRearLegExtension\",\n       22: \"weightedInclineRearLegExtension\",\n       23: \"kettlebellSwing\",\n       24: \"marchingHipRaise\",\n       25: \"weightedMarchingHipRaise\",\n       26: \"marchingHipRaiseWithFeetOnASwissBall\",\n       27: \"weightedMarchingHipRaiseWithFeetOnASwissBall\",\n       28: \"reverseHipRaise\",\n       29: \"weightedReverseHipRaise\",\n       30: \"singleLegHipRaise\",\n       31: \"weightedSingleLegHipRaise\",\n       32: \"singleLegHipRaiseWithFootOnBench\",\n       33: \"weightedSingleLegHipRaiseWithFootOnBench\",\n       34: \"singleLegHipRaiseWithFootOnBosuBall\",\n       35: \"weightedSingleLegHipRaiseWithFootOnBosuBall\",\n       36: \"singleLegHipRaiseWithFootOnFoamRoller\",\n       37: \"weightedSingleLegHipRaiseWithFootOnFoamRoller\",\n       38: \"singleLegHipRaiseWithFootOnMedicineBall\",\n       39: \"weightedSingleLegHipRaiseWithFootOnMedicineBall\",\n       40: \"singleLegHipRaiseWithHeadOnBosuBall\",\n       41: \"weightedSingleLegHipRaiseWithHeadOnBosuBall\",\n       42: \"weightedClamBridge\",\n       43: \"singleLegSwissBallHipRaiseAndLegCurl\",\n       44: \"clams\",\n       45: \"innerThighCircles\", // Deprecated do not use\n       46: \"innerThighSideLift\", // Deprecated do not use\n       47: \"legCircles\",\n       48: \"legLift\",\n       49: \"legLiftInExternalRotation\",\n       },\n   hipStabilityExerciseName: {\n       0: \"bandSideLyingLegRaise\",\n       1: \"deadBug\",\n       2: \"weightedDeadBug\",\n       3: \"externalHipRaise\",\n       4: \"weightedExternalHipRaise\",\n       5: \"fireHydrantKicks\",\n       6: \"weightedFireHydrantKicks\",\n       7: \"hipCircles\",\n       8: \"weightedHipCircles\",\n       9: \"innerThighLift\",\n       10: \"weightedInnerThighLift\",\n       11: \"lateralWalksWithBandAtAnkles\",\n       12: \"pretzelSideKick\",\n       13: \"weightedPretzelSideKick\",\n       14: \"proneHipInternalRotation\",\n       15: \"weightedProneHipInternalRotation\",\n       16: \"quadruped\",\n       17: \"quadrupedHipExtension\",\n       18: \"weightedQuadrupedHipExtension\",\n       19: \"quadrupedWithLegLift\",\n       20: \"weightedQuadrupedWithLegLift\",\n       21: \"sideLyingLegRaise\",\n       22: \"weightedSideLyingLegRaise\",\n       23: \"slidingHipAdduction\",\n       24: \"weightedSlidingHipAdduction\",\n       25: \"standingAdduction\",\n       26: \"weightedStandingAdduction\",\n       27: \"standingCableHipAbduction\",\n       28: \"standingHipAbduction\",\n       29: \"weightedStandingHipAbduction\",\n       30: \"standingRearLegRaise\",\n       31: \"weightedStandingRearLegRaise\",\n       32: \"supineHipInternalRotation\",\n       33: \"weightedSupineHipInternalRotation\",\n       34: \"lyingAbductionStretch\",\n       },\n   hipSwingExerciseName: {\n       0: \"singleArmKettlebellSwing\",\n       1: \"singleArmDumbbellSwing\",\n       2: \"stepOutSwing\",\n       3: \"oneArmSwing\",\n       },\n   hyperextensionExerciseName: {\n       0: \"backExtensionWithOppositeArmAndLegReach\",\n       1: \"weightedBackExtensionWithOppositeArmAndLegReach\",\n       2: \"baseRotations\",\n       3: \"weightedBaseRotations\",\n       4: \"bentKneeReverseHyperextension\",\n       5: \"weightedBentKneeReverseHyperextension\",\n       6: \"hollowHoldAndRoll\",\n       7: \"weightedHollowHoldAndRoll\",\n       8: \"kicks\",\n       9: \"weightedKicks\",\n       10: \"kneeRaises\",\n       11: \"weightedKneeRaises\",\n       12: \"kneelingSuperman\",\n       13: \"weightedKneelingSuperman\",\n       14: \"latPullDownWithRow\",\n       15: \"medicineBallDeadliftToReach\",\n       16: \"oneArmOneLegRow\",\n       17: \"oneArmRowWithBand\",\n       18: \"overheadLungeWithMedicineBall\",\n       19: \"plankKneeTucks\",\n       20: \"weightedPlankKneeTucks\",\n       21: \"sideStep\",\n       22: \"weightedSideStep\",\n       23: \"singleLegBackExtension\",\n       24: \"weightedSingleLegBackExtension\",\n       25: \"spineExtension\",\n       26: \"weightedSpineExtension\",\n       27: \"staticBackExtension\",\n       28: \"weightedStaticBackExtension\",\n       29: \"supermanFromFloor\",\n       30: \"weightedSupermanFromFloor\",\n       31: \"swissBallBackExtension\",\n       32: \"weightedSwissBallBackExtension\",\n       33: \"swissBallHyperextension\",\n       34: \"weightedSwissBallHyperextension\",\n       35: \"swissBallOppositeArmAndLegLift\",\n       36: \"weightedSwissBallOppositeArmAndLegLift\",\n       37: \"supermanOnSwissBall\",\n       38: \"cobra\",\n       39: \"supineFloorBarre\", // Deprecated do not use\n       },\n   lateralRaiseExerciseName: {\n       0: \"45DegreeCableExternalRotation\",\n       1: \"alternatingLateralRaiseWithStaticHold\",\n       2: \"barMuscleUp\",\n       3: \"bentOverLateralRaise\",\n       4: \"cableDiagonalRaise\",\n       5: \"cableFrontRaise\",\n       6: \"calorieRow\",\n       7: \"comboShoulderRaise\",\n       8: \"dumbbellDiagonalRaise\",\n       9: \"dumbbellVRaise\",\n       10: \"frontRaise\",\n       11: \"leaningDumbbellLateralRaise\",\n       12: \"lyingDumbbellRaise\",\n       13: \"muscleUp\",\n       14: \"oneArmCableLateralRaise\",\n       15: \"overhandGripRearLateralRaise\",\n       16: \"plateRaises\",\n       17: \"ringDip\",\n       18: \"weightedRingDip\",\n       19: \"ringMuscleUp\",\n       20: \"weightedRingMuscleUp\",\n       21: \"ropeClimb\",\n       22: \"weightedRopeClimb\",\n       23: \"scaption\",\n       24: \"seatedLateralRaise\",\n       25: \"seatedRearLateralRaise\",\n       26: \"sideLyingLateralRaise\",\n       27: \"standingLift\",\n       28: \"suspendedRow\",\n       29: \"underhandGripRearLateralRaise\",\n       30: \"wallSlide\",\n       31: \"weightedWallSlide\",\n       32: \"armCircles\",\n       33: \"shavingTheHead\",\n       34: \"dumbbellLateralRaise\",\n       36: \"ringDipKipping\",\n       37: \"wallWalk\",\n       38: \"dumbbellFrontRaiseWheelchair\",\n       39: \"dumbbellLateralRaiseWheelchair\",\n       40: \"poleDoubleArmOverheadAndForwardWheelchair\",\n       41: \"poleStraightArmOverheadWheelchair\",\n       },\n   legCurlExerciseName: {\n       0: \"legCurl\",\n       1: \"weightedLegCurl\",\n       2: \"goodMorning\",\n       3: \"seatedBarbellGoodMorning\",\n       4: \"singleLegBarbellGoodMorning\",\n       5: \"singleLegSlidingLegCurl\",\n       6: \"slidingLegCurl\",\n       7: \"splitBarbellGoodMorning\",\n       8: \"splitStanceExtension\",\n       9: \"staggeredStanceGoodMorning\",\n       10: \"swissBallHipRaiseAndLegCurl\",\n       11: \"zercherGoodMorning\",\n       12: \"bandGoodMorning\",\n       13: \"barGoodMorning\",\n       },\n   legRaiseExerciseName: {\n       0: \"hangingKneeRaise\",\n       1: \"hangingLegRaise\",\n       2: \"weightedHangingLegRaise\",\n       3: \"hangingSingleLegRaise\",\n       4: \"weightedHangingSingleLegRaise\",\n       5: \"kettlebellLegRaises\",\n       6: \"legLoweringDrill\",\n       7: \"weightedLegLoweringDrill\",\n       8: \"lyingStraightLegRaise\",\n       9: \"weightedLyingStraightLegRaise\",\n       10: \"medicineBallLegDrops\",\n       11: \"quadrupedLegRaise\",\n       12: \"weightedQuadrupedLegRaise\",\n       13: \"reverseLegRaise\",\n       14: \"weightedReverseLegRaise\",\n       15: \"reverseLegRaiseOnSwissBall\",\n       16: \"weightedReverseLegRaiseOnSwissBall\",\n       17: \"singleLegLoweringDrill\",\n       18: \"weightedSingleLegLoweringDrill\",\n       19: \"weightedHangingKneeRaise\",\n       20: \"lateralStepover\",\n       21: \"weightedLateralStepover\",\n       },\n   lungeExerciseName: {\n       0: \"overheadLunge\",\n       1: \"lungeMatrix\",\n       2: \"weightedLungeMatrix\",\n       3: \"alternatingBarbellForwardLunge\",\n       4: \"alternatingDumbbellLungeWithReach\",\n       5: \"backFootElevatedDumbbellSplitSquat\",\n       6: \"barbellBoxLunge\",\n       7: \"barbellBulgarianSplitSquat\",\n       8: \"barbellCrossoverLunge\",\n       9: \"barbellFrontSplitSquat\",\n       10: \"barbellLunge\",\n       11: \"barbellReverseLunge\",\n       12: \"barbellSideLunge\",\n       13: \"barbellSplitSquat\",\n       14: \"coreControlRearLunge\",\n       15: \"diagonalLunge\",\n       16: \"dropLunge\",\n       17: \"dumbbellBoxLunge\",\n       18: \"dumbbellBulgarianSplitSquat\",\n       19: \"dumbbellCrossoverLunge\",\n       20: \"dumbbellDiagonalLunge\",\n       21: \"dumbbellLunge\",\n       22: \"dumbbellLungeAndRotation\",\n       23: \"dumbbellOverheadBulgarianSplitSquat\",\n       24: \"dumbbellReverseLungeToHighKneeAndPress\",\n       25: \"dumbbellSideLunge\",\n       26: \"elevatedFrontFootBarbellSplitSquat\",\n       27: \"frontFootElevatedDumbbellSplitSquat\",\n       28: \"gunslingerLunge\",\n       29: \"lawnmowerLunge\",\n       30: \"lowLungeWithIsometricAdduction\",\n       31: \"lowSideToSideLunge\",\n       32: \"lunge\",\n       33: \"weightedLunge\",\n       34: \"lungeWithArmReach\",\n       35: \"lungeWithDiagonalReach\",\n       36: \"lungeWithSideBend\",\n       37: \"offsetDumbbellLunge\",\n       38: \"offsetDumbbellReverseLunge\",\n       39: \"overheadBulgarianSplitSquat\",\n       40: \"overheadDumbbellReverseLunge\",\n       41: \"overheadDumbbellSplitSquat\",\n       42: \"overheadLungeWithRotation\",\n       43: \"reverseBarbellBoxLunge\",\n       44: \"reverseBoxLunge\",\n       45: \"reverseDumbbellBoxLunge\",\n       46: \"reverseDumbbellCrossoverLunge\",\n       47: \"reverseDumbbellDiagonalLunge\",\n       48: \"reverseLungeWithReachBack\",\n       49: \"weightedReverseLungeWithReachBack\",\n       50: \"reverseLungeWithTwistAndOverheadReach\",\n       51: \"weightedReverseLungeWithTwistAndOverheadReach\",\n       52: \"reverseSlidingBoxLunge\",\n       53: \"weightedReverseSlidingBoxLunge\",\n       54: \"reverseSlidingLunge\",\n       55: \"weightedReverseSlidingLunge\",\n       56: \"runnersLungeToBalance\",\n       57: \"weightedRunnersLungeToBalance\",\n       58: \"shiftingSideLunge\",\n       59: \"sideAndCrossoverLunge\",\n       60: \"weightedSideAndCrossoverLunge\",\n       61: \"sideLunge\",\n       62: \"weightedSideLunge\",\n       63: \"sideLungeAndPress\",\n       64: \"sideLungeJumpOff\",\n       65: \"sideLungeSweep\",\n       66: \"weightedSideLungeSweep\",\n       67: \"sideLungeToCrossoverTap\",\n       68: \"weightedSideLungeToCrossoverTap\",\n       69: \"sideToSideLungeChops\",\n       70: \"weightedSideToSideLungeChops\",\n       71: \"siffJumpLunge\",\n       72: \"weightedSiffJumpLunge\",\n       73: \"singleArmReverseLungeAndPress\",\n       74: \"slidingLateralLunge\",\n       75: \"weightedSlidingLateralLunge\",\n       76: \"walkingBarbellLunge\",\n       77: \"walkingDumbbellLunge\",\n       78: \"walkingLunge\",\n       79: \"weightedWalkingLunge\",\n       80: \"wideGripOverheadBarbellSplitSquat\",\n       81: \"alternatingDumbbellLunge\",\n       82: \"dumbbellReverseLunge\",\n       83: \"overheadDumbbellLunge\",\n       84: \"scissorPowerSwitch\",\n       85: \"dumbbellOverheadWalkingLunge\",\n       86: \"curtsyLunge\",\n       87: \"weightedCurtsyLunge\",\n       88: \"weightedShiftingSideLunge\",\n       89: \"weightedSideLungeAndPress\",\n       90: \"weightedSideLungeJumpOff\",\n       },\n   olympicLiftExerciseName: {\n       0: \"barbellHangPowerClean\",\n       1: \"barbellHangSquatClean\",\n       2: \"barbellPowerClean\",\n       3: \"barbellPowerSnatch\",\n       4: \"barbellSquatClean\",\n       5: \"cleanAndJerk\",\n       6: \"barbellHangPowerSnatch\",\n       7: \"barbellHangPull\",\n       8: \"barbellHighPull\",\n       9: \"barbellSnatch\",\n       10: \"barbellSplitJerk\",\n       11: \"clean\",\n       12: \"dumbbellClean\",\n       13: \"dumbbellHangPull\",\n       14: \"oneHandDumbbellSplitSnatch\",\n       15: \"pushJerk\",\n       16: \"singleArmDumbbellSnatch\",\n       17: \"singleArmHangSnatch\",\n       18: \"singleArmKettlebellSnatch\",\n       19: \"splitJerk\",\n       20: \"squatCleanAndJerk\",\n       21: \"dumbbellHangSnatch\",\n       22: \"dumbbellPowerCleanAndJerk\",\n       23: \"dumbbellPowerCleanAndPushPress\",\n       24: \"dumbbellPowerCleanAndStrictPress\",\n       25: \"dumbbellSnatch\",\n       26: \"medicineBallClean\",\n       27: \"cleanAndPress\",\n       28: \"snatch\",\n       },\n   plankExerciseName: {\n       0: \"45DegreePlank\",\n       1: \"weighted45DegreePlank\",\n       2: \"90DegreeStaticHold\",\n       3: \"weighted90DegreeStaticHold\",\n       4: \"bearCrawl\",\n       5: \"weightedBearCrawl\",\n       6: \"crossBodyMountainClimber\",\n       7: \"weightedCrossBodyMountainClimber\",\n       8: \"elbowPlankPikeJacks\",\n       9: \"weightedElbowPlankPikeJacks\",\n       10: \"elevatedFeetPlank\",\n       11: \"weightedElevatedFeetPlank\",\n       12: \"elevatorAbs\",\n       13: \"weightedElevatorAbs\",\n       14: \"extendedPlank\",\n       15: \"weightedExtendedPlank\",\n       16: \"fullPlankPasseTwist\",\n       17: \"weightedFullPlankPasseTwist\",\n       18: \"inchingElbowPlank\",\n       19: \"weightedInchingElbowPlank\",\n       20: \"inchwormToSidePlank\",\n       21: \"weightedInchwormToSidePlank\",\n       22: \"kneelingPlank\",\n       23: \"weightedKneelingPlank\",\n       24: \"kneelingSidePlankWithLegLift\",\n       25: \"weightedKneelingSidePlankWithLegLift\",\n       26: \"lateralRoll\",\n       27: \"weightedLateralRoll\",\n       28: \"lyingReversePlank\",\n       29: \"weightedLyingReversePlank\",\n       30: \"medicineBallMountainClimber\",\n       31: \"weightedMedicineBallMountainClimber\",\n       32: \"modifiedMountainClimberAndExtension\",\n       33: \"weightedModifiedMountainClimberAndExtension\",\n       34: \"mountainClimber\",\n       35: \"weightedMountainClimber\",\n       36: \"mountainClimberOnSlidingDiscs\",\n       37: \"weightedMountainClimberOnSlidingDiscs\",\n       38: \"mountainClimberWithFeetOnBosuBall\",\n       39: \"weightedMountainClimberWithFeetOnBosuBall\",\n       40: \"mountainClimberWithHandsOnBench\",\n       41: \"mountainClimberWithHandsOnSwissBall\",\n       42: \"weightedMountainClimberWithHandsOnSwissBall\",\n       43: \"plank\",\n       44: \"plankJacksWithFeetOnSlidingDiscs\",\n       45: \"weightedPlankJacksWithFeetOnSlidingDiscs\",\n       46: \"plankKneeTwist\",\n       47: \"weightedPlankKneeTwist\",\n       48: \"plankPikeJumps\",\n       49: \"weightedPlankPikeJumps\",\n       50: \"plankPikes\",\n       51: \"weightedPlankPikes\",\n       52: \"plankToStandUp\",\n       53: \"weightedPlankToStandUp\",\n       54: \"plankWithArmRaise\",\n       55: \"weightedPlankWithArmRaise\",\n       56: \"plankWithKneeToElbow\",\n       57: \"weightedPlankWithKneeToElbow\",\n       58: \"plankWithObliqueCrunch\",\n       59: \"weightedPlankWithObliqueCrunch\",\n       60: \"plyometricSidePlank\",\n       61: \"weightedPlyometricSidePlank\",\n       62: \"rollingSidePlank\",\n       63: \"weightedRollingSidePlank\",\n       64: \"sideKickPlank\",\n       65: \"weightedSideKickPlank\",\n       66: \"sidePlank\",\n       67: \"weightedSidePlank\",\n       68: \"sidePlankAndRow\",\n       69: \"weightedSidePlankAndRow\",\n       70: \"sidePlankLift\",\n       71: \"weightedSidePlankLift\",\n       72: \"sidePlankWithElbowOnBosuBall\",\n       73: \"weightedSidePlankWithElbowOnBosuBall\",\n       74: \"sidePlankWithFeetOnBench\",\n       75: \"weightedSidePlankWithFeetOnBench\",\n       76: \"sidePlankWithKneeCircle\",\n       77: \"weightedSidePlankWithKneeCircle\",\n       78: \"sidePlankWithKneeTuck\",\n       79: \"weightedSidePlankWithKneeTuck\",\n       80: \"sidePlankWithLegLift\",\n       81: \"weightedSidePlankWithLegLift\",\n       82: \"sidePlankWithReachUnder\",\n       83: \"weightedSidePlankWithReachUnder\",\n       84: \"singleLegElevatedFeetPlank\",\n       85: \"weightedSingleLegElevatedFeetPlank\",\n       86: \"singleLegFlexAndExtend\",\n       87: \"weightedSingleLegFlexAndExtend\",\n       88: \"singleLegSidePlank\",\n       89: \"weightedSingleLegSidePlank\",\n       90: \"spidermanPlank\",\n       91: \"weightedSpidermanPlank\",\n       92: \"straightArmPlank\",\n       93: \"weightedStraightArmPlank\",\n       94: \"straightArmPlankWithShoulderTouch\",\n       95: \"weightedStraightArmPlankWithShoulderTouch\",\n       96: \"swissBallPlank\",\n       97: \"weightedSwissBallPlank\",\n       98: \"swissBallPlankLegLift\",\n       99: \"weightedSwissBallPlankLegLift\",\n       100: \"swissBallPlankLegLiftAndHold\",\n       101: \"swissBallPlankWithFeetOnBench\",\n       102: \"weightedSwissBallPlankWithFeetOnBench\",\n       103: \"swissBallProneJackknife\",\n       104: \"weightedSwissBallProneJackknife\",\n       105: \"swissBallSidePlank\",\n       106: \"weightedSwissBallSidePlank\",\n       107: \"threeWayPlank\",\n       108: \"weightedThreeWayPlank\",\n       109: \"towelPlankAndKneeIn\",\n       110: \"weightedTowelPlankAndKneeIn\",\n       111: \"tStabilization\",\n       112: \"weightedTStabilization\",\n       113: \"turkishGetUpToSidePlank\",\n       114: \"weightedTurkishGetUpToSidePlank\",\n       115: \"twoPointPlank\",\n       116: \"weightedTwoPointPlank\",\n       117: \"weightedPlank\",\n       118: \"wideStancePlankWithDiagonalArmLift\",\n       119: \"weightedWideStancePlankWithDiagonalArmLift\",\n       120: \"wideStancePlankWithDiagonalLegLift\",\n       121: \"weightedWideStancePlankWithDiagonalLegLift\",\n       122: \"wideStancePlankWithLegLift\",\n       123: \"weightedWideStancePlankWithLegLift\",\n       124: \"wideStancePlankWithOppositeArmAndLegLift\",\n       125: \"weightedMountainClimberWithHandsOnBench\",\n       126: \"weightedSwissBallPlankLegLiftAndHold\",\n       127: \"weightedWideStancePlankWithOppositeArmAndLegLift\",\n       128: \"plankWithFeetOnSwissBall\",\n       129: \"sidePlankToPlankWithReachUnder\",\n       130: \"bridgeWithGluteLowerLift\",\n       131: \"bridgeOneLegBridge\",\n       132: \"plankWithArmVariations\",\n       133: \"plankWithLegLift\",\n       134: \"reversePlankWithLegPull\",\n       135: \"ringPlankSprawls\",\n       },\n   plyoExerciseName: {\n       0: \"alternatingJumpLunge\",\n       1: \"weightedAlternatingJumpLunge\",\n       2: \"barbellJumpSquat\",\n       3: \"bodyWeightJumpSquat\",\n       4: \"weightedJumpSquat\",\n       5: \"crossKneeStrike\",\n       6: \"weightedCrossKneeStrike\",\n       7: \"depthJump\",\n       8: \"weightedDepthJump\",\n       9: \"dumbbellJumpSquat\",\n       10: \"dumbbellSplitJump\",\n       11: \"frontKneeStrike\",\n       12: \"weightedFrontKneeStrike\",\n       13: \"highBoxJump\",\n       14: \"weightedHighBoxJump\",\n       15: \"isometricExplosiveBodyWeightJumpSquat\",\n       16: \"weightedIsometricExplosiveJumpSquat\",\n       17: \"lateralLeapAndHop\",\n       18: \"weightedLateralLeapAndHop\",\n       19: \"lateralPlyoSquats\",\n       20: \"weightedLateralPlyoSquats\",\n       21: \"lateralSlide\",\n       22: \"weightedLateralSlide\",\n       23: \"medicineBallOverheadThrows\",\n       24: \"medicineBallSideThrow\",\n       25: \"medicineBallSlam\",\n       26: \"sideToSideMedicineBallThrows\",\n       27: \"sideToSideShuffleJump\",\n       28: \"weightedSideToSideShuffleJump\",\n       29: \"squatJumpOntoBox\",\n       30: \"weightedSquatJumpOntoBox\",\n       31: \"squatJumpsInAndOut\",\n       32: \"weightedSquatJumpsInAndOut\",\n       33: \"boxJump\",\n       34: \"boxJumpOvers\",\n       35: \"boxJumpOversOverTheBox\",\n       36: \"starJumpSquats\",\n       37: \"jumpSquat\",\n       },\n   pullUpExerciseName: {\n       0: \"bandedPullUps\",\n       1: \"30DegreeLatPulldown\",\n       2: \"bandAssistedChinUp\",\n       3: \"closeGripChinUp\",\n       4: \"weightedCloseGripChinUp\",\n       5: \"closeGripLatPulldown\",\n       6: \"crossoverChinUp\",\n       7: \"weightedCrossoverChinUp\",\n       8: \"ezBarPullover\",\n       9: \"hangingHurdle\",\n       10: \"weightedHangingHurdle\",\n       11: \"kneelingLatPulldown\",\n       12: \"kneelingUnderhandGripLatPulldown\",\n       13: \"latPulldown\",\n       14: \"mixedGripChinUp\",\n       15: \"weightedMixedGripChinUp\",\n       16: \"mixedGripPullUp\",\n       17: \"weightedMixedGripPullUp\",\n       18: \"reverseGripPulldown\",\n       19: \"standingCablePullover\",\n       20: \"straightArmPulldown\",\n       21: \"swissBallEzBarPullover\",\n       22: \"towelPullUp\",\n       23: \"weightedTowelPullUp\",\n       24: \"weightedPullUp\",\n       25: \"wideGripLatPulldown\",\n       26: \"wideGripPullUp\",\n       27: \"weightedWideGripPullUp\",\n       28: \"burpeePullUp\",\n       29: \"weightedBurpeePullUp\",\n       30: \"jumpingPullUps\",\n       31: \"weightedJumpingPullUps\",\n       32: \"kippingPullUp\",\n       33: \"weightedKippingPullUp\",\n       34: \"lPullUp\",\n       35: \"weightedLPullUp\",\n       36: \"suspendedChinUp\",\n       37: \"weightedSuspendedChinUp\",\n       38: \"pullUp\",\n       39: \"chinUp\",\n       40: \"neutralGripChinUp\",\n       41: \"weightedChinUp\",\n       42: \"bandAssistedPullUp\",\n       43: \"neutralGripPullUp\",\n       44: \"weightedNeutralGripChinUp\",\n       45: \"weightedNeutralGripPullUp\",\n       },\n   pushUpExerciseName: {\n       0: \"chestPressWithBand\",\n       1: \"alternatingStaggeredPushUp\",\n       2: \"weightedAlternatingStaggeredPushUp\",\n       3: \"alternatingHandsMedicineBallPushUp\",\n       4: \"weightedAlternatingHandsMedicineBallPushUp\",\n       5: \"bosuBallPushUp\",\n       6: \"weightedBosuBallPushUp\",\n       7: \"clappingPushUp\",\n       8: \"weightedClappingPushUp\",\n       9: \"closeGripMedicineBallPushUp\",\n       10: \"weightedCloseGripMedicineBallPushUp\",\n       11: \"closeHandsPushUp\",\n       12: \"weightedCloseHandsPushUp\",\n       13: \"declinePushUp\",\n       14: \"weightedDeclinePushUp\",\n       15: \"diamondPushUp\",\n       16: \"weightedDiamondPushUp\",\n       17: \"explosiveCrossoverPushUp\",\n       18: \"weightedExplosiveCrossoverPushUp\",\n       19: \"explosivePushUp\",\n       20: \"weightedExplosivePushUp\",\n       21: \"feetElevatedSideToSidePushUp\",\n       22: \"weightedFeetElevatedSideToSidePushUp\",\n       23: \"handReleasePushUp\",\n       24: \"weightedHandReleasePushUp\",\n       25: \"handstandPushUp\",\n       26: \"weightedHandstandPushUp\",\n       27: \"inclinePushUp\",\n       28: \"weightedInclinePushUp\",\n       29: \"isometricExplosivePushUp\",\n       30: \"weightedIsometricExplosivePushUp\",\n       31: \"judoPushUp\",\n       32: \"weightedJudoPushUp\",\n       33: \"kneelingPushUp\",\n       34: \"weightedKneelingPushUp\",\n       35: \"medicineBallChestPass\",\n       36: \"medicineBallPushUp\",\n       37: \"weightedMedicineBallPushUp\",\n       38: \"oneArmPushUp\",\n       39: \"weightedOneArmPushUp\",\n       40: \"weightedPushUp\",\n       41: \"pushUpAndRow\",\n       42: \"weightedPushUpAndRow\",\n       43: \"pushUpPlus\",\n       44: \"weightedPushUpPlus\",\n       45: \"pushUpWithFeetOnSwissBall\",\n       46: \"weightedPushUpWithFeetOnSwissBall\",\n       47: \"pushUpWithOneHandOnMedicineBall\",\n       48: \"weightedPushUpWithOneHandOnMedicineBall\",\n       49: \"shoulderPushUp\",\n       50: \"weightedShoulderPushUp\",\n       51: \"singleArmMedicineBallPushUp\",\n       52: \"weightedSingleArmMedicineBallPushUp\",\n       53: \"spidermanPushUp\",\n       54: \"weightedSpidermanPushUp\",\n       55: \"stackedFeetPushUp\",\n       56: \"weightedStackedFeetPushUp\",\n       57: \"staggeredHandsPushUp\",\n       58: \"weightedStaggeredHandsPushUp\",\n       59: \"suspendedPushUp\",\n       60: \"weightedSuspendedPushUp\",\n       61: \"swissBallPushUp\",\n       62: \"weightedSwissBallPushUp\",\n       63: \"swissBallPushUpPlus\",\n       64: \"weightedSwissBallPushUpPlus\",\n       65: \"tPushUp\",\n       66: \"weightedTPushUp\",\n       67: \"tripleStopPushUp\",\n       68: \"weightedTripleStopPushUp\",\n       69: \"wideHandsPushUp\",\n       70: \"weightedWideHandsPushUp\",\n       71: \"paralletteHandstandPushUp\",\n       72: \"weightedParalletteHandstandPushUp\",\n       73: \"ringHandstandPushUp\",\n       74: \"weightedRingHandstandPushUp\",\n       75: \"ringPushUp\",\n       76: \"weightedRingPushUp\",\n       77: \"pushUp\",\n       78: \"pilatesPushup\",\n       79: \"dynamicPushUp\",\n       80: \"kippingHandstandPushUp\",\n       81: \"shoulderTappingPushUp\",\n       82: \"bicepsPushUp\",\n       83: \"hinduPushUp\",\n       84: \"pikePushUp\",\n       85: \"wideGripPushUp\",\n       86: \"weightedBicepsPushUp\",\n       87: \"weightedHinduPushUp\",\n       88: \"weightedPikePushUp\",\n       89: \"kippingParalletteHandstandPushUp\",\n       90: \"wallPushUp\",\n       },\n   rowExerciseName: {\n       0: \"barbellStraightLegDeadliftToRow\",\n       1: \"cableRowStanding\",\n       2: \"dumbbellRow\",\n       3: \"elevatedFeetInvertedRow\",\n       4: \"weightedElevatedFeetInvertedRow\",\n       5: \"facePull\",\n       6: \"facePullWithExternalRotation\",\n       7: \"invertedRowWithFeetOnSwissBall\",\n       8: \"weightedInvertedRowWithFeetOnSwissBall\",\n       9: \"kettlebellRow\",\n       10: \"modifiedInvertedRow\",\n       11: \"weightedModifiedInvertedRow\",\n       12: \"neutralGripAlternatingDumbbellRow\",\n       13: \"oneArmBentOverRow\",\n       14: \"oneLeggedDumbbellRow\",\n       15: \"renegadeRow\",\n       16: \"reverseGripBarbellRow\",\n       17: \"ropeHandleCableRow\",\n       18: \"seatedCableRow\",\n       19: \"seatedDumbbellRow\",\n       20: \"singleArmCableRow\",\n       21: \"singleArmCableRowAndRotation\",\n       22: \"singleArmInvertedRow\",\n       23: \"weightedSingleArmInvertedRow\",\n       24: \"singleArmNeutralGripDumbbellRow\",\n       25: \"singleArmNeutralGripDumbbellRowAndRotation\",\n       26: \"suspendedInvertedRow\",\n       27: \"weightedSuspendedInvertedRow\",\n       28: \"tBarRow\",\n       29: \"towelGripInvertedRow\",\n       30: \"weightedTowelGripInvertedRow\",\n       31: \"underhandGripCableRow\",\n       32: \"vGripCableRow\",\n       33: \"wideGripSeatedCableRow\",\n       34: \"alternatingDumbbellRow\",\n       35: \"invertedRow\",\n       36: \"row\",\n       37: \"weightedRow\",\n       38: \"indoorRow\",\n       39: \"bandedFacePulls\",\n       40: \"chestSupportedDumbbellRow\",\n       41: \"declineRingRow\",\n       42: \"elevatedRingRow\",\n       43: \"rdlBentOverRowWithBarbellDumbbell\",\n       44: \"ringRow\",\n       45: \"barbellRow\",\n       46: \"bentOverRowWithBarbell\",\n       47: \"bentOverRowWithDumbell\",\n       48: \"seatedUnderhandGripCableRow\",\n       49: \"trxInvertedRow\",\n       50: \"weightedInvertedRow\",\n       51: \"weightedTrxInvertedRow\",\n       52: \"dumbbellRowWheelchair\",\n       },\n   shoulderPressExerciseName: {\n       0: \"alternatingDumbbellShoulderPress\",\n       1: \"arnoldPress\",\n       2: \"barbellFrontSquatToPushPress\",\n       3: \"barbellPushPress\",\n       4: \"barbellShoulderPress\",\n       5: \"deadCurlPress\",\n       6: \"dumbbellAlternatingShoulderPressAndTwist\",\n       7: \"dumbbellHammerCurlToLungeToPress\",\n       8: \"dumbbellPushPress\",\n       9: \"floorInvertedShoulderPress\",\n       10: \"weightedFloorInvertedShoulderPress\",\n       11: \"invertedShoulderPress\",\n       12: \"weightedInvertedShoulderPress\",\n       13: \"oneArmPushPress\",\n       14: \"overheadBarbellPress\",\n       15: \"overheadDumbbellPress\",\n       16: \"seatedBarbellShoulderPress\",\n       17: \"seatedDumbbellShoulderPress\",\n       18: \"singleArmDumbbellShoulderPress\",\n       19: \"singleArmStepUpAndPress\",\n       20: \"smithMachineOverheadPress\",\n       21: \"splitStanceHammerCurlToPress\",\n       22: \"swissBallDumbbellShoulderPress\",\n       23: \"weightPlateFrontRaise\",\n       24: \"dumbbellShoulderPress\",\n       25: \"militaryPress\",\n       27: \"strictPress\",\n       28: \"dumbbellFrontRaise\",\n       29: \"dumbbellCurlToOverheadPressWheelchair\",\n       30: \"arnoldPressWheelchair\",\n       31: \"overheadDumbbellPressWheelchair\",\n       },\n   shoulderStabilityExerciseName: {\n       0: \"90DegreeCableExternalRotation\",\n       1: \"bandExternalRotation\",\n       2: \"bandInternalRotation\",\n       3: \"bentArmLateralRaiseAndExternalRotation\",\n       4: \"cableExternalRotation\",\n       5: \"dumbbellFacePullWithExternalRotation\",\n       6: \"floorIRaise\",\n       7: \"weightedFloorIRaise\",\n       8: \"floorTRaise\",\n       9: \"weightedFloorTRaise\",\n       10: \"floorYRaise\",\n       11: \"weightedFloorYRaise\",\n       12: \"inclineIRaise\",\n       13: \"weightedInclineIRaise\",\n       14: \"inclineLRaise\",\n       15: \"weightedInclineLRaise\",\n       16: \"inclineTRaise\",\n       17: \"weightedInclineTRaise\",\n       18: \"inclineWRaise\",\n       19: \"weightedInclineWRaise\",\n       20: \"inclineYRaise\",\n       21: \"weightedInclineYRaise\",\n       22: \"lyingExternalRotation\",\n       23: \"seatedDumbbellExternalRotation\",\n       24: \"standingLRaise\",\n       25: \"swissBallIRaise\",\n       26: \"weightedSwissBallIRaise\",\n       27: \"swissBallTRaise\",\n       28: \"weightedSwissBallTRaise\",\n       29: \"swissBallWRaise\",\n       30: \"weightedSwissBallWRaise\",\n       31: \"swissBallYRaise\",\n       32: \"weightedSwissBallYRaise\",\n       33: \"cableInternalRotation\",\n       34: \"lyingInternalRotation\",\n       35: \"seatedDumbbellInternalRotation\",\n       },\n   shrugExerciseName: {\n       0: \"barbellJumpShrug\",\n       1: \"barbellShrug\",\n       2: \"barbellUprightRow\",\n       3: \"behindTheBackSmithMachineShrug\",\n       4: \"dumbbellJumpShrug\",\n       5: \"dumbbellShrug\",\n       6: \"dumbbellUprightRow\",\n       7: \"inclineDumbbellShrug\",\n       8: \"overheadBarbellShrug\",\n       9: \"overheadDumbbellShrug\",\n       10: \"scaptionAndShrug\",\n       11: \"scapularRetraction\",\n       12: \"serratusChairShrug\",\n       13: \"weightedSerratusChairShrug\",\n       14: \"serratusShrug\",\n       15: \"weightedSerratusShrug\",\n       16: \"wideGripJumpShrug\",\n       17: \"wideGripBarbellShrug\",\n       18: \"behindTheBackShrug\",\n       19: \"dumbbellShrugWheelchair\",\n       20: \"shrugWheelchair\",\n       21: \"shrugArmDownWheelchair\",\n       22: \"shrugArmMidWheelchair\",\n       23: \"shrugArmUpWheelchair\",\n       24: \"uprightRow\",\n       },\n   sitUpExerciseName: {\n       0: \"alternatingSitUp\",\n       1: \"weightedAlternatingSitUp\",\n       2: \"bentKneeVUp\",\n       3: \"weightedBentKneeVUp\",\n       4: \"butterflySitUp\",\n       5: \"weightedButterflySitup\",\n       6: \"crossPunchRollUp\",\n       7: \"weightedCrossPunchRollUp\",\n       8: \"crossedArmsSitUp\",\n       9: \"weightedCrossedArmsSitUp\",\n       10: \"getUpSitUp\",\n       11: \"weightedGetUpSitUp\",\n       12: \"hoveringSitUp\",\n       13: \"weightedHoveringSitUp\",\n       14: \"kettlebellSitUp\",\n       15: \"medicineBallAlternatingVUp\",\n       16: \"medicineBallSitUp\",\n       17: \"medicineBallVUp\",\n       18: \"modifiedSitUp\",\n       19: \"negativeSitUp\",\n       20: \"oneArmFullSitUp\",\n       21: \"recliningCircle\",\n       22: \"weightedRecliningCircle\",\n       23: \"reverseCurlUp\",\n       24: \"weightedReverseCurlUp\",\n       25: \"singleLegSwissBallJackknife\",\n       26: \"weightedSingleLegSwissBallJackknife\",\n       27: \"theTeaser\",\n       28: \"theTeaserWeighted\",\n       29: \"threePartRollDown\",\n       30: \"weightedThreePartRollDown\",\n       31: \"vUp\",\n       32: \"weightedVUp\",\n       33: \"weightedRussianTwistOnSwissBall\",\n       34: \"weightedSitUp\",\n       35: \"xAbs\",\n       36: \"weightedXAbs\",\n       37: \"sitUp\",\n       38: \"ghdSitUps\",\n       39: \"sitUpTurkishGetUp\",\n       40: \"russianTwistOnSwissBall\",\n       },\n   squatExerciseName: {\n       0: \"legPress\",\n       1: \"backSquatWithBodyBar\",\n       2: \"backSquats\",\n       3: \"weightedBackSquats\",\n       4: \"balancingSquat\",\n       5: \"weightedBalancingSquat\",\n       6: \"barbellBackSquat\",\n       7: \"barbellBoxSquat\",\n       8: \"barbellFrontSquat\",\n       9: \"barbellHackSquat\",\n       10: \"barbellHangSquatSnatch\",\n       11: \"barbellLateralStepUp\",\n       12: \"barbellQuarterSquat\",\n       13: \"barbellSiffSquat\",\n       14: \"barbellSquatSnatch\",\n       15: \"barbellSquatWithHeelsRaised\",\n       16: \"barbellStepover\",\n       17: \"barbellStepUp\",\n       18: \"benchSquatWithRotationalChop\",\n       19: \"weightedBenchSquatWithRotationalChop\",\n       20: \"bodyWeightWallSquat\",\n       21: \"weightedWallSquat\",\n       22: \"boxStepSquat\",\n       23: \"weightedBoxStepSquat\",\n       24: \"bracedSquat\",\n       25: \"crossedArmBarbellFrontSquat\",\n       26: \"crossoverDumbbellStepUp\",\n       27: \"dumbbellFrontSquat\",\n       28: \"dumbbellSplitSquat\",\n       29: \"dumbbellSquat\",\n       30: \"dumbbellSquatClean\",\n       31: \"dumbbellStepover\",\n       32: \"dumbbellStepUp\",\n       33: \"elevatedSingleLegSquat\",\n       34: \"weightedElevatedSingleLegSquat\",\n       35: \"figureFourSquats\",\n       36: \"weightedFigureFourSquats\",\n       37: \"gobletSquat\",\n       38: \"kettlebellSquat\",\n       39: \"kettlebellSwingOverhead\",\n       40: \"kettlebellSwingWithFlipToSquat\",\n       41: \"lateralDumbbellStepUp\",\n       42: \"oneLeggedSquat\",\n       43: \"overheadDumbbellSquat\",\n       44: \"overheadSquat\",\n       45: \"partialSingleLegSquat\",\n       46: \"weightedPartialSingleLegSquat\",\n       47: \"pistolSquat\",\n       48: \"weightedPistolSquat\",\n       49: \"plieSlides\",\n       50: \"weightedPlieSlides\",\n       51: \"plieSquat\",\n       52: \"weightedPlieSquat\",\n       53: \"prisonerSquat\",\n       54: \"weightedPrisonerSquat\",\n       55: \"singleLegBenchGetUp\",\n       56: \"weightedSingleLegBenchGetUp\",\n       57: \"singleLegBenchSquat\",\n       58: \"weightedSingleLegBenchSquat\",\n       59: \"singleLegSquatOnSwissBall\",\n       60: \"weightedSingleLegSquatOnSwissBall\",\n       61: \"squat\",\n       62: \"weightedSquat\",\n       63: \"squatsWithBand\",\n       64: \"staggeredSquat\",\n       65: \"weightedStaggeredSquat\",\n       66: \"stepUp\",\n       67: \"weightedStepUp\",\n       68: \"suitcaseSquats\",\n       69: \"sumoSquat\",\n       70: \"sumoSquatSlideIn\",\n       71: \"weightedSumoSquatSlideIn\",\n       72: \"sumoSquatToHighPull\",\n       73: \"sumoSquatToStand\",\n       74: \"weightedSumoSquatToStand\",\n       75: \"sumoSquatWithRotation\",\n       76: \"weightedSumoSquatWithRotation\",\n       77: \"swissBallBodyWeightWallSquat\",\n       78: \"weightedSwissBallWallSquat\",\n       79: \"thrusters\",\n       80: \"unevenSquat\",\n       81: \"weightedUnevenSquat\",\n       82: \"waistSlimmingSquat\",\n       83: \"wallBall\",\n       84: \"wideStanceBarbellSquat\",\n       85: \"wideStanceGobletSquat\",\n       86: \"zercherSquat\",\n       87: \"kbsOverhead\", // Deprecated do not use\n       88: \"squatAndSideKick\",\n       89: \"squatJumpsInNOut\",\n       90: \"pilatesPlieSquatsParallelTurnedOutFlatAndHeels\",\n       91: \"releveStraightLegAndKneeBentWithOneLegVariation\",\n       92: \"alternatingBoxDumbbellStepUps\",\n       93: \"dumbbellOverheadSquatSingleArm\",\n       94: \"dumbbellSquatSnatch\",\n       95: \"medicineBallSquat\",\n       97: \"wallBallSquatAndPress\",\n       98: \"squatAmericanSwing\",\n       100: \"airSquat\",\n       101: \"dumbbellThrusters\",\n       102: \"overheadBarbellSquat\",\n       },\n   totalBodyExerciseName: {\n       0: \"burpee\",\n       1: \"weightedBurpee\",\n       2: \"burpeeBoxJump\",\n       3: \"weightedBurpeeBoxJump\",\n       4: \"highPullBurpee\",\n       5: \"manMakers\",\n       6: \"oneArmBurpee\",\n       7: \"squatThrusts\",\n       8: \"weightedSquatThrusts\",\n       9: \"squatPlankPushUp\",\n       10: \"weightedSquatPlankPushUp\",\n       11: \"standingTRotationBalance\",\n       12: \"weightedStandingTRotationBalance\",\n       13: \"barbellBurpee\",\n       15: \"burpeeBoxJumpOverYesLiterallyJumpingOverTheBox\",\n       16: \"burpeeBoxJumpStepUpOver\",\n       17: \"lateralBarbellBurpee\",\n       18: \"totalBodyBurpeeOverBar\",\n       19: \"burpeeBoxJumpOver\",\n       20: \"burpeeWheelchair\",\n       },\n   moveExerciseName: {\n       0: \"archAndCurl\",\n       1: \"armCirclesWithBallBandAndWeight\",\n       2: \"armStretch\",\n       3: \"backMassage\",\n       4: \"bellyBreathing\",\n       5: \"bridgeWithBall\",\n       6: \"diamondLegCrunch\",\n       7: \"diamondLegLift\",\n       8: \"eightPointShoulderOpener\",\n       9: \"footRolling\",\n       10: \"footwork\",\n       11: \"footworkOnDisc\",\n       12: \"forwardFold\",\n       13: \"frogWithBand\",\n       14: \"halfRollUp\",\n       15: \"hamstringCurl\",\n       16: \"hamstringStretch\",\n       17: \"hipStretch\",\n       18: \"hugATreeWithBallBandAndWeight\",\n       19: \"kneeCircles\",\n       20: \"kneeFoldsOnDisc\",\n       21: \"lateralFlexion\",\n       22: \"legStretchWithBand\",\n       23: \"legStretchWithLegCircles\",\n       24: \"lowerLiftOnDisc\",\n       25: \"lungeSquat\",\n       26: \"lungesWithKneeLift\",\n       27: \"mermaidStretch\",\n       28: \"neutralPelvicPosition\",\n       29: \"pelvicClocksOnDisc\",\n       30: \"pilatesPlieSquatsParallelTurnedOutFlatAndHeelsWithChair\",\n       31: \"piriformisStretch\",\n       32: \"plankKneeCrosses\",\n       33: \"plankKneePulls\",\n       34: \"plankUpDowns\",\n       35: \"prayerMudra\",\n       36: \"psoasLungeStretch\",\n       37: \"ribcageBreathing\",\n       38: \"rollDown\",\n       39: \"rollUpWithWeightAndBand\",\n       40: \"saw\",\n       41: \"scapularStabilization\",\n       42: \"scissorsOnDisc\",\n       43: \"seatedHipStretchup\",\n       44: \"seatedTwist\",\n       45: \"shavingTheHeadWithBallBandAndWeight\",\n       46: \"spinalTwist\",\n       47: \"spinalTwistStretch\",\n       48: \"spineStretchForward\",\n       49: \"squatOpenArmTwistPose\",\n       50: \"squatsWithBall\",\n       51: \"standAndHang\",\n       52: \"standingSideStretch\",\n       53: \"standingSingleLegForwardBendWithItBandOpener\",\n       54: \"straightLegCrunchWithLegLift\",\n       55: \"straightLegCrunchWithLegLiftWithBall\",\n       56: \"straightLegCrunchWithLegsCrossed\",\n       57: \"straightLegCrunchWithLegsCrossedWithBall\",\n       58: \"straightLegDiagonalCrunch\",\n       59: \"straightLegDiagonalCrunchWithBall\",\n       60: \"tailboneCurl\",\n       61: \"throatLock\",\n       62: \"tickTockSideRoll\",\n       63: \"twist\",\n       64: \"vLegCrunches\",\n       65: \"vSit\",\n       66: \"forwardFoldWheelchair\",\n       67: \"forwardFoldPlusWheelchair\",\n       68: \"armCirclesLowForwardWheelchair\",\n       69: \"armCirclesMidForwardWheelchair\",\n       70: \"armCirclesHighForwardWheelchair\",\n       71: \"armCirclesLowBackwardWheelchair\",\n       72: \"armCirclesMidBackwardWheelchair\",\n       73: \"armCirclesHighBackwardWheelchair\",\n       74: \"coreTwistsWheelchair\",\n       75: \"armRaiseWheelchair\",\n       76: \"chestExpandWheelchair\",\n       77: \"armExtendWheelchair\",\n       78: \"forwardBendWheelchair\",\n       79: \"toeTouchWheelchair\",\n       80: \"extendedToeTouchWheelchair\",\n       81: \"seatedArmCircles\",\n       82: \"trunkRotations\",\n       83: \"seatedTrunkRotations\",\n       84: \"toeTouch\",\n       },\n   poseExerciseName: {\n       0: \"allFours\",\n       1: \"ankleToKnee\",\n       2: \"babyCobra\",\n       3: \"boat\",\n       4: \"boundAngle\",\n       5: \"boundSeatedSingleLegForwardBend\",\n       6: \"bow\",\n       7: \"bowedHalfMoon\",\n       8: \"bridge\",\n       9: \"cat\",\n       10: \"chair\",\n       11: \"childs\",\n       12: \"corpse\",\n       13: \"cowFace\",\n       14: \"cow\",\n       15: \"devotionalWarrior\",\n       16: \"dolphinPlank\",\n       17: \"dolphin\",\n       18: \"downDogKneeToNose\",\n       19: \"downDogSplit\",\n       20: \"downDogSplitOpenHipBentKnee\",\n       21: \"downwardFacingDog\",\n       22: \"eagle\",\n       23: \"easySeated\",\n       24: \"extendedPuppy\",\n       25: \"extendedSideAngle\",\n       26: \"fish\",\n       27: \"fourLimbedStaff\",\n       28: \"fullSplit\",\n       29: \"gate\",\n       30: \"halfChairHalfAnkleToKnee\",\n       31: \"halfMoon\",\n       32: \"headToKnee\",\n       33: \"heron\",\n       34: \"heros\",\n       35: \"highLunge\",\n       36: \"kneesChestChin\",\n       37: \"lizard\",\n       38: \"locust\",\n       39: \"lowLunge\",\n       40: \"lowLungeTwist\",\n       41: \"lowLungeWithKneeDown\",\n       42: \"mermaid\",\n       43: \"mountain\",\n       44: \"oneLeggedDownwardFacingPoseOpenHipBentKnee\",\n       45: \"oneLeggedPigeon\",\n       46: \"peacefulWarrior\",\n       47: \"plank\",\n       48: \"plow\",\n       49: \"reclinedHandToFoot\",\n       50: \"revolvedHalfMoon\",\n       51: \"revolvedHeadToKnee\",\n       52: \"revolvedTriangle\",\n       53: \"runnersLunge\",\n       54: \"seatedEasySideBend\",\n       55: \"seatedEasyTwist\",\n       56: \"seatedLongLegForwardBend\",\n       57: \"seatedWideLegForwardBend\",\n       58: \"shoulderStand\",\n       59: \"sideBoat\",\n       60: \"sidePlank\",\n       61: \"sphinx\",\n       62: \"squatOpenArmTwist\",\n       63: \"squatPalmPress\",\n       64: \"staff\",\n       65: \"standingArmsUp\",\n       66: \"standingForwardBendHalfwayUp\",\n       67: \"standingForwardBend\",\n       68: \"standingSideOpener\",\n       69: \"standingSingleLegForwardBend\",\n       70: \"standingSplit\",\n       71: \"standingWideLegForwardBend\",\n       72: \"standingWideLegForwardBendWithTwist\",\n       73: \"supineSpinalTwist\",\n       74: \"tableTop\",\n       75: \"threadTheNeedle\",\n       76: \"thunderbolt\",\n       77: \"thunderboltPoseBothSidesArmStretch\",\n       78: \"tree\",\n       79: \"triangle\",\n       80: \"upDog\",\n       81: \"upwardFacingPlank\",\n       82: \"warriorOne\",\n       83: \"warriorThree\",\n       84: \"warriorTwo\",\n       85: \"wheel\",\n       86: \"wideSideLunge\",\n       87: \"deepBreathingWheelchair\",\n       88: \"deepBreathingLowWheelchair\",\n       89: \"deepBreathingMidWheelchair\",\n       90: \"deepBreathingHighWheelchair\",\n       91: \"prayerWheelchair\",\n       92: \"overheadPrayerWheelchair\",\n       93: \"cactusWheelchair\",\n       94: \"breathingPunchesWheelchair\",\n       95: \"breathingPunchesExtendedWheelchair\",\n       96: \"breathingPunchesOverheadWheelchair\",\n       97: \"breathingPunchesOverheadAndDownWheelchair\",\n       98: \"breathingPunchesSideWheelchair\",\n       99: \"breathingPunchesExtendedSideWheelchair\",\n       100: \"breathingPunchesOverheadSideWheelchair\",\n       101: \"breathingPunchesOverheadAndDownSideWheelchair\",\n       102: \"leftHandBackWheelchair\",\n       103: \"triangleWheelchair\",\n       104: \"threadTheNeedleWheelchair\",\n       105: \"neckFlexionAndExtensionWheelchair\",\n       106: \"neckLateralFlexionWheelchair\",\n       107: \"spineFlexionAndExtensionWheelchair\",\n       108: \"spineRotationWheelchair\",\n       109: \"spineLateralFlexionWheelchair\",\n       110: \"alternativeSkiingWheelchair\",\n       111: \"reachForwardWheelchair\",\n       112: \"warriorWheelchair\",\n       113: \"reverseWarriorWheelchair\",\n       114: \"downwardFacingDogToCobra\",\n       115: \"seatedCatCow\",\n       },\n   tricepsExtensionExerciseName: {\n       0: \"benchDip\",\n       1: \"weightedBenchDip\",\n       2: \"bodyWeightDip\",\n       3: \"cableKickback\",\n       4: \"cableLyingTricepsExtension\",\n       5: \"cableOverheadTricepsExtension\",\n       6: \"dumbbellKickback\",\n       7: \"dumbbellLyingTricepsExtension\",\n       8: \"ezBarOverheadTricepsExtension\",\n       9: \"inclineDip\",\n       10: \"weightedInclineDip\",\n       11: \"inclineEzBarLyingTricepsExtension\",\n       12: \"lyingDumbbellPulloverToExtension\",\n       13: \"lyingEzBarTricepsExtension\",\n       14: \"lyingTricepsExtensionToCloseGripBenchPress\",\n       15: \"overheadDumbbellTricepsExtension\",\n       16: \"recliningTricepsPress\",\n       17: \"reverseGripPressdown\",\n       18: \"reverseGripTricepsPressdown\",\n       19: \"ropePressdown\",\n       20: \"seatedBarbellOverheadTricepsExtension\",\n       21: \"seatedDumbbellOverheadTricepsExtension\",\n       22: \"seatedEzBarOverheadTricepsExtension\",\n       23: \"seatedSingleArmOverheadDumbbellExtension\",\n       24: \"singleArmDumbbellOverheadTricepsExtension\",\n       25: \"singleDumbbellSeatedOverheadTricepsExtension\",\n       26: \"singleLegBenchDipAndKick\",\n       27: \"weightedSingleLegBenchDipAndKick\",\n       28: \"singleLegDip\",\n       29: \"weightedSingleLegDip\",\n       30: \"staticLyingTricepsExtension\",\n       31: \"suspendedDip\",\n       32: \"weightedSuspendedDip\",\n       33: \"swissBallDumbbellLyingTricepsExtension\",\n       34: \"swissBallEzBarLyingTricepsExtension\",\n       35: \"swissBallEzBarOverheadTricepsExtension\",\n       36: \"tabletopDip\",\n       37: \"weightedTabletopDip\",\n       38: \"tricepsExtensionOnFloor\",\n       39: \"tricepsPressdown\",\n       40: \"weightedDip\",\n       41: \"alternatingDumbbellLyingTricepsExtension\",\n       42: \"tricepsPress\",\n       43: \"dumbbellKickbackWheelchair\",\n       44: \"overheadDumbbellTricepsExtensionWheelchair\",\n       },\n   warmUpExerciseName: {\n       0: \"quadrupedRocking\",\n       1: \"neckTilts\",\n       2: \"ankleCircles\",\n       3: \"ankleDorsiflexionWithBand\",\n       4: \"ankleInternalRotation\",\n       5: \"armCircles\",\n       6: \"bentOverReachToSky\",\n       7: \"catCamel\",\n       8: \"elbowToFootLunge\",\n       9: \"forwardAndBackwardLegSwings\",\n       10: \"groiners\",\n       11: \"invertedHamstringStretch\",\n       12: \"lateralDuckUnder\",\n       13: \"neckRotations\",\n       14: \"oppositeArmAndLegBalance\",\n       15: \"reachRollAndLift\",\n       16: \"scorpion\", // Deprecated do not use\n       17: \"shoulderCircles\",\n       18: \"sideToSideLegSwings\",\n       19: \"sleeperStretch\",\n       20: \"slideOut\",\n       21: \"swissBallHipCrossover\",\n       22: \"swissBallReachRollAndLift\",\n       23: \"swissBallWindshieldWipers\",\n       24: \"thoracicRotation\",\n       25: \"walkingHighKicks\",\n       26: \"walkingHighKnees\",\n       27: \"walkingKneeHugs\",\n       28: \"walkingLegCradles\",\n       29: \"walkout\",\n       30: \"walkoutFromPushUpPosition\",\n       31: \"bicepsStretch\",\n       32: \"glutesStretch\",\n       33: \"standingHamstringStretch\",\n       34: \"stretch90_90\",\n       35: \"stretchAbs\",\n       36: \"stretchButterfly\",\n       37: \"stretchCalf\",\n       38: \"stretchCatCow\",\n       39: \"stretchChildsPose\",\n       40: \"stretchCobra\",\n       41: \"stretchForearms\",\n       42: \"stretchForwardGlutes\",\n       43: \"stretchFrontSplit\",\n       44: \"stretchHamstring\",\n       45: \"stretchHipFlexorAndQuad\",\n       46: \"stretchLat\",\n       47: \"stretchLevatorScapulae\",\n       48: \"stretchLungeWithSpinalTwist\",\n       49: \"stretchLungingHipFlexor\",\n       50: \"stretchLyingAbduction\",\n       51: \"stretchLyingItBand\",\n       52: \"stretchLyingKneeToChest\",\n       53: \"stretchLyingPiriformis\",\n       54: \"stretchLyingSpinalTwist\",\n       55: \"stretchNeck\",\n       56: \"stretchObliques\",\n       57: \"stretchOverUnderShoulder\",\n       58: \"stretchPectoral\",\n       59: \"stretchPigeonPose\",\n       60: \"stretchPiriformis\",\n       61: \"stretchQuad\",\n       62: \"stretchScorpion\",\n       63: \"stretchShoulder\",\n       64: \"stretchSide\",\n       65: \"stretchSideLunge\",\n       66: \"stretchSideSplit\",\n       67: \"stretchStandingItBand\",\n       68: \"stretchStraddle\",\n       69: \"stretchTriceps\",\n       70: \"stretchWallChestAndShoulder\",\n       71: \"neckRotationsWheelchair\",\n       72: \"halfKneelingArmRotation\",\n       73: \"threeWayAnkleMobilization\",\n       74: \"ninetyNinetyHipSwitch\", // 90_90_hip_switch\n       75: \"activeFrog\",\n       76: \"shoulderSweeps\",\n       77: \"ankleLunges\",\n       78: \"backRollFoamRoller\",\n       79: \"bearCrawl\",\n       80: \"latissimusDorsiFoamRoll\",\n       81: \"reverseTHipOpener\",\n       82: \"shoulderRolls\",\n       83: \"chestOpeners\",\n       84: \"tricepsStretch\",\n       85: \"upperBackStretch\",\n       86: \"hipCircles\",\n       87: \"ankleStretch\",\n       88: \"marchingInPlace\",\n       89: \"tricepsStretchWheelchair\",\n       90: \"upperBackStretchWheelchair\",\n       },\n   runExerciseName: {\n       0: \"run\",\n       1: \"walk\",\n       2: \"jog\",\n       3: \"sprint\",\n       4: \"runOrWalk\",\n       5: \"speedWalk\",\n       6: \"warmUp\",\n       },\n   bikeExerciseName: {\n       0: \"bike\",\n       1: \"ride\",\n       2: \"sprint\",\n       },\n   bandedExercisesExerciseName: {\n       1: \"abTwist\",\n       2: \"backExtension\",\n       3: \"bicycleCrunch\",\n       4: \"calfRaises\",\n       5: \"chestPress\",\n       6: \"clamShells\",\n       7: \"curl\",\n       8: \"deadbug\",\n       9: \"deadlift\",\n       10: \"donkeyKick\",\n       11: \"externalRotation\",\n       12: \"externalRotationAt90DegreeAbduction\",\n       13: \"facePull\",\n       14: \"fireHydrant\",\n       15: \"fly\",\n       16: \"frontRaise\",\n       17: \"gluteBridge\",\n       18: \"hamstringCurls\",\n       19: \"highPlankLegLifts\",\n       20: \"hipExtension\",\n       21: \"internalRotation\",\n       22: \"jumpingJack\",\n       23: \"kneelingCrunch\",\n       24: \"lateralBandWalks\",\n       25: \"lateralRaise\",\n       26: \"latpull\",\n       27: \"legAbduction\",\n       28: \"legAdduction\",\n       29: \"legExtension\",\n       30: \"lunge\",\n       31: \"plank\",\n       32: \"pullApart\",\n       33: \"pushUps\",\n       34: \"reverseCrunch\",\n       35: \"row\",\n       36: \"shoulderAbduction\",\n       37: \"shoulderExtension\",\n       38: \"shoulderExternalRotation\",\n       39: \"shoulderFlexionTo90Degrees\",\n       40: \"sidePlankLegLifts\",\n       41: \"sideRaise\",\n       42: \"squat\",\n       43: \"squatToPress\",\n       44: \"tricepExtension\",\n       45: \"tricepKickback\",\n       46: \"uprightRow\",\n       47: \"wallCrawlWithExternalRotation\",\n       49: \"lateralRaiseWheelchair\",\n       50: \"tricepsExtensionWheelchair\",\n       51: \"chestFlyInclineWheelchair\",\n       52: \"chestFlyDeclineWheelchair\",\n       53: \"pullDownWheelchair\",\n       54: \"straightArmPullDownWheelchair\",\n       55: \"curlWheelchair\",\n       56: \"overheadCurlWheelchair\",\n       57: \"facePullWheelchair\",\n       58: \"aroundTheWorldWheelchair\",\n       59: \"pullApartWheelchair\",\n       60: \"sideCurlWheelchair\",\n       61: \"overheadPressWheelchair\",\n       },\n   battleRopeExerciseName: {\n       0: \"alternatingFigureEight\",\n       1: \"alternatingJumpWave\",\n       2: \"alternatingKneelingToStandingWave\",\n       3: \"alternatingLungeWave\",\n       4: \"alternatingSquatWave\",\n       5: \"alternatingWave\",\n       6: \"alternatingWaveWithLateralShuffle\",\n       7: \"clapWave\",\n       8: \"doubleArmFigureEight\",\n       9: \"doubleArmSideToSideSnake\",\n       10: \"doubleArmSideWave\",\n       11: \"doubleArmSlam\",\n       12: \"doubleArmWave\",\n       13: \"grapplerToss\",\n       14: \"hipToss\",\n       15: \"inAndOutWave\",\n       16: \"insideCircle\",\n       17: \"jumpingJacks\",\n       18: \"outsideCircle\",\n       19: \"rainbow\",\n       20: \"sidePlankWave\",\n       21: \"sidewinder\",\n       22: \"sittingRussianTwist\",\n       23: \"snakeWave\",\n       24: \"splitJack\",\n       25: \"stageCoach\",\n       26: \"ultimateWarrior\",\n       27: \"upperCuts\",\n       },\n   ellipticalExerciseName: {\n       0: \"elliptical\",\n       },\n   floorClimbExerciseName: {\n       0: \"floorClimb\",\n       },\n   indoorBikeExerciseName: {\n       0: \"airBike\",\n       1: \"assaultBike\",\n       3: \"stationaryBike\",\n       },\n   indoorRowExerciseName: {\n       0: \"rowingMachine\",\n       },\n   ladderExerciseName: {\n       0: \"agility\",\n       1: \"speed\",\n       },\n   sandbagExerciseName: {\n       0: \"aroundTheWorld\",\n       1: \"backSquat\",\n       2: \"bearCrawlPullThrough\",\n       3: \"bearHugSquat\",\n       4: \"clean\",\n       5: \"cleanAndPress\",\n       6: \"curl\",\n       7: \"frontCarry\",\n       8: \"frontSquat\",\n       9: \"lunge\",\n       10: \"overheadPress\",\n       11: \"plankPullThrough\",\n       12: \"rotationalLunge\",\n       13: \"row\",\n       14: \"russianTwist\",\n       15: \"shouldering\",\n       16: \"shoveling\",\n       17: \"sideLunge\",\n       18: \"sprint\",\n       19: \"zercherSquat\",\n       },\n   sledExerciseName: {\n       0: \"backwardDrag\",\n       1: \"chestPress\",\n       2: \"forwardDrag\",\n       3: \"lowPush\",\n       4: \"push\",\n       5: \"row\",\n       },\n   sledgeHammerExerciseName: {\n       0: \"lateralSwing\",\n       1: \"hammerSlam\",\n       },\n   stairStepperExerciseName: {\n       0: \"stairStepper\",\n       },\n   suspensionExerciseName: {\n       0: \"chestFly\",\n       1: \"chestPress\",\n       2: \"crunch\",\n       3: \"curl\",\n       4: \"dip\",\n       5: \"facePull\",\n       6: \"gluteBridge\",\n       7: \"hamstringCurl\",\n       8: \"hipDrop\",\n       9: \"invertedRow\",\n       10: \"kneeDriveJump\",\n       11: \"kneeToChest\",\n       12: \"latPullover\",\n       13: \"lunge\",\n       14: \"mountainClimber\",\n       15: \"pendulum\",\n       16: \"pike\",\n       17: \"plank\",\n       18: \"powerPull\",\n       19: \"pullUp\",\n       20: \"pushUp\",\n       21: \"reverseMountainClimber\",\n       22: \"reversePlank\",\n       23: \"rollout\",\n       24: \"row\",\n       25: \"sideLunge\",\n       26: \"sidePlank\",\n       27: \"singleLegDeadlift\",\n       28: \"singleLegSquat\",\n       29: \"sitUp\",\n       30: \"split\",\n       31: \"squat\",\n       32: \"squatJump\",\n       33: \"tricepPress\",\n       34: \"yFly\",\n       },\n   tireExerciseName: {\n       0: \"flip\",\n       },\n   bikeOutdoorExerciseName: {\n       0: \"bike\",\n       },\n   runIndoorExerciseName: {\n       0: \"indoorTrackRun\",\n       1: \"treadmill\",\n       },\n   waterType: {\n       0: \"fresh\",\n       1: \"salt\",\n       2: \"en13319\",\n       3: \"custom\",\n       },\n   tissueModelType: {\n       0: \"zhl16c\", // Buhlmann's decompression algorithm, version C\n       },\n   diveGasStatus: {\n       0: \"disabled\",\n       1: \"enabled\",\n       2: \"backupOnly\",\n       },\n   diveAlert: {\n       0: \"ndlReached\",\n       1: \"gasSwitchPrompted\",\n       2: \"nearSurface\",\n       3: \"approachingNdl\",\n       4: \"po2Warn\",\n       5: \"po2CritHigh\",\n       6: \"po2CritLow\",\n       7: \"timeAlert\",\n       8: \"depthAlert\",\n       9: \"decoCeilingBroken\",\n       10: \"decoComplete\",\n       11: \"safetyStopBroken\",\n       12: \"safetyStopComplete\",\n       13: \"cnsWarning\",\n       14: \"cnsCritical\",\n       15: \"otuWarning\",\n       16: \"otuCritical\",\n       17: \"ascentCritical\",\n       18: \"alertDismissedByKey\",\n       19: \"alertDismissedByTimeout\",\n       20: \"batteryLow\",\n       21: \"batteryCritical\",\n       22: \"safetyStopStarted\",\n       23: \"approachingFirstDecoStop\",\n       24: \"setpointSwitchAutoLow\",\n       25: \"setpointSwitchAutoHigh\",\n       26: \"setpointSwitchManualLow\",\n       27: \"setpointSwitchManualHigh\",\n       28: \"autoSetpointSwitchIgnored\",\n       29: \"switchedToOpenCircuit\",\n       30: \"switchedToClosedCircuit\",\n       32: \"tankBatteryLow\",\n       33: \"po2CcrDilLow\", // ccr diluent has low po2\n       34: \"decoStopCleared\", // a deco stop has been cleared\n       35: \"apneaNeutralBuoyancy\", // Target Depth Apnea Alarm triggered\n       36: \"apneaTargetDepth\", // Neutral Buoyance Apnea Alarm triggered\n       37: \"apneaSurface\", // Surface Apnea Alarm triggered\n       38: \"apneaHighSpeed\", // High Speed Apnea Alarm triggered\n       39: \"apneaLowSpeed\", // Low Speed Apnea Alarm triggered\n       },\n   diveAlarmType: {\n       0: \"depth\", // Alarm when a certain depth is crossed\n       1: \"time\", // Alarm when a certain time has transpired\n       2: \"speed\", // Alarm when a certain ascent or descent rate is exceeded\n       },\n   diveBacklightMode: {\n       0: \"atDepth\",\n       1: \"alwaysOn\",\n       },\n   sleepLevel: {\n       0: \"unmeasurable\",\n       1: \"awake\",\n       2: \"light\",\n       3: \"deep\",\n       4: \"rem\",\n       },\n   spo2MeasurementType: {\n       0: \"offWrist\",\n       1: \"spotCheck\",\n       2: \"continuousCheck\",\n       3: \"periodic\",\n       },\n   ccrSetpointSwitchMode: {\n       0: \"manual\", // User switches setpoints manually\n       1: \"automatic\", // Switch automatically based on depth\n       },\n   diveGasMode: {\n       0: \"openCircuit\",\n       1: \"closedCircuitDiluent\",\n       },\n   projectileType: {\n       0: \"arrow\", // Arrow projectile type\n       1: \"rifleCartridge\", // Rifle cartridge projectile type\n       2: \"pistolCartridge\", // Pistol cartridge projectile type\n       3: \"shotshell\", // Shotshell projectile type\n       4: \"airRiflePellet\", // Air rifle pellet projectile type\n       5: \"other\", // Other projectile type\n       },\n   faveroProduct: {\n       10: \"assiomaUno\",\n       12: \"assiomaDuo\",\n       },\n   splitType: {\n       1: \"ascentSplit\",\n       2: \"descentSplit\",\n       3: \"intervalActive\",\n       4: \"intervalRest\",\n       5: \"intervalWarmup\",\n       6: \"intervalCooldown\",\n       7: \"intervalRecovery\",\n       8: \"intervalOther\",\n       9: \"climbActive\",\n       10: \"climbRest\",\n       11: \"surfActive\",\n       12: \"runActive\",\n       13: \"runRest\",\n       14: \"workoutRound\",\n       17: \"rwdRun\", // run/walk detection running\n       18: \"rwdWalk\", // run/walk detection walking\n       21: \"windsurfActive\",\n       22: \"rwdStand\", // run/walk detection standing\n       23: \"transition\", // Marks the time going from ascent_split to descent_split/used in backcountry ski\n       28: \"skiLiftSplit\",\n       29: \"skiRunSplit\",\n       },\n   climbProEvent: {\n       0: \"approach\",\n       1: \"start\",\n       2: \"complete\",\n       },\n   gasConsumptionRateType: {\n       0: \"pressureSac\", // Pressure-based Surface Air Consumption\n       1: \"volumeSac\", // Volumetric Surface Air Consumption\n       2: \"rmv\", // Respiratory Minute Volume\n       },\n   tapSensitivity: {\n       0: \"high\",\n       1: \"medium\",\n       2: \"low\",\n       },\n   radarThreatLevelType: {\n       0: \"threatUnknown\",\n       1: \"threatNone\",\n       2: \"threatApproaching\",\n       3: \"threatApproachingFast\",\n       },\n   sleepDisruptionSeverity: {\n       0: \"none\",\n       1: \"low\",\n       2: \"medium\",\n       3: \"high\",\n       },\n   maxMetSpeedSource: {\n       0: \"onboardGps\",\n       1: \"connectedGps\",\n       2: \"cadence\",\n       },\n   maxMetHeartRateSource: {\n       0: \"whr\", // Wrist Heart Rate Monitor\n       1: \"hrm\", // Chest Strap Heart Rate Monitor\n       },\n   hrvStatus: {\n       0: \"none\",\n       1: \"poor\",\n       2: \"low\",\n       3: \"unbalanced\",\n       4: \"balanced\",\n       },\n   noFlyTimeMode: {\n       0: \"standard\", // Standard Diver Alert Network no-fly guidance\n       1: \"flat24Hours\", // Flat 24 hour no-fly guidance\n       },\n   },\nMesgNum : {\n   FILE_ID: 0,\n   FILE_CREATOR: 49,\n   TIMESTAMP_CORRELATION: 162,\n   SOFTWARE: 35,\n   SLAVE_DEVICE: 106,\n   CAPABILITIES: 1,\n   FILE_CAPABILITIES: 37,\n   MESG_CAPABILITIES: 38,\n   FIELD_CAPABILITIES: 39,\n   DEVICE_SETTINGS: 2,\n   USER_PROFILE: 3,\n   HRM_PROFILE: 4,\n   SDM_PROFILE: 5,\n   BIKE_PROFILE: 6,\n   CONNECTIVITY: 127,\n   WATCHFACE_SETTINGS: 159,\n   OHR_SETTINGS: 188,\n   TIME_IN_ZONE: 216,\n   ZONES_TARGET: 7,\n   SPORT: 12,\n   HR_ZONE: 8,\n   SPEED_ZONE: 53,\n   CADENCE_ZONE: 131,\n   POWER_ZONE: 9,\n   MET_ZONE: 10,\n   TRAINING_SETTINGS: 13,\n   DIVE_SETTINGS: 258,\n   DIVE_ALARM: 262,\n   DIVE_APNEA_ALARM: 393,\n   DIVE_GAS: 259,\n   GOAL: 15,\n   ACTIVITY: 34,\n   SESSION: 18,\n   LAP: 19,\n   LENGTH: 101,\n   RECORD: 20,\n   EVENT: 21,\n   DEVICE_INFO: 23,\n   DEVICE_AUX_BATTERY_INFO: 375,\n   TRAINING_FILE: 72,\n   WEATHER_CONDITIONS: 128,\n   WEATHER_ALERT: 129,\n   GPS_METADATA: 160,\n   CAMERA_EVENT: 161,\n   GYROSCOPE_DATA: 164,\n   ACCELEROMETER_DATA: 165,\n   MAGNETOMETER_DATA: 208,\n   BAROMETER_DATA: 209,\n   THREE_D_SENSOR_CALIBRATION: 167,\n   ONE_D_SENSOR_CALIBRATION: 210,\n   VIDEO_FRAME: 169,\n   OBDII_DATA: 174,\n   NMEA_SENTENCE: 177,\n   AVIATION_ATTITUDE: 178,\n   VIDEO: 184,\n   VIDEO_TITLE: 185,\n   VIDEO_DESCRIPTION: 186,\n   VIDEO_CLIP: 187,\n   SET: 225,\n   JUMP: 285,\n   SPLIT: 312,\n   SPLIT_SUMMARY: 313,\n   CLIMB_PRO: 317,\n   FIELD_DESCRIPTION: 206,\n   DEVELOPER_DATA_ID: 207,\n   COURSE: 31,\n   COURSE_POINT: 32,\n   SEGMENT_ID: 148,\n   SEGMENT_LEADERBOARD_ENTRY: 149,\n   SEGMENT_POINT: 150,\n   SEGMENT_LAP: 142,\n   SEGMENT_FILE: 151,\n   WORKOUT: 26,\n   WORKOUT_SESSION: 158,\n   WORKOUT_STEP: 27,\n   EXERCISE_TITLE: 264,\n   SCHEDULE: 28,\n   TOTALS: 33,\n   WEIGHT_SCALE: 30,\n   BLOOD_PRESSURE: 51,\n   MONITORING_INFO: 103,\n   MONITORING: 55,\n   MONITORING_HR_DATA: 211,\n   SPO2_DATA: 269,\n   HR: 132,\n   STRESS_LEVEL: 227,\n   MAX_MET_DATA: 229,\n   HSA_BODY_BATTERY_DATA: 314,\n   HSA_EVENT: 315,\n   HSA_ACCELEROMETER_DATA: 302,\n   HSA_GYROSCOPE_DATA: 376,\n   HSA_STEP_DATA: 304,\n   HSA_SPO2_DATA: 305,\n   HSA_STRESS_DATA: 306,\n   HSA_RESPIRATION_DATA: 307,\n   HSA_HEART_RATE_DATA: 308,\n   HSA_CONFIGURATION_DATA: 389,\n   HSA_WRIST_TEMPERATURE_DATA: 409,\n   MEMO_GLOB: 145,\n   SLEEP_LEVEL: 275,\n   ANT_CHANNEL_ID: 82,\n   ANT_RX: 80,\n   ANT_TX: 81,\n   EXD_SCREEN_CONFIGURATION: 200,\n   EXD_DATA_FIELD_CONFIGURATION: 201,\n   EXD_DATA_CONCEPT_CONFIGURATION: 202,\n   DIVE_SUMMARY: 268,\n   AAD_ACCEL_FEATURES: 289,\n   HRV: 78,\n   BEAT_INTERVALS: 290,\n   HRV_STATUS_SUMMARY: 370,\n   HRV_VALUE: 371,\n   RAW_BBI: 372,\n   RESPIRATION_RATE: 297,\n   CHRONO_SHOT_SESSION: 387,\n   CHRONO_SHOT_DATA: 388,\n   TANK_UPDATE: 319,\n   TANK_SUMMARY: 323,\n   SLEEP_ASSESSMENT: 346,\n   SLEEP_DISRUPTION_SEVERITY_PERIOD: 470,\n   SLEEP_DISRUPTION_OVERNIGHT_SEVERITY: 471,\n   SKIN_TEMP_OVERNIGHT: 398,\n   PAD: 105,\n   }\n}\n\nexport default Profile;\n", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\nimport Profile from \"./profile.js\";\n\nconst decodeMemoGlobs = (messages) => {\n    if ((messages?.memoGlobMesgs?.length ?? 0) == 0) {\n        return;\n    }\n\n    const memoGlobMesgs = messages.memoGlobMesgs;\n\n    // Group memoGlob mesgs by mesgNum, parentIndex, and fieldNum\n    const groupedMemoGlobs = Object.groupBy(memoGlobMesgs, ({ mesgNum, parentIndex, fieldNum }) => {\n        return JSON.stringify({\n            mesgNum,\n            parentIndex,\n            fieldNum\n        });\n    });\n\n    Object.entries(groupedMemoGlobs).forEach(([key, memoGlobMesgs]) => {\n        const { mesgNum, parentIndex, fieldNum } = JSON.parse(key);\n\n        // Sort grouped memoGlob messages by part index\n        memoGlobMesgs.sort((a, b) => a.partIndex - b.partIndex);\n\n        const mesgProfile = Object.values(Profile.messages).find((mesgDefinition) => {\n            return mesgDefinition.name == mesgNum || mesgDefinition.num == mesgNum\n        });\n\n        const targetMesg = messages[mesgProfile?.messagesKey ?? mesgNum]?.[parentIndex];\n        if (targetMesg == null) {\n            return;\n        }\n\n        const targetFieldKey = mesgProfile?.fields?.[fieldNum]?.name ?? fieldNum;\n\n        const memoGlobBytes = memoGlobMesgs.reduce((accumluatedBytes, mesg) => {\n            return accumluatedBytes.concat(mesg.data);\n        }, []);\n\n        targetMesg[targetFieldKey] = decodeMemoGlobBytesToUtf8(memoGlobBytes);\n    });\n}\n\nconst decodeMemoGlobBytesToUtf8 = (memoGlobBytes) => {\n    let decoder = new TextDecoder('utf-8');\n    let bytes = new Uint8Array(memoGlobBytes);\n\n    return decoder.decode(bytes);\n}\n\nexport default {\n    decodeMemoGlobs,\n    decodeMemoGlobBytesToUtf8\n}", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nconst sanitizeValues = (values) => {\n    if (onlyNullValues(values)) {\n        return null;\n    }\n\n    return values.length === 1 ? values[0] : values;\n}\n\nconst trimStringTrailingNulls = (string) => {\n    if (string == null) {\n        return;\n    }\n\n    let strings = string.split(\"\\u0000\")\n\n    while (strings[strings.length - 1] === \"\") {\n        strings.pop();\n        if (strings.length === 0) {\n            return \"\";\n        }\n    }\n\n    return strings.length === 1 ? strings[0] : strings;\n}\n\nconst onlyNullValues = (values) => values.reduce((state, value) => value != null ? false : state, true);\n\nconst onlyInvalidValues = (rawFieldValue, invalidValue) => {\n    if (Array.isArray(rawFieldValue)) {\n        return rawFieldValue.reduce((state, value) => value != invalidValue ? false : state, true);\n    }\n\n    return rawFieldValue === invalidValue;\n}\n\nexport default {\n    sanitizeValues,\n    trimStringTrailingNulls,\n    onlyNullValues,\n    onlyInvalidValues\n};\n", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nimport FIT from \"./fit.js\";\nimport UtilsInternal from \"./utils-internal.js\";\n\nclass Stream {\n    static LITTLE_ENDIAN = true;\n    static BIG_ENDIAN = false;\n\n    #position = 0;\n    #arrayBuffer = null;\n    #textDecoder = new TextDecoder(\"utf-8\", { fatal: false, ignoreBOM: true });\n    #crcCalculator = null;\n\n    /**\n     * Convenience method for creating a Stream from a byte array\n     * @param {Array<number>} data An array of bytes\n     * @returns {Stream} A new Stream object\n     * @static\n     */\n    static fromByteArray(data) {\n        const buf = new Uint8Array(data);\n        return this.fromArrayBuffer(buf.buffer);\n    }\n\n    /**\n     * Convenience method for creating a Stream from a Node Buffer\n     * @param {Buffer} buffer - Node Buffer of bytes\n     * @returns {Stream} A new Stream object\n     * @static\n     */\n    static fromBuffer(buffer) {\n        const arrayBuffer = buffer.buffer.slice(buffer.byteOffset, buffer.byteOffset + buffer.byteLength);\n        return this.fromArrayBuffer(arrayBuffer);\n    }\n\n    /**\n     * Convenience method for creating a Stream from an ArrayBuffer\n     * @param {ArrayBuffer} arrayBuffer - An ArrayBuffer of bytes\n     * @returns {Stream} A new Stream object\n     * @static\n     */\n    static fromArrayBuffer(arrayBuffer) {\n        const stream = new Stream(arrayBuffer);\n        return stream;\n    }\n\n    /**\n     * Creates a Stream containing a FIT file\n     * @constructor\n     * @param {ArrayBuffer} stream - ArrayBuffer containing a FIT file\n     */\n    constructor(arrayBuffer) {\n        this.#position = 0;\n        this.#arrayBuffer = arrayBuffer;\n    }\n\n    get length() {\n        return this.#arrayBuffer.byteLength;\n    }\n\n    get bytesRead() {\n        return this.#position;\n    }\n\n    get position() {\n        return this.#position;\n    }\n\n    get crcCalculator() {\n        return this.#crcCalculator;\n    }\n\n    set crcCalculator(crcCalculator) {\n        this.#crcCalculator = crcCalculator;\n    }\n\n    reset() {\n        this.seek(0);\n    }\n\n    seek(position) {\n        this.#position = position;\n    }\n\n    slice(begin, end) {\n        return this.#arrayBuffer.slice(begin, end);\n    }\n\n    peekByte() {\n        const arrayBuffer = this.#arrayBuffer.slice(this.#position, this.#position + 1);\n        const dataView = new DataView(arrayBuffer);\n        return dataView.getUint8(0);\n    }\n\n    readByte() {\n        return this.readUInt8();\n    }\n\n    readBytes(size) {\n        if (this.#position + size > this.#arrayBuffer.byteLength) {\n            throw Error(`FIT Runtime Error end of stream at byte ${this.#position}`);\n        }\n\n        const bytes = new Uint8Array(this.#arrayBuffer, this.#position, size);\n        this.#position += size;\n\n        this.#crcCalculator?.addBytes(bytes, 0, size);\n\n        return bytes;\n    }\n\n    readUInt8(opts) {\n        return this.readValue(FIT.BaseType.UINT8, 1, { convertInvalidToNull: false, ...opts });\n    }\n\n    readInt8(opts) {\n        return this.readValue(FIT.BaseType.SINT8, 1, { convertInvalidToNull: false, ...opts });\n    }\n\n    readUInt16(opts) {\n        return this.readValue(FIT.BaseType.UINT16, 2, { convertInvalidToNull: false, ...opts });\n    }\n\n    readInt16(opts) {\n        return this.readValue(FIT.BaseType.SINT16, 2, { convertInvalidToNull: false, ...opts });\n    }\n\n    readUInt32(opts) {\n        return this.readValue(FIT.BaseType.UINT32, 4, { convertInvalidToNull: false, ...opts });\n    }\n\n    readInt32(opts) {\n        return this.readValue(FIT.BaseType.SINT32, 4, { convertInvalidToNull: false, ...opts });\n    }\n\n    readUInt64(opts) {\n        return this.readValue(FIT.BaseType.UINT64, 8, { convertInvalidToNull: false, ...opts });\n    }\n\n    readInt64(opts) {\n        return this.readValue(FIT.BaseType.SINT64, 8, { convertInvalidToNull: false, ...opts });\n    }\n\n    readFloat32(opts) {\n        return this.readValue(FIT.BaseType.FLOAT32, 4, { convertInvalidToNull: false, ...opts });\n    }\n\n    readFloat64(opts) {\n        return this.readValue(FIT.BaseType.FLOAT64, 8, { convertInvalidToNull: false, ...opts });\n    }\n\n    readString(strlen) {\n        return this.readValue(FIT.BaseType.STRING, strlen);\n    }\n\n    readValue(baseType, size, { endianness = Stream.LITTLE_ENDIAN, convertInvalidToNull = true } = {}) {\n        const baseTypeSize = FIT.BaseTypeDefinitions[baseType].size;\n        const baseTypeInvalid = FIT.BaseTypeDefinitions[baseType].invalid;\n\n        const bytes = this.readBytes(size);\n\n        if (size % baseTypeSize !== 0) {\n            return convertInvalidToNull ? null : baseTypeInvalid;\n        }\n\n        if (baseType === FIT.BaseType.STRING) {\n            const string = this.#textDecoder.decode(bytes).replace(/\\uFFFD/g, \"\");\n            const strings = string.split('\\0');\n\n            while (strings[strings.length - 1] === \"\") {\n                strings.pop();\n            }\n\n            if (strings.length === 0) {\n                return null;\n            }\n\n            return strings.length === 1 ? strings[0] : strings;\n        }\n\n        const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n        let values = [];\n\n        const count = size / baseTypeSize;\n\n        for (let i = 0; i < count; i++) {\n\n            switch (baseType) {\n                case FIT.BaseType.BYTE:\n                case FIT.BaseType.ENUM:\n                case FIT.BaseType.UINT8:\n                case FIT.BaseType.UINT8Z:\n                    values.push(dataView.getUint8(i * baseTypeSize));\n                    break;\n\n                case FIT.BaseType.SINT8:\n                    values.push(dataView.getInt8(i * baseTypeSize));\n                    break;\n\n                case FIT.BaseType.UINT16:\n                case FIT.BaseType.UINT16Z:\n                    values.push(dataView.getUint16(i * baseTypeSize, endianness));\n                    break;\n\n                case FIT.BaseType.SINT16:\n                    values.push(dataView.getInt16(i * baseTypeSize, endianness));\n                    break;\n\n                case FIT.BaseType.UINT32:\n                case FIT.BaseType.UINT32Z:\n                    values.push(dataView.getUint32(i * baseTypeSize, endianness));\n                    break;\n\n                case FIT.BaseType.SINT32:\n                    values.push(dataView.getInt32(i * baseTypeSize, endianness));\n                    break;\n\n                case FIT.BaseType.UINT64:\n                case FIT.BaseType.UINT64Z:\n                    values.push(dataView.getBigUint64(i * baseTypeSize, endianness));\n                    break;\n                case FIT.BaseType.SINT64:\n                    values.push(dataView.getBigInt64(i * baseTypeSize, endianness));\n                    break;\n\n                case FIT.BaseType.FLOAT32:\n                    values.push(dataView.getFloat32(i * baseTypeSize, endianness));\n                    break;\n\n                case FIT.BaseType.FLOAT64:\n                    values.push(dataView.getFloat64(i * baseTypeSize, endianness));\n                    break;\n            }\n        }\n\n        if (baseType === FIT.BaseType.BYTE) {\n            return UtilsInternal.onlyInvalidValues(values, baseTypeInvalid) ? null : values;\n        }\n\n        if (convertInvalidToNull) {\n            values = values.map(value => value === baseTypeInvalid ? null : value);\n        }\n\n        return UtilsInternal.sanitizeValues(values);\n    }\n}\n\nexport default Stream;", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nimport Accumulator from \"../src/accumulator.js\";\nimport BitStream from \"../src/bit-stream.js\";\nimport CrcCalculator from \"./crc-calculator.js\";\nimport FIT from \"./fit.js\";\nimport HrMesgUtils from \"./utils-hr-mesg.js\";\nimport MemoGlobUtils from \"./utils-memo-glob.js\";\nimport Profile from \"./profile.js\";\nimport Stream from \"./stream.js\";\nimport Utils from \"./utils.js\";\nimport UtilsInternal from \"./utils-internal.js\";\n\nconst COMPRESSED_HEADER_MASK = 0x80;\nconst MESG_DEFINITION_MASK = 0x40;\nconst DEV_DATA_MASK = 0x20;\nconst MESG_HEADER_MASK = 0x00;\nconst LOCAL_MESG_NUM_MASK = 0x0F;\n\nconst HEADER_WITH_CRC_SIZE = 14;\nconst HEADER_WITHOUT_CRC_SIZE = 12;\nconst CRC_SIZE = 2;\n\nconst DecodeMode = Object.freeze({\n    NORMAL: \"normal\",\n    SKIP_HEADER: \"skipHeader\",\n    DATA_ONLY: \"dataOnly\"\n});\n\nclass Decoder {\n    #localMessageDefinitions = [];\n    #developerDataDefinitions = {};\n    #stream = null;\n    #accumulator = new Accumulator();\n    #messages = {};\n    #fieldsWithSubFields = [];\n    #fieldsToExpand = [];\n\n    #decodeMode = DecodeMode.NORMAL;\n\n    #mesgListener = null;\n    #mesgDefinitionListener = null;\n    #fieldDescriptionListener = null;\n    #optExpandSubFields = true;\n    #optExpandComponents = true;\n    #optApplyScaleAndOffset = true;\n    #optConvertTypesToStrings = true;\n    #optConvertDateTimesToDates = true;\n    #optIncludeUnknownData = false;\n    #optMergeHeartRates = true;\n    #optDecodeMemoGlobs = false;\n\n    /**\n     * Creates a FIT File Decoder\n     * @constructor\n     * @param {Stream} stream - representing the FIT file to decode\n     */\n    constructor(stream) {\n        if (stream == null) {\n            throw Error(\"FIT Runtime Error stream parameter is null or undefined\");\n        }\n\n        this.#stream = stream;\n    }\n\n    /**\n     * Inspects the file header to determine if the input stream is a FIT file\n     * @param {Stream} stream\n     * @returns {Boolean} True if the stream is a FIT file\n     * @static\n     */\n    static isFIT(stream) {\n        try {\n            const fileHeaderSize = stream.peekByte();\n            if ([HEADER_WITH_CRC_SIZE, HEADER_WITHOUT_CRC_SIZE].includes(fileHeaderSize) != true) {\n                return false;\n            }\n\n            if (stream.length < fileHeaderSize + CRC_SIZE) {\n                return false;\n            }\n\n            const fileHeader = Decoder.#readFileHeader(stream, { resetPosition: true, });\n            if (fileHeader.dataType !== \".FIT\") {\n                return false;\n            }\n        }\n        catch (error) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Inspects the file header to determine if the input stream is a FIT file\n     * @returns {Boolean} True if the stream is a FIT file\n     */\n    isFIT() {\n        return Decoder.isFIT(this.#stream);\n    }\n\n    /**\n     * Checks that the input stream is a FIT file and verifies both the header and file CRC values\n     * @returns {Boolean} True if the stream passes the isFit() and CRC checks\n     */\n    checkIntegrity() {\n        try {\n            if (!this.isFIT()) {\n                return false;\n            }\n\n            const fileHeader = Decoder.#readFileHeader(this.#stream, { resetPosition: true, });\n\n            if (this.#stream.length < fileHeader.headerSize + fileHeader.dataSize + CRC_SIZE) {\n                return false;\n            }\n\n            const buf = new Uint8Array(this.#stream.slice(0, this.#stream.length))\n\n            if (fileHeader.headerSize === HEADER_WITH_CRC_SIZE && fileHeader.headerCRC !== 0x0000\n                && fileHeader.headerCRC != CrcCalculator.calculateCRC(buf, 0, 12)) {\n                return false;\n            }\n\n            const fileCRC = (buf[fileHeader.headerSize + fileHeader.dataSize + 1] << 8) + buf[fileHeader.headerSize + fileHeader.dataSize]\n            if (fileCRC != CrcCalculator.calculateCRC(buf, 0, fileHeader.headerSize + fileHeader.dataSize)) {\n                return false;\n            }\n        }\n        catch (error) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Message Listener Callback\n     *\n     * @callback Decoder~mesgListener\n     * @param {Number} mesgNum - Profile.MesgNum\n     * @param {Object} message - The message\n     */\n\n    /**\n     * Message Definition Listener Callback\n     *\n     * @callback Decoder~mesgDefinitionListener\n     * @param {Object} messageDefinition - The message Definition\n     */\n\n    /**\n     * Developer Field Description Listener Callback\n     *\n     * @callback Decoder~fieldDescriptionListener\n     * @param {Number} key - The key associated with this pairing of of Developer Data Id and Field Description Mesgs\n     * @param {Object} developerDataIdMesg - The Developer Data Id Mesg associated with this pairing\n     * @param {Object} fieldDescriptionMesg - The Field Description Mesg associated with this pairing\n     */\n\n    /**\n     * Read the messages from the stream.\n     * @param {Object=} [options] - Read options (optional)\n     * @param {Decoder~mesgListener} [options.mesgListener=null] - (optional, default null) mesgListener(mesgNum, message)\n     * @param {Decoder~mesgDefinitionListener} [options.mesgDefinitionListener=null] - (optional, default null) mesgDefinitionListener(mesgDefinition)\n     * @param {Decoder~fieldDescriptionListener} [options.fieldDescriptionListener=null] - (optional, default null) fieldDescriptionListener(key, developerDataIdMesg, fieldDescriptionMesg)\n     * @param {Boolean} [options.expandSubFields=true] - (optional, default true)\n     * @param {Boolean} [options.expandComponents=true] - (optional, default true)\n     * @param {Boolean} [options.applyScaleAndOffset=true] - (optional, default true)\n     * @param {Boolean} [options.convertTypesToStrings=true] - (optional, default true)\n     * @param {boolean} [options.convertDateTimesToDates=true] - (optional, default true)\n     * @param {Boolean} [options.includeUnknownData=false] - (optional, default false)\n     * @param {boolean} [options.mergeHeartRates=true] - (optional, default true)\n     * @param {boolean} [options.decodeMemoGlobs=true] - (optional, default false)\n     * @param {boolean} [options.skipHeader=false] - (optional, default false)\n     * @param {boolean} [options.dataOnly=false] - (optional, default false)\n     * @return {Object} result - {messages:Array, errors:Array}\n     */\n    read({\n        mesgListener = null,\n        mesgDefinitionListener = null,\n        fieldDescriptionListener = null,\n        expandSubFields = true,\n        expandComponents = true,\n        applyScaleAndOffset = true,\n        convertTypesToStrings = true,\n        convertDateTimesToDates = true,\n        includeUnknownData = false,\n        mergeHeartRates = true,\n        decodeMemoGlobs = false,\n        skipHeader = false,\n        dataOnly = false,} = {}) {\n\n        this.#mesgListener = mesgListener;\n        this.#mesgDefinitionListener = mesgDefinitionListener;\n        this.#fieldDescriptionListener = fieldDescriptionListener;\n        this.#optExpandSubFields = expandSubFields\n        this.#optExpandComponents = expandComponents;\n        this.#optApplyScaleAndOffset = applyScaleAndOffset;\n        this.#optConvertTypesToStrings = convertTypesToStrings;\n        this.#optConvertDateTimesToDates = convertDateTimesToDates;\n        this.#optIncludeUnknownData = includeUnknownData;\n        this.#optMergeHeartRates = mergeHeartRates;\n        this.#optDecodeMemoGlobs = decodeMemoGlobs;\n\n        this.#localMessageDefinitions = [];\n        this.#developerDataDefinitions = {};\n        this.#messages = {};\n\n        const errors = [];\n\n        try {\n            if (this.#optMergeHeartRates && (!this.#optApplyScaleAndOffset || !this.#optExpandComponents)) {\n                this.#throwError(\"mergeHeartRates requires applyScaleAndOffset and expandComponents to be enabled\");\n            }\n\n            if (dataOnly && skipHeader) {\n                this.#throwError(\"dataOnly and skipHeader cannot both be enabled\")\n            }\n\n            this.#decodeMode = skipHeader ? DecodeMode.SKIP_HEADER : dataOnly ? DecodeMode.DATA_ONLY : DecodeMode.NORMAL;\n\n            while (this.#stream.position < this.#stream.length) {\n                this.#decodeNextFile();\n            }\n\n            if (this.#optMergeHeartRates) {\n                HrMesgUtils.mergeHeartRates(this.#messages.hrMesgs, this.#messages.recordMesgs);\n            }\n\n            if (this.#optDecodeMemoGlobs) {\n                MemoGlobUtils.decodeMemoGlobs(this.#messages);\n            }\n        }\n        catch (error) {\n            errors.push(error);\n        }\n        finally {\n            return { messages: this.#messages, errors: errors };\n        }\n    }\n\n    #decodeNextFile() {\n        const position = this.#stream.position;\n\n        if (this.#decodeMode === DecodeMode.NORMAL && !this.isFIT()) {\n            this.#throwError(\"input is not a FIT file\");\n        }\n\n        this.#stream.crcCalculator = new CrcCalculator();\n\n        const { headerSize, dataSize } = Decoder.#readFileHeader(this.#stream, { decodeMode: this.#decodeMode });\n\n        // Read data messages and definitions\n        while (this.#stream.position < (position + headerSize + dataSize)) {\n            this.#decodeNextRecord();\n        }\n\n        // Check the CRC\n        const calculatedCrc = this.#stream.crcCalculator.crc;\n        const crc = this.#stream.readUInt16();\n        if (this.#decodeMode === DecodeMode.NORMAL && crc !== calculatedCrc) {\n            this.#throwError(\"CRC error\");\n        }\n    }\n\n    #decodeNextRecord() {\n        const recordHeader = this.#stream.peekByte();\n\n        if ((recordHeader & COMPRESSED_HEADER_MASK) === COMPRESSED_HEADER_MASK) {\n            return this.#decodeCompressedTimestampDataMessage();\n        }\n\n        if ((recordHeader & MESG_DEFINITION_MASK) === MESG_HEADER_MASK) {\n            return this.#decodeMessage();\n        }\n\n        if ((recordHeader & MESG_DEFINITION_MASK) === MESG_DEFINITION_MASK) {\n            return this.#decodeMessageDefinition();\n        }\n    }\n\n    #decodeMessageDefinition() {\n        const recordHeader = this.#stream.readByte();\n\n        const messageDefinition = {};\n        messageDefinition[\"recordHeader\"] = recordHeader;\n        messageDefinition[\"localMesgNum\"] = recordHeader & LOCAL_MESG_NUM_MASK;\n        messageDefinition[\"reserved\"] = this.#stream.readByte();\n\n        messageDefinition[\"architecture\"] = this.#stream.readByte();\n        messageDefinition[\"endianness\"] = messageDefinition.architecture === 0 ? Stream.LITTLE_ENDIAN : Stream.BIG_ENDIAN;\n\n        messageDefinition[\"globalMessageNumber\"] = this.#stream.readUInt16({ endianness: messageDefinition[\"endianness\"] });\n        messageDefinition[\"numFields\"] = this.#stream.readByte();\n        messageDefinition[\"fieldDefinitions\"] = [];\n        messageDefinition[\"developerFieldDefinitions\"] = [];\n        messageDefinition[\"messageSize\"] = 0;\n        messageDefinition[\"developerDataSize\"] = 0;\n\n        for (let i = 0; i < messageDefinition.numFields; i++) {\n            const fieldDefinition = {\n                fieldDefinitionNumber: this.#stream.readByte(),\n                size: this.#stream.readByte(),\n                baseType: this.#stream.readByte()\n            };\n\n            if (!(fieldDefinition.baseType in FIT.BaseTypeDefinitions)) {\n                this.#throwError();\n            }\n\n            fieldDefinition[\"invalidValue\"] = FIT.BaseTypeDefinitions[fieldDefinition.baseType].invalid;\n            fieldDefinition[\"baseTypeSize\"] = FIT.BaseTypeDefinitions[fieldDefinition.baseType].size;\n\n            messageDefinition.fieldDefinitions.push(fieldDefinition);\n            messageDefinition.messageSize += fieldDefinition.size;\n        }\n\n        if ((recordHeader & DEV_DATA_MASK) === DEV_DATA_MASK) {\n            const numDevFields = this.#stream.readByte();\n\n            for (let i = 0; i < numDevFields; i++) {\n                const developerFieldDefinition = {\n                    fieldDefinitionNumber: this.#stream.readByte(),\n                    size: this.#stream.readByte(),\n                    developerDataIndex: this.#stream.readByte()\n                };\n\n                messageDefinition.developerFieldDefinitions.push(developerFieldDefinition);\n                messageDefinition.developerDataSize += developerFieldDefinition.size;\n            }\n        }\n\n        this.#mesgDefinitionListener?.({...messageDefinition});\n\n        let messageProfile = Profile.messages[messageDefinition.globalMessageNumber];\n\n        if (messageProfile == null && this.#optIncludeUnknownData) {\n            messageProfile = {\n                name: messageDefinition[\"globalMessageNumber\"].toString(),\n                messagesKey: messageDefinition[\"globalMessageNumber\"].toString(),\n                num: messageDefinition[\"globalMessageNumber\"],\n                fields: {}\n            };\n        }\n\n        this.#localMessageDefinitions[messageDefinition.localMesgNum] = { ...messageDefinition, ...messageProfile };\n\n        if (messageProfile && !this.#messages.hasOwnProperty(messageProfile.messagesKey)) {\n            this.#messages[messageProfile.messagesKey] = [];\n        }\n    }\n\n    #decodeMessage() {\n        const recordHeader = this.#stream.readByte();\n\n        const localMesgNum = recordHeader & LOCAL_MESG_NUM_MASK;\n        const messageDefinition = this.#localMessageDefinitions[localMesgNum];\n\n        if (messageDefinition == null) {\n            this.#throwError();\n        }\n\n        const fields = messageDefinition.fields ?? {};\n        const mesgNum = messageDefinition.num;\n        const message = {};\n        this.#fieldsWithSubFields = [];\n        this.#fieldsToExpand = [];\n\n        messageDefinition.fieldDefinitions.forEach(fieldDefinition => {\n            const field = fields[fieldDefinition.fieldDefinitionNumber];\n            const { fieldName, rawFieldValue } = this.#readFieldValue(messageDefinition, fieldDefinition, field);\n\n            if (fieldName != null && (field != null || this.#optIncludeUnknownData)) {\n                message[fieldName] = { rawFieldValue, fieldDefinitionNumber: fieldDefinition.fieldDefinitionNumber };\n\n                if (field?.subFields?.length > 0) {\n                    this.#fieldsWithSubFields.push(fieldName);\n                }\n\n                if (field?.hasComponents) {\n                    this.#fieldsToExpand.push(fieldName);\n                }\n\n                if (field?.isAccumulated) {\n                    this.#setAccumulatedField(messageDefinition, message, field, rawFieldValue);\n                }\n            }\n        });\n\n        const developerFields = {};\n\n        messageDefinition.developerFieldDefinitions.forEach(developerFieldDefinition => {\n            const field = this.#lookupDeveloperDataField(developerFieldDefinition)\n            if (field == null) {\n                // If there is not a field definition, then read past the field data.\n                this.#stream.readBytes(developerFieldDefinition.size);\n                return;\n            }\n\n            developerFieldDefinition[\"baseType\"] = field.fitBaseTypeId;\n            developerFieldDefinition[\"invalidValue\"] = FIT.BaseTypeDefinitions[developerFieldDefinition.baseType].invalid;\n            developerFieldDefinition[\"baseTypeSize\"] = FIT.BaseTypeDefinitions[developerFieldDefinition.baseType].size;\n\n            const { rawFieldValue: fieldValue } = this.#readFieldValue(messageDefinition, developerFieldDefinition, field);\n\n            if (fieldValue != null) {\n                developerFields[field.key] = fieldValue;\n            }\n        });\n\n        if (mesgNum === Profile.MesgNum.DEVELOPER_DATA_ID) {\n            this.#addDeveloperDataIdToProfile(message);\n        }\n        else if (mesgNum === Profile.MesgNum.FIELD_DESCRIPTION) {\n            const key = Object.keys(this.#developerDataDefinitions)\n                .reduce((count, key) => count + this.#developerDataDefinitions[key].fields.length, 0);\n            message[\"key\"] = { fieldValue: key, rawFieldValue: key };\n\n            this.#addFieldDescriptionToProfile(message);\n        }\n        else {\n            this.#expandSubFields(mesgNum, message);\n            this.#expandComponents(mesgNum, message, fields);\n        }\n\n        this.#transformValues(message, messageDefinition);\n\n        if (messageDefinition.name != null) {\n            Object.keys(message).forEach((key) => {\n                message[key] = message[key].fieldValue;\n            });\n\n            if (Object.keys(developerFields).length > 0) {\n                message.developerFields = developerFields;\n            }\n\n            this.#messages[messageDefinition.messagesKey].push(message);\n            this.#mesgListener?.(messageDefinition.globalMessageNumber, message);\n\n            if (mesgNum === Profile.MesgNum.FIELD_DESCRIPTION && this.#fieldDescriptionListener != null) {\n                const developerDataIdMesg = this.#messages.developerDataIdMesgs?.find((developerDataIdMesg) => {\n                    return developerDataIdMesg.developerDataIndex === message.developerDataIndex;\n                }) ?? {};\n\n                this.#fieldDescriptionListener(message.key, {...developerDataIdMesg}, {...message});\n            }\n        }\n    }\n\n    #decodeCompressedTimestampDataMessage() {\n        this.#throwError(\"compressed timestamp messages are not currently supported\");\n    }\n\n    #readFieldValue(messageDefinition, fieldDefinition, field) {\n        const rawFieldValue = this.#readRawFieldValue(messageDefinition, fieldDefinition, field);\n\n        if (rawFieldValue == null) {\n            return {};\n        }\n\n        return {\n            fieldName: (field?.name ?? ~~fieldDefinition.fieldDefinitionNumber),\n            rawFieldValue\n        };\n    }\n\n    #readRawFieldValue(messageDefinition, fieldDefinition, field) {\n        const rawFieldValue = this.#stream.readValue(\n            fieldDefinition.baseType,\n            fieldDefinition.size,\n            {\n                endianness: messageDefinition[\"endianness\"],\n                convertInvalidToNull: !field?.hasComponents ?? false\n            }\n        );\n        return rawFieldValue;\n    }\n\n    #addDeveloperDataIdToProfile(message) {\n        if (message == null || message.developerDataIndex.rawFieldValue == null || message.developerDataIndex.rawFieldValue === 0xFF) {\n            return;\n        }\n\n        this.#developerDataDefinitions[message.developerDataIndex.rawFieldValue] = {\n            developerDataIndex: message.developerDataIndex?.rawFieldValue,\n            developerId: message.developerId?.rawFieldValue ?? null,\n            applicationId: message.applicationId?.rawFieldValue ?? null,\n            manufacturerId: message.manufacturerId?.rawFieldValue ?? null,\n            applicationVersion: message.applicationVersion?.rawFieldValue ?? null,\n            fields: []\n        };\n    }\n\n    #addFieldDescriptionToProfile(message) {\n        if (message == null || message.developerDataIndex.rawFieldValue == null || message.developerDataIndex.rawFieldValue === 0xFF) {\n            return;\n        }\n\n        if (this.#developerDataDefinitions[message.developerDataIndex.rawFieldValue] == null) {\n            return;\n        }\n\n        this.#developerDataDefinitions[message.developerDataIndex.rawFieldValue].fields.push({\n            developerDataIndex: message.developerDataIndex?.rawFieldValue,\n            fieldDefinitionNumber: message.fieldDefinitionNumber?.rawFieldValue,\n            fitBaseTypeId: message.fitBaseTypeId?.rawFieldValue ?? null,\n            fieldName: message.fieldName?.rawFieldValue ?? null,\n            array: message.array?.rawFieldValue ?? null,\n            components: message.components?.rawFieldValue ?? null,\n            scale: message.scale?.rawFieldValue ?? null,\n            offset: message.offset?.rawFieldValue ?? null,\n            units: message.units?.rawFieldValue ?? null,\n            bits: message.bits?.rawFieldValue ?? null,\n            accumulate: message.accumulate?.rawFieldValue ?? null,\n            refFieldName: message.refFieldName?.rawFieldValue ?? null,\n            refFieldValue: message.refFieldValue?.rawFieldValue ?? null,\n            fitBaseUnitId: message.fitBaseUnitId?.rawFieldValue ?? null,\n            nativeMesgNum: message.nativeMesgNum?.rawFieldValue ?? null,\n            nativeFieldNum: message.nativeFieldNum?.rawFieldValue ?? null,\n            key: message.key.rawFieldValue\n        });\n    }\n\n    #lookupDeveloperDataField(developerFieldDefinition) {\n        try {\n            return this.#developerDataDefinitions[developerFieldDefinition.developerDataIndex]\n                ?.fields\n                ?.find(def => def.fieldDefinitionNumber == developerFieldDefinition.fieldDefinitionNumber)\n                ?? null;\n        }\n        catch {\n            return null;\n        }\n    }\n\n    #expandSubFields(mesgNum, message) {\n        if (!this.#optExpandSubFields || this.#fieldsWithSubFields.length == 0) {\n            return;\n        }\n\n        this.#fieldsWithSubFields.forEach((name) => {\n            const field = Profile.messages[mesgNum].fields[message[name].fieldDefinitionNumber];\n            this.#expandSubField(message, field);\n        });\n    }\n\n    #expandSubField(message, field) {\n        for (let i = 0; i < field.subFields.length; i++) {\n            const subField = field.subFields[i];\n            for (let j = 0; j < subField.map.length; j++) {\n                const map = subField.map[j];\n                const referenceField = message[map.name];\n                if (referenceField == null) {\n                    continue;\n                }\n                if (referenceField.rawFieldValue === map.value) {\n                    message[subField.name] = JSON.parse(JSON.stringify(message[field.name]));\n                    message[subField.name].isSubField = true;\n\n                    if (subField.hasComponents) {\n                        this.#fieldsToExpand.push(subField.name);\n                    }\n                    break;\n                }\n            }\n        }\n    }\n\n    #expandComponents(mesgNum, message, fields) {\n        // TODO - What do do when the target field is not in the Profile?\n        // TODO - This can happen in theory, but can it happen in practice?\n\n        if (!this.#optExpandComponents || this.#fieldsToExpand.length == 0) {\n            return;\n        }\n\n        const mesg = {};\n\n        while (this.#fieldsToExpand.length > 0) {\n            const name = this.#fieldsToExpand.shift();\n\n            const { rawFieldValue, fieldDefinitionNumber, isSubField } = message[name] ?? mesg[name];\n            let field = Profile.messages[mesgNum].fields[fieldDefinitionNumber];\n            field = isSubField ? this.#lookupSubfield(field, name) : field;\n            const baseType = FIT.FieldTypeToBaseType[field.type];\n\n            if (field.hasComponents === false || baseType == null) {\n                continue;\n            }\n\n            if (UtilsInternal.onlyInvalidValues(rawFieldValue, FIT.BaseTypeDefinitions[baseType].invalid)) {\n                continue;\n            }\n\n            const bitStream = new BitStream(rawFieldValue, baseType);\n\n            for (let j = 0; j < field.components.length; j++) {\n                if (bitStream.bitsAvailable < field.bits[j]) {\n                    break;\n                }\n\n                const targetField = fields[field.components[j]];\n                if (mesg[targetField.name] == null) {\n                    const baseType = FIT.FieldTypeToBaseType[targetField.type];\n                    const invalidValue = baseType != null ? FIT.BaseTypeDefinitions[baseType].invalid : 0xFF;\n\n                    mesg[targetField.name] = {\n                        fieldValue: [],\n                        rawFieldValue: [],\n                        fieldDefinitionNumber: targetField.num,\n                        isExpandedField: true,\n                        invalidValue,\n                    };\n                }\n\n                let value = bitStream.readBits(field.bits[j]);\n\n                if (targetField.isAccumulated) {\n                    value = this.#accumulator.accumulate(mesgNum, targetField.num, value, field.bits[j]);\n                }\n\n                // Undo component scale and offset before applying the destination field's scale and offset\n                value = (value / field.scale[j] - field.offset[j]);\n\n                const rawValue = (value + targetField.offset) * targetField.scale;\n                mesg[targetField.name].rawFieldValue.push(rawValue);\n\n                if (rawValue === mesg[targetField.name].invalidValue) {\n                    mesg[targetField.name].fieldValue.push(null);\n                }\n                else {\n                    if (this.#optConvertTypesToStrings) {\n                        value = this.#convertTypeToString(mesg, targetField, value);\n                    }\n\n                    mesg[targetField.name].fieldValue.push(value);\n                }\n\n                if (targetField.hasComponents) {\n                    this.#fieldsToExpand.push(targetField.name);\n                }\n\n                if (!bitStream.hasBitsAvailable) {\n                    break;\n                }\n            }\n        }\n\n        Object.keys(mesg).forEach((key) => {\n            mesg[key].fieldValue = UtilsInternal.sanitizeValues(mesg[key].fieldValue);\n            mesg[key].rawFieldValue = UtilsInternal.sanitizeValues(mesg[key].rawFieldValue);\n\n            message[key] = mesg[key];\n        });\n    }\n\n    #transformValues(message, messageDefinition) {\n        const fields = messageDefinition?.fields ?? {};\n\n        for (const name in message) {\n\n            const { rawFieldValue, fieldDefinitionNumber, isExpandedField, isSubField } = message[name];\n\n            let field = fields[fieldDefinitionNumber];\n            field = isSubField ? this.#lookupSubfield(field, name) : field;\n\n            if (!isExpandedField) {\n                const fieldValue = this.#transformValue(messageDefinition, field, rawFieldValue);\n                message[name].fieldValue = fieldValue;\n            }\n        }\n    }\n\n    #transformValue(messageDefinition, field, rawFieldValue) {\n        let fieldValue = rawFieldValue;\n\n        if (field == null) {\n            fieldValue = rawFieldValue;\n        }\n        else if (FIT.NumericFieldTypes.includes(field?.type ?? -1)) {\n            fieldValue = this.#applyScaleAndOffset(messageDefinition, field, rawFieldValue);\n        }\n        else if (field.type === \"string\") {\n            fieldValue = rawFieldValue;\n        }\n        else if (field.type === \"dateTime\" && this.#optConvertDateTimesToDates) {\n            fieldValue = Utils.convertDateTimeToDate(rawFieldValue);\n        }\n        else if (this.#optConvertTypesToStrings) {\n            fieldValue = this.#convertTypeToString(messageDefinition, field, rawFieldValue);\n        }\n        else {\n            fieldValue = rawFieldValue;\n        }\n\n        return fieldValue;\n    }\n\n    #applyScaleAndOffset(messageDefinition, field, rawFieldValue) {\n        if (!this.#optApplyScaleAndOffset) {\n            return rawFieldValue;\n        }\n\n        if (FIT.NumericFieldTypes.includes(field?.type ?? -1) === false) {\n            return rawFieldValue;\n        }\n\n        if ([Profile.MesgNum.DEVELOPER_DATA_ID, Profile.MesgNum.FIELD_DESCRIPTION].includes(messageDefinition.globalMessageNumber)) {\n            return rawFieldValue;\n        }\n\n        if (rawFieldValue == null) {\n            return rawFieldValue;\n        }\n\n        if (Array.isArray(field?.scale ?? 1) && field.scale.length > 1) {\n            return rawFieldValue;\n        }\n\n        const scale = Array.isArray(field?.scale ?? FIT.FIELD_DEFAULT_SCALE) ? field?.scale[0] : field?.scale ?? FIT.FIELD_DEFAULT_SCALE;\n        const offset = Array.isArray(field?.offset ?? FIT.FIELD_DEFAULT_OFFSET) ? field?.offset[0] : field?.offset ?? FIT.FIELD_DEFAULT_OFFSET;\n\n        try {\n            if (Array.isArray(rawFieldValue)) {\n                return rawFieldValue.map((value) => {\n                    return value == null ? value : (value / scale) - offset;\n                });\n            }\n\n            return (rawFieldValue / scale) - offset;\n        }\n        catch {\n            return rawFieldValue;\n        }\n    }\n\n    #setAccumulatedField(messageDefinition, message, field, rawFieldValue) {\n        const rawFieldValues = Array.isArray(rawFieldValue) ? rawFieldValue : [rawFieldValue];\n\n        rawFieldValues.forEach((value) => {\n            Object.values(message).forEach((containingField) => {\n                let components = messageDefinition.fields[containingField.fieldDefinitionNumber].components ?? []\n\n                components.forEach((componentFieldNum, i) => {\n                    const targetField = messageDefinition.fields[componentFieldNum];\n\n                    if(targetField?.num == field.num && targetField?.isAccumulated) {\n                        value = (((value / field.scale) - field.offset) + containingField.offset[i]) * containingField.scale[i];\n                    }\n                });\n            });\n\n            this.#accumulator.createAccumulatedField(messageDefinition.num, field.num, value);\n        });\n    }\n\n    #convertTypeToString(messageDefinition, field, rawFieldValue) {\n        if ([Profile.MesgNum.DEVELOPER_DATA_ID, Profile.MesgNum.FIELD_DESCRIPTION].includes(messageDefinition.globalMessageNumber)) {\n            return rawFieldValue;\n        }\n\n        if (FIT.NumericFieldTypes.includes(field?.type ?? -1)) {\n            return rawFieldValue;\n        }\n\n        try {\n            const type = Profile.types[field?.type ?? -1];\n\n            if (Array.isArray(rawFieldValue)) {\n                return rawFieldValue.map(value => {\n                    return value == null ? value : type?.[value] ?? value\n                });\n            }\n\n            return type?.[rawFieldValue] ?? rawFieldValue;\n        }\n        catch {\n            return rawFieldValue;\n        }\n    }\n\n    #lookupSubfield(field, name) {\n        const subField = field.subFields.find(subField => subField.name === name);\n        return subField != null ? subField : {};\n    }\n\n    static #readFileHeader(stream, { resetPosition = false, decodeMode = DecodeMode.NORMAL }) {\n        const position = stream.position;\n\n        if(decodeMode !== DecodeMode.NORMAL) {\n            if(decodeMode === DecodeMode.SKIP_HEADER) {\n                stream.seek(HEADER_WITH_CRC_SIZE);\n            }\n\n            const headerSize = decodeMode === DecodeMode.SKIP_HEADER ? HEADER_WITH_CRC_SIZE : 0;\n\n            return {\n                headerSize,\n                dataSize:  stream.length - headerSize - CRC_SIZE,\n            };\n        }\n\n        const fileHeader = {\n            headerSize: stream.readByte(),\n            protocolVersion: stream.readByte(),\n            profileVersion: stream.readUInt16(),\n            dataSize: stream.readUInt32(),\n            dataType: stream.readString(4),\n            headerCRC: 0\n        };\n\n        if (fileHeader.headerSize === 14) {\n            fileHeader.headerCRC = stream.readUInt16()\n        }\n\n        if (resetPosition) {\n            stream.seek(position);\n        }\n\n        return fileHeader;\n    }\n\n    #throwError(error = \"\") {\n        throw Error(`FIT Runtime Error at byte ${this.#stream.position} ${error}`.trimEnd());\n    }\n}\n\nexport default Decoder;", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nimport FIT from \"./fit.js\";\nimport Profile from \"./profile.js\";\n\nconst textEncoder = new TextEncoder();\n\nclass MesgDefinition {\n    globalMessageNumber;\n    localMesgNum;\n    fieldDefinitions = [];\n    developerFieldDefinitions = [];\n\n    constructor(mesgNum, mesg, { fieldDescriptions = null, } = {}) {\n        try {\n            if (mesg == null) {\n                throw new Error(\"mesg is missing or null\");\n            }\n\n            if (mesgNum == null) {\n                throw new Error(\"mesgNum is missing or null\");\n            }\n\n            const mesgProfile = Profile.messages[mesgNum];\n\n            if (mesgProfile == null) {\n                throw new Error(`mesgNum: ${mesgNum} could not be found in the Profile`);\n            }\n\n            this.globalMessageNumber = mesgNum;\n            this.localMesgNum = 0;\n\n            Object.keys(mesg).forEach((fieldName) => {\n                if (mesg[fieldName] == null) {\n                    return;\n                }\n\n                const fieldProfile = Object.entries(mesgProfile.fields).find(([, fieldProfile,]) => {\n                    return fieldProfile.name === fieldName;\n                });\n\n                if (fieldProfile == null) {\n                    return;\n                }\n\n                const baseType = FIT.FieldTypeToBaseType[fieldProfile[1].baseType];\n                const baseTypeDef = FIT.BaseTypeDefinitions[baseType];\n\n                let scale = fieldProfile[1].components.length > 1 ? FIT.FIELD_DEFAULT_SCALE : fieldProfile[1].scale;\n                let offset = fieldProfile[1].components.length > 1 ? FIT.FIELD_DEFAULT_OFFSET : fieldProfile[1].offset;\n\n                scale = Array.isArray(scale) ? scale[0] : scale ?? FIT.FIELD_DEFAULT_SCALE;\n                offset = Array.isArray(offset) ? offset[0] : offset ?? FIT.FIELD_DEFAULT_OFFSET;\n\n                this.fieldDefinitions.push({\n                    name: fieldName,\n                    num: fieldProfile[1].num,\n                    size: this.#fieldSize(mesg[fieldName], baseTypeDef),\n                    baseType: baseType,\n                    type: fieldProfile[1].type,\n                    scale,\n                    offset,\n                    components: fieldProfile[1].components,\n                });\n            });\n\n            Object.keys(mesg.developerFields ?? {})?.sort()?.forEach((key) => {\n                const { developerDataIdMesg, fieldDescriptionMesg, } = this.#fieldDescriptionForKey(fieldDescriptions, key);\n\n                const baseTypeDef = FIT.BaseTypeDefinitions[fieldDescriptionMesg.fitBaseTypeId];\n\n                this.developerFieldDefinitions.push({\n                    key,\n                    baseType: fieldDescriptionMesg.fitBaseTypeId,\n                    fieldDefinitionNumber: fieldDescriptionMesg.fieldDefinitionNumber,\n                    size: this.#fieldSize(mesg.developerFields[key], baseTypeDef),\n                    developerDataIndex: developerDataIdMesg.developerDataIndex,\n                });\n            });\n\n            if (this.fieldDefinitions.length === 0) {\n                throw new Error(\"No valid fields were found in the message\");\n            }\n\n            if (this.fieldDefinitions.some((fieldDefinition) => {\n                return fieldDefinition.size > FIT.MAX_FIELD_SIZE;\n            })) {\n                throw new Error(`Some field sizes are greater than ${FIT.MAX_FIELD_SIZE}`, { cause: this.fieldDefinitions, });\n            }\n        }\n        catch (error) {\n            throw new Error(\n                \"Could not construct MesgDefinition from Message\", {\n                cause: {\n                    cause: {\n                        message: error.message,\n                        cause: error.cause,\n                    },\n                },\n            }\n            );\n        }\n    }\n\n    write(outputStream) {\n        // Header\n        let headerByte = FIT.MESG_DEFINITION_MASK | (this.localMesgNum & FIT.LOCAL_MESG_NUM_MASK);\n        if (this.developerFieldDefinitions.length > 0) {\n            headerByte |= FIT.DEV_DATA_MASK;\n        }\n\n        outputStream.writeUInt8(headerByte);\n\n        // Reserved Byte\n        outputStream.writeUInt8(0x00);\n\n        // Architecture\n        outputStream.writeUInt8(FIT.ARCH_LITTLE_ENDIAN);\n\n        // Global Message Number\n        outputStream.writeUInt16(this.globalMessageNumber);\n\n        // Field Count\n        outputStream.writeUInt8(this.fieldDefinitions.length);\n\n        // Field Definitions\n        this.fieldDefinitions.forEach((fieldDefinition) => {\n            outputStream.writeUInt8(fieldDefinition.num);\n            outputStream.writeUInt8(fieldDefinition.size);\n            outputStream.writeUInt8(fieldDefinition.baseType);\n        });\n\n        // Developer Field Definitions\n        if (this.developerFieldDefinitions.length > 0) {\n            outputStream.writeUInt8(this.developerFieldDefinitions.length);\n\n            this.developerFieldDefinitions.forEach((developerFieldDefinition) => {\n                outputStream.writeUInt8(developerFieldDefinition.fieldDefinitionNumber);\n                outputStream.writeUInt8(developerFieldDefinition.size);\n                outputStream.writeUInt8(developerFieldDefinition.developerDataIndex);\n            });\n        }\n    }\n\n    equals(other) {\n        if (this.globalMessageNumber !== other.globalMessageNumber\n            || this.fieldDefinitions.length !== other.fieldDefinitions.length\n            || this.developerFieldDefinitions.length !== other.developerFieldDefinitions.length) {\n            return false;\n        }\n\n        // Field Definitions\n        for (let i = 0; i < this.fieldDefinitions.length; i++) {\n            const lhs = this.fieldDefinitions[i];\n\n            if (null == other.fieldDefinitions.find((rhs) => {\n                return lhs.num === rhs.num\n                    && lhs.size === rhs.size\n                    && lhs.baseType === rhs.baseType;\n            })) {\n                return false;\n            }\n        }\n\n        // Developer Field Definitions\n        for (let i = 0; i < this.developerFieldDefinitions.length; i++) {\n            const lhs = this.developerFieldDefinitions[i];\n\n            if (null == other.developerFieldDefinitions.find((rhs) => {\n                return lhs.fieldDefinitionNumber === rhs.fieldDefinitionNumber\n                    && lhs.size === rhs.size\n                    && lhs.developerDataIndex === rhs.developerDataIndex;\n            })) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    #fieldSize(value, baseTypeDef) {\n        const values = Array.isArray(value) ? value : [value,];\n\n        if (baseTypeDef.type === FIT.BaseType.STRING) {\n            const size = values.reduce(\n                (accumulator, currentValue) => {\n                    return accumulator + textEncoder.encode(currentValue).length + 1;\n                },\n                0\n            );\n\n            return size;\n        }\n\n        return baseTypeDef.size * values.length;\n    };\n\n    /**\n     * Look up the field description for the key, and validate the required fields.\n     */\n    #fieldDescriptionForKey(fieldDescriptions, key) {\n        try {\n            if (fieldDescriptions == null) {\n                throw new Error(\"no developer data field descriptions provided\", {\n                    cause: {\n                        fieldDescriptions,\n                    },\n                });\n            }\n\n            const { developerDataIdMesg, fieldDescriptionMesg, } = fieldDescriptions?.[key] ?? {};\n\n            if (developerDataIdMesg == null || fieldDescriptionMesg == null) {\n                throw new Error(`could not find a developer field description for key ${key}`);\n            }\n\n            const errors = [];\n\n            if (fieldDescriptionMesg.fitBaseTypeId == null) {\n                errors.push(`fieldDescriptionMesg fitBaseTypeId is ${fieldDescriptionMesg.fitBaseTypeId}`);\n            }\n            if (fieldDescriptionMesg.fieldDefinitionNumber == null) {\n                errors.push(`fieldDescriptionMesg fieldDefinitionNumber is ${fieldDescriptionMesg.fieldDefinitionNumber}`);\n            }\n            if (fieldDescriptionMesg.developerDataIndex == null) {\n                errors.push(`fieldDescriptionMesg developerDataIndex is ${fieldDescriptionMesg.developerDataIndex}`);\n            }\n            if (developerDataIdMesg.developerDataIndex == null) {\n                errors.push(`developerDataIdMesg developerDataIndex is ${developerDataIdMesg.developerDataIndex}`);\n            }\n\n            if (developerDataIdMesg.developerDataIndex !== fieldDescriptionMesg.developerDataIndex) {\n                errors.push(\"developerDataIndex values do not match in fieldDescription\"\n                    + ` ${developerDataIdMesg.developerDataIndex} != ${fieldDescriptionMesg.developerDataIndex}`\n                );\n            }\n\n            if (errors.length > 0) {\n                throw new Error(\"missing or invalid values in the fieldDescription,\", {\n                    cause: {\n                        developerDataIdMesg,\n                        fieldDescriptionMesg,\n                        cause: errors,\n                    },\n                });\n            }\n\n            return { key, developerDataIdMesg, fieldDescriptionMesg, };\n        }\n        catch (error) {\n            throw new Error(\n                `invalid field description for key ${key}`, {\n                cause: {\n                    key,\n                    cause: {\n                        message: error.message,\n                        cause: error.cause,\n                    },\n                },\n            }\n            );\n        }\n    }\n}\n\nexport default MesgDefinition;\n", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nimport FIT from \"./fit.js\";\n\nconst ONE_MEGABYTE = 1048576;\nconst TEN_MEGABYTES = ONE_MEGABYTE * 10;\nconst HALF_MEGABYTE = ONE_MEGABYTE / 2;\n\nclass OutputStream {\n    #arrayBuffer = null;\n    #dataView = null;\n    #byteOffset = 0;\n    #resizeByBytes = 0;\n    #baseTypeDefinitions = null;\n    #textEncoder = new TextEncoder();\n\n    /**\n     * Creates an OutputStream\n     * @constructor\n     * @param {Object=} [options] - Read options (optional)\n     * @param {Number} [options.initialByteLength=0.5MB] - (optional, default 0.5 MB)\n     * @param {Number} [options.maxByteLength=2MB] - (optional, default 2 MB)\n     * @param {Number} [options.resizeByBytes=0.5MB] - (optional, default 0.5 MB)\n     */\n    constructor({\n        initialByteLength = HALF_MEGABYTE,\n        maxByteLength = TEN_MEGABYTES,\n        resizeByBytes = HALF_MEGABYTE,\n    } = {}) {\n        this.#arrayBuffer = new ArrayBuffer(initialByteLength, { maxByteLength, });\n        this.#dataView = new DataView(this.#arrayBuffer);\n\n        this.#resizeByBytes = resizeByBytes;\n\n        this.#baseTypeDefinitions = {\n            [FIT.BaseType.ENUM]: { setValue: this.#dataView.setUint8.bind(this.#dataView), size: 1, mask: 0xFF, },\n            [FIT.BaseType.UINT8]: { setValue: this.#dataView.setUint8.bind(this.#dataView), size: 1, mask: 0xFF, },\n            [FIT.BaseType.UINT16]: { setValue: this.#dataView.setUint16.bind(this.#dataView), size: 2, mask: 0xFFFF, },\n            [FIT.BaseType.UINT32]: { setValue: this.#dataView.setUint32.bind(this.#dataView), size: 4, mask: 0xFFFFFFFF, },\n            [FIT.BaseType.UINT64]: { setValue: this.#dataView.setBigUint64.bind(this.#dataView), size: 8, mask: 0xFFFFFFFFFFFFFFFFn, },\n            [FIT.BaseType.SINT8]: { setValue: this.#dataView.setInt8.bind(this.#dataView), size: 1, mask: 0xFF, },\n            [FIT.BaseType.SINT16]: { setValue: this.#dataView.setInt16.bind(this.#dataView), size: 2, mask: 0xFFFF, },\n            [FIT.BaseType.SINT32]: { setValue: this.#dataView.setInt32.bind(this.#dataView), size: 4, mask: 0xFFFFFFFF, },\n            [FIT.BaseType.SINT64]: { setValue: this.#dataView.setBigInt64.bind(this.#dataView), size: 8, mask: 0xFFFFFFFFFFFFFFFFn, },\n            [FIT.BaseType.FLOAT32]: { setValue: this.#dataView.setFloat32.bind(this.#dataView), size: 4, },\n            [FIT.BaseType.FLOAT64]: { setValue: this.#dataView.setFloat64.bind(this.#dataView), size: 8, },\n            [FIT.BaseType.UINT8Z]: { setValue: this.#dataView.setUint8.bind(this.#dataView), size: 1, mask: 0xFF, },\n            [FIT.BaseType.UINT16Z]: { setValue: this.#dataView.setUint16.bind(this.#dataView), size: 2, mask: 0xFFFF, },\n            [FIT.BaseType.UINT32Z]: { setValue: this.#dataView.setUint32.bind(this.#dataView), size: 4, mask: 0xFFFFFFFF, },\n            [FIT.BaseType.UINT64Z]: { setValue: this.#dataView.setBigUint64.bind(this.#dataView), size: 8, mask: 0xFFFFFFFFFFFFFFFFn, },\n            [FIT.BaseType.BYTE]: { setValue: this.#dataView.setUint8.bind(this.#dataView), size: 1, mask: 0xFF, },\n        };\n    }\n\n    get length() {\n        return this.#byteOffset;\n    }\n    get uint8Array() {\n        return new Uint8Array(this.#arrayBuffer.slice(0, this.#byteOffset));\n    }\n\n    writeUInt8(value) {\n        return this.write(value, FIT.BaseType.UINT8);\n    }\n\n    writeUInt16(value) {\n        return this.write(value, FIT.BaseType.UINT16);\n    }\n\n    writeUInt32(value) {\n        return this.write(value, FIT.BaseType.UINT32);\n    }\n\n    writeUInt64(value) {\n        return this.write(value, FIT.BaseType.UINT64);\n    }\n\n    writeSInt8(value) {\n        return this.write(value, FIT.BaseType.SINT8);\n    }\n\n    writeSInt16(value) {\n        return this.write(value, FIT.BaseType.SINT16);\n    }\n\n    writeSInt32(value) {\n        return this.write(value, FIT.BaseType.SINT32);\n    }\n\n    writeSInt64(value) {\n        return this.write(value, FIT.BaseType.SINT64);\n    }\n\n    writeFloat32(value) {\n        return this.write(value, FIT.BaseType.FLOAT32);\n    }\n\n    writeFloat64(value) {\n        return this.write(value, FIT.BaseType.FLOAT64);\n    }\n\n    writeUInt8z(value) {\n        return this.write(value, FIT.BaseType.UINT8Z);\n    }\n\n    writeUInt16z(value) {\n        return this.write(value, FIT.BaseType.UINT16Z);\n    }\n\n    writeUInt32z(value) {\n        return this.write(value, FIT.BaseType.UINT32Z);\n    }\n\n    writeUInt64z(value) {\n        return this.write(value, FIT.BaseType.UINT64Z);\n    }\n\n    writeByte(value) {\n        return this.write(value, FIT.BaseType.BYTE);\n    }\n\n    writeString(text) {\n        const bytes = this.#textEncoder.encode(text);\n\n        this.#resizeIfNeeded(bytes.byteLength);\n\n        const uint8Array = new Uint8Array(this.#arrayBuffer, this.#byteOffset, bytes.byteLength);\n        uint8Array.set(bytes);\n\n        this.#byteOffset += bytes.byteLength;\n\n        // Add a null terminator\n        this.writeUInt8(0);\n\n        return this;\n    }\n\n    write(value, baseType) {\n        if (baseType === FIT.BaseType.STRING) {\n            return this.writeString(value);\n        }\n\n        this.#setValues(baseType, value);\n\n        return;\n    }\n\n    set(typedarray, targetOffset = 0) {\n        this.#resizeIfNeeded(typedarray.byteLength + targetOffset);\n\n        const uint8Array = new Uint8Array(this.#arrayBuffer);\n        uint8Array.set(typedarray, targetOffset);\n\n        this.#byteOffset = Math.max(this.#byteOffset, typedarray.byteLength + targetOffset);\n\n        return this;\n    }\n\n    [Symbol.iterator]() {\n        let start = 0;\n        const end = this.#byteOffset;\n        const dataView = this.#dataView;\n\n        return {\n            next() {\n                if (start < end) {\n                    return { value: dataView.getUint8(start++), done: false, };\n                }\n                else {\n                    return { done: true, };\n                }\n            },\n        };\n    }\n\n    #setValues(baseType, value) {\n        const values = Array.isArray(value) ? value : [value,];\n\n        values.forEach((value) => {\n            return this.#setValue(baseType, value);\n        });\n    }\n\n    #setValue(baseType, value) {\n        const def = this.#baseTypeDefinitions[baseType];\n\n        this.#resizeIfNeeded(def.size);\n\n        const val = def.mask == null ? value : value & def.mask;\n\n        def.setValue(this.#byteOffset, val, true);\n        this.#byteOffset += def.size;\n\n        return this;\n    }\n\n    #resizeIfNeeded(byteCount = 1) {\n        if (this.#arrayBuffer.byteLength - this.#byteOffset >= byteCount) {\n            return;\n        }\n\n        if (!this.#arrayBuffer.resizable) {\n            throw new Error(\"Can not resize OutputStream. Set a larger initial size.\");\n        }\n\n        this.#arrayBuffer.resize(this.#arrayBuffer.byteLength + Math.max(this.#resizeByBytes, byteCount));\n    }\n}\n\nexport default OutputStream;\n", "/////////////////////////////////////////////////////////////////////////////////////////////\n// Copyright 2025 Garmin International, Inc.\n// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you\n// may not use this file except in compliance with the Flexible and Interoperable Data\n// Transfer (FIT) Protocol License.\n/////////////////////////////////////////////////////////////////////////////////////////////\n// ****WARNING****  This file is auto-generated!  Do NOT edit this file.\n// Profile Version = 21.178.0Release\n// Tag = production/release/21.178.0-0-g3bea629\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n\nimport CrcCalculator from \"./crc-calculator.js\";\nimport FIT from \"./fit.js\";\nimport MesgDefinition from \"./mesg-definition.js\";\nimport OutputStream from \"./output-stream.js\";\nimport Profile from \"./profile.js\";\nimport Utils from \"./utils.js\";\n\nconst HEADER_WITH_CRC_SIZE = 14;\nconst HEADER_WITHOUT_CRC_SIZE = 12;\n\n/**\n * A class for encoding FIT files.\n * @class\n */\nclass Encoder {\n    /**\n     Creates a FIT File Encoder\n     * @param {Object} [options] - Encoder options (optional)\n     * @param {Object.<number,{object, object }} [options.fieldDescriptions=null] - (optional, default null) fieldDescriptions\n     * @constructor\n     */\n    constructor({ fieldDescriptions = null, } = {}) {\n        this.#fieldDescriptions = {};\n\n        for (const [key, {developerDataIdMesg, fieldDescriptionMesg}] of Object.entries(fieldDescriptions ?? {})) {\n            this.addDeveloperField(key, developerDataIdMesg, fieldDescriptionMesg);\n        }\n\n        this.#writeEmptyFileHeader();\n    }\n\n    /**\n     * Closes the encoder and returns the file data\n     * @returns {Uint8Array} A Uint8Array containing the file data\n     */\n    close() {\n        this.#updateFileHeader();\n        this.#writeFileCrc();\n\n        return this.#outputStream.uint8Array;\n    }\n\n    /**\n     * Encodes a mesg into the file.\n     * @param {Object} mesg - The message data\n     * @param {Number} mesg.mesgNum - The mesg number for this message\n     * @return {this}\n     */\n    writeMesg(mesg) {\n        return this.onMesg(mesg.mesgNum, mesg);\n    }\n\n    /**\n     * Encodes a mesg into the file.\n     * This method can be used as a Decoder~mesgListener callback.\n     * @param {Number} mesgNum - The message number for this message\n     * @param {Object} mesg - The message data\n     * @return {this}\n     */\n    onMesg(mesgNum, mesg) {\n        try {\n            const mesgDefinition = this.#createMesgDefinition(mesgNum, mesg);\n            this.#writeMesgDefinitionIfNotActive(mesgDefinition);\n\n            // Write Message Header\n            this.#outputStream.writeUInt8(mesgDefinition.localMesgNum);\n\n            // Write Field Values\n            mesgDefinition.fieldDefinitions.forEach((fieldDefinition) => {\n                const values = this.#transformValues(mesg[fieldDefinition.name], fieldDefinition);\n                const baseTypeDef = FIT.BaseTypeDefinitions[fieldDefinition.baseType];\n\n                this.#outputStream.write(values, baseTypeDef.type);\n            });\n\n            // Write Developer Field Values\n            mesgDefinition.developerFieldDefinitions.forEach((developerFieldDefinition) => {\n                const values = this.#transformValues(\n                    mesg.developerFields[developerFieldDefinition.key],\n                    developerFieldDefinition);\n\n                const baseTypeDef = FIT.BaseTypeDefinitions[developerFieldDefinition.baseType];\n\n                this.#outputStream.write(values, baseTypeDef.type);\n            });\n        }\n        catch (error) {\n            throw new Error(\n                \"Could not write Message\", {\n                cause: {\n                    mesg,\n                    cause: {\n                        message: error.message,\n                        cause: error.cause,\n                    },\n                },\n            }\n            );\n        }\n\n        return this;\n    };\n\n    /**\n     * Adds a Developer Data Field Description and associated Developer Data Id Message to the Endoder\n     * This provides the Encoder with the context required to write Developer Fields to the output-stream.\n     * *** This method does not write the messages to the output-stream ***\n     * This method can be used as a Decoder~fieldDescriptionListener callback.\n     * @param {Number} key - The message number for this message\n     * @param {Object} developerDataIdMesg - The Developer Data Id mesg\n     * @param {Object} fieldDescriptionMesg - The Field Description mesg\n     * @return {this}\n     */\n    addDeveloperField(key, developerDataIdMesg, fieldDescriptionMesg) {\n        if(developerDataIdMesg.developerDataIndex == null || fieldDescriptionMesg.developerDataIndex == null) {\n            throw new Error(\"addDeveloperField() - one or more developerDataIndex values are null.\", {\n                 cause: {\n                    key,\n                    developerDataIdMesg,\n                    fieldDescriptionMesg\n                }\n            });\n        }\n\n        if(developerDataIdMesg.developerDataIndex !== fieldDescriptionMesg.developerDataIndex) {\n            throw new Error(\"addDeveloperField() - developerDataIndex values do not match.\", {\n                 cause: {\n                    key,\n                    developerDataIdMesg,\n                    fieldDescriptionMesg\n                }\n            });\n        }\n\n        this.#fieldDescriptions[key] = {\n            developerDataIdMesg,\n            fieldDescriptionMesg\n        }\n\n        return this;\n    }\n\n    #writeEmptyFileHeader() {\n        Array(HEADER_WITH_CRC_SIZE).fill(0).forEach((zero) => {\n            this.#outputStream.writeUInt8(zero);\n        });\n    }\n\n    #updateFileHeader() {\n        const arrayBuffer = new ArrayBuffer(HEADER_WITH_CRC_SIZE);\n        const dataView = new DataView(arrayBuffer);\n\n        // Header Size\n        dataView.setUint8(0, HEADER_WITH_CRC_SIZE);\n\n        // Protocol Version\n        dataView.setUint8(1, 2);\n\n        // Profile Version\n        dataView.setUint16(2, Profile.version.major * 1000 + Profile.version.minor, true);\n\n        // Data Size\n        dataView.setUint32(4, this.#outputStream.length - HEADER_WITH_CRC_SIZE, true);\n\n        // Data Type \".FIT\"\n        dataView.setUint8(8, 0x2E);\n        dataView.setUint8(9, 0x46);\n        dataView.setUint8(10, 0x49);\n        dataView.setUint8(11, 0x54);\n\n        // Header CRC\n        const crc = CrcCalculator.calculateCRC(new Uint8Array(arrayBuffer), 0, HEADER_WITHOUT_CRC_SIZE);\n        dataView.setUint16(12, crc, true);\n\n        this.#outputStream.set(new Uint8Array(arrayBuffer));\n    }\n\n    #writeFileCrc() {\n        const crc = CrcCalculator.calculateCRC(this.#outputStream.uint8Array, 0, this.#outputStream.length);\n        this.#outputStream.writeUInt16(crc);\n    }\n\n    #transformValues(value, fieldDefinition) {\n        const values = Array.isArray(value) ? value : [value,];\n\n        return values.map((value) => {\n            return this.#transformValue(value, fieldDefinition);\n        });\n    }\n\n    #transformValue(value, fieldDefinition) {\n        try {\n            if (FIT.isNotNumberStringDateOrBoolean(value)) {\n                return FIT.BaseTypeDefinitions[fieldDefinition.baseType].invalid;\n            }\n\n            // Is this a numeric field?\n            if (FIT.NumericFieldTypes.includes(fieldDefinition.type)) {\n                if (!FIT.isNumeric(value)) {\n                    throw new Error();\n                }\n\n                const hasScaleOrOffset = (fieldDefinition.scale != FIT.FIELD_DEFAULT_SCALE || fieldDefinition.offset != FIT.FIELD_DEFAULT_OFFSET);\n\n                if (hasScaleOrOffset) {\n                    const scaledValue = (value + fieldDefinition.offset) * fieldDefinition.scale;\n\n                    return FIT.FloatingPointFieldTypes.includes(fieldDefinition.type) ? scaledValue : Math.round(scaledValue);\n                }\n\n                return value;\n            }\n\n            // Is this a date_time field?\n            if (fieldDefinition.type === \"dateTime\") {\n                if (FIT.isDate(value)) {\n                    return Utils.convertDateToDateTime(value);\n                }\n\n                if (!FIT.isNumeric(value)) {\n                    throw new Error();\n                }\n\n                return value;\n            }\n\n            // Is this a string field\n            if (fieldDefinition.type === \"string\") {\n                if (!FIT.isString(value)) {\n                    throw new Error();\n                }\n\n                return value;\n            }\n\n            // Must be a FIT type field\n            if (FIT.isNumeric(value)) {\n                return value;\n            }\n\n            const profileType = Profile.types[fieldDefinition.type];\n\n            const [typeValue,] = Object.entries(profileType).find(([, typeValue,]) => {\n                return typeValue === value;\n            });\n\n            return typeValue;\n        }\n        catch {\n            throw new Error(\n                `Could not convert \"${value}\" to \"${fieldDefinition.type}\"`,\n                { cause: { value, fieldDefinition, }, });\n        }\n    }\n\n    /**\n     * Creates a MesgDefinition from the mesgNum and mesg.\n     * @param {Number} mesgNum - The mesg number for this message\n     * @param {Object} [mesg] - The message data\n     * @return {MesgDefinition}\n     */\n    #createMesgDefinition = (mesgNum, mesg) => {\n        const mesgDefinition = new MesgDefinition(mesgNum, mesg, { fieldDescriptions: this.#fieldDescriptions, });\n        mesgDefinition.localMesgNum = this.#lookupLocalMesgNum(mesgDefinition);\n\n        return mesgDefinition;\n    };\n\n    /**\n     * Searches the #localMesgDefinitions for a matching mesgDefinition\n     * @param {Object} mesgDefinition - the mesg definition to match\n     * @return The localMesgNum to be used with mesgDefinition\n     */\n    #lookupLocalMesgNum = (mesgDefinition) => {\n        const localMesgNum = this.#localMesgDefinitions.findIndex((localMesgDefinition) => {\n            return localMesgDefinition?.equals(mesgDefinition) ?? false;\n        });\n\n        return (localMesgNum !== -1 ? localMesgNum : this.#nextLocalMesgNum++) & FIT.LOCAL_MESG_NUM_MASK;\n    };\n\n    /**\n     * Writes the mesgDefinition to the output stream, if it is not one of the currently active 16\n     * @param {Object} mesgDefinition - the mesg definition to match\n     * @return The localMesgNum to be used with mesgDefinition\n     */\n    #writeMesgDefinitionIfNotActive = (mesgDefinition) => {\n        const localMesgNum = mesgDefinition.localMesgNum;\n\n        if (this.#localMesgDefinitions[localMesgNum] == null\n            || !this.#localMesgDefinitions[localMesgNum].equals(mesgDefinition)) {\n            this.#writeMesgDefinition(mesgDefinition);\n        }\n\n        return localMesgNum;\n    };\n\n    /**\n     * Writes the mesgDefinition to the output stream\n     * @param {Object} mesgDefinition - the mesg definition to write\n     * @return {this}\n     */\n    #writeMesgDefinition(mesgDefinition) {\n        mesgDefinition.write(this.#outputStream);\n        this.#localMesgDefinitions[mesgDefinition.localMesgNum] = mesgDefinition;\n\n        return this;\n    }\n\n    #localMesgDefinitions = Array(16).fill(null);\n    #nextLocalMesgNum = 0;\n    #outputStream = new OutputStream();\n    #fieldDescriptions = null;\n}\n\nexport default Encoder;\n"],
  "mappings": "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AI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KA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AA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACL;AAAA,IACJ,gBAAgB;AAAA,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ACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAAA,MACL,KAAK;AAAA;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAAA,MACL,KAAK;AAAA;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,MAAM;AAAA,IACN;AAAA,IACJ,eAAe;AAAA,MACX,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,MACH,GAAG;AAAA;AAAA,MACH,IAAI;AAAA;AAAA,MACJ,IAAI;AAAA;AAAA,MACJ,IAAI;AAAA;AAAA,MACJ,IAAI;AAAA;AAAA,MACJ,IAAI;AAAA;AAAA,MACJ,IAAI;AAAA;AAAA,MACJ,IAAI;AAAA;AAAA,MACJ,IAAI;AAAA,MACJ,KAAK;AAAA;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAAA,MACL,KAAK;AAAA;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAAA,MACL,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACL,MAAM;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACL,MAAM;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA;AAAA,MACN,MAAM;AAAA;AAAA,MACN,M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IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACJ;AAAA,IACJ,eAAegBAAgB;AAAA,MACZ,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ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AAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACJ;AAAA,IACJ,kBAAkB;AAAA,MACd,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI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;AAAA,MACH,GAAG;AAAA,MACH,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACJ;AAAA,IACJ,mBAAmB;AAAA,MACfyBAAyB;AAAA,MACrB,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACJ;AAAA,IACJ,mBAAmB;AAAA,MACfkBAAkB;AAAA,MACdoBAAoB;AAAA,MAChoBAAoB;AAAA,MAChiBAAiB;AAAA,MACb,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI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,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACJ;AAAA,IACJ,kBAAkB;AAAA,MACdoBAAoB;AAAA,MAChB,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;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",
  "names": ["memoGlobMesgs", "_a", "_messages", "throwError_fn", "mergeHeartRates", "decodeMemoGlobs", "_a", "key", "developerDataIdMesg", "baseType", "subField", "fieldProfile", "_arrayBuffer", "value", "HEADER_WITH_CRC_SIZE", "HEADER_WITHOUT_CRC_SIZE", "transformValues_fn", "transformValue_fn", "value", "typeValue"]
}
