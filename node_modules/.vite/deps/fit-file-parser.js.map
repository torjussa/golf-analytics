{
  "version": 3,
  "sources": ["../../fit-file-parser/dist/fit.js", "../../fit-file-parser/dist/messages.js", "../../base64-js/index.js", "../../ieee754/index.js", "../../buffer/index.js", "../../fit-file-parser/dist/binary.js", "../../fit-file-parser/dist/helper.js", "../../fit-file-parser/dist/fit-parser.js"],
  "sourcesContent": ["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMessageName = getMessageName;\nexports.getFieldObject = getFieldObject;\n// some unit conversion constants\nvar metersInOneKilometer = 1000;\nvar secondsInOneHour = 3600;\n// according to https://en.wikipedia.org/wiki/Mile\nvar metersInOneMile = 1609.344;\nvar centiBarsInOneBar = 100;\nvar psiInOneBar = 14.5037738;\n\nvar FIT = exports.FIT = {\n  scConst: 180 / Math.pow(2, 31),\n  options: {\n    speedUnits: {\n      // native speed unit: meters per second [m/s]\n      'm/s': {\n        multiplier: 1,\n        offset: 0\n      },\n      // miles per hour [mph]\n      mph: {\n        multiplier: secondsInOneHour / metersInOneMile,\n        offset: 0\n      },\n      // kilometers per hour [km/h]\n      'km/h': {\n        multiplier: secondsInOneHour / metersInOneKilometer,\n        offset: 0\n      }\n    },\n    lengthUnits: {\n      // native length unit: meters [m]\n      m: {\n        multiplier: 1,\n        offset: 0\n      },\n      // (international) mile [mi]\n      mi: {\n        multiplier: 1 / metersInOneMile,\n        offset: 0\n      },\n      // kilometer [km]\n      km: {\n        multiplier: 1 / metersInOneKilometer,\n        offset: 0\n      }\n    },\n    temperatureUnits: {\n      // native temperature unit: degree Celsius [°C]\n      '°C': {\n        multiplier: 1,\n        offset: 0\n      },\n      // kelvin [K]\n      kelvin: {\n        multiplier: 1,\n        offset: -273.15\n      },\n      // degree fahrenheit [°F]\n      fahrenheit: {\n        multiplier: 9 / 5,\n        offset: 32\n      }\n    },\n    pressureUnits: {\n      cbar: {\n        multiplier: 1,\n        offset: 0\n      },\n      bar: {\n        multiplier: 1 / centiBarsInOneBar,\n        offset: 0\n      },\n      psi: {\n        multiplier: 1 / centiBarsInOneBar * psiInOneBar,\n        offset: 0\n      }\n    }\n  },\n  messages: {\n    0: {\n      name: 'file_id',\n      0: { field: 'type', type: 'file', scale: null, offset: '', units: '' },\n      1: { field: 'manufacturer', type: 'manufacturer', scale: null, offset: '', units: '' },\n      2: { field: 'product', type: 'uint16', scale: null, offset: '', units: '' },\n      3: { field: 'serial_number', type: 'uint32z', scale: null, offset: '', units: '' },\n      4: { field: 'time_created', type: 'date_time', scale: null, offset: '', units: '' },\n      5: { field: 'number', type: 'uint16', scale: null, offset: '', units: '' },\n      8: { field: 'product_name', type: 'string', scale: null, offset: '', units: '' }\n    },\n    1: {\n      name: 'capabilities',\n      0: { field: 'languages', type: 'uint8z', scale: null, offset: '', units: '' },\n      1: { field: 'sports', type: 'sport_bits_0', scale: null, offset: '', units: '' },\n      21: { field: 'workouts_supported', type: 'workout_capabilities', scale: null, offset: '', units: '' },\n      23: { field: 'connectivity_supported', type: 'connectivity_capabilities', scale: null, offset: '', units: '' }\n    },\n    2: {\n      name: 'device_settings',\n      0: { field: 'active_time_zone', type: 'uint8', scale: null, offset: '', units: '' },\n      1: { field: 'utc_offset', type: 'uint32', scale: null, offset: '', units: '' },\n      2: { field: 'time_offset', type: 'uint32', scale: null, offset: '', units: 's' },\n      5: { field: 'time_zone_offset', type: 'sint8', scale: 4, offset: '', units: 'hr' },\n      55: { field: 'display_orientation', type: 'display_orientation', scale: null, offset: '', units: '' },\n      56: { field: 'mounting_side', type: 'side', scale: null, offset: '', units: '' },\n      94: { field: 'number_of_screens', type: 'uint8', scale: null, offset: '', units: '' },\n      95: { field: 'smart_notification_display_orientation', type: 'display_orientation', scale: null, offset: '', units: '' }\n    },\n    3: {\n      name: 'user_profile',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      0: { field: 'friendly_name', type: 'string', scale: null, offset: 0, units: '' },\n      1: { field: 'gender', type: 'gender', scale: null, offset: 0, units: '' },\n      2: { field: 'age', type: 'uint8', scale: null, offset: 0, units: 'years' },\n      3: { field: 'height', type: 'uint8', scale: 100, offset: 0, units: 'm' },\n      4: { field: 'weight', type: 'uint16', scale: 10, offset: 0, units: 'kg' },\n      5: { field: 'language', type: 'language', scale: null, offset: 0, units: '' },\n      6: { field: 'elev_setting', type: 'display_measure', scale: null, offset: 0, units: '' },\n      7: { field: 'weight_setting', type: 'display_measure', scale: null, offset: 0, units: '' },\n      8: { field: 'resting_heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      9: { field: 'default_max_running_heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      10: { field: 'default_max_biking_heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      11: { field: 'default_max_heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      12: { field: 'hr_setting', type: 'display_heart', scale: null, offset: 0, units: '' },\n      13: { field: 'speed_setting', type: 'display_measure', scale: null, offset: 0, units: '' },\n      14: { field: 'dist_setting', type: 'display_measure', scale: null, offset: 0, units: '' },\n      16: { field: 'power_setting', type: 'display_power', scale: null, offset: 0, units: '' },\n      17: { field: 'activity_class', type: 'activity_class', scale: null, offset: 0, units: '' },\n      18: { field: 'position_setting', type: 'display_position', scale: null, offset: 0, units: '' },\n      21: { field: 'temperature_setting', type: 'display_measure', scale: null, offset: 0, units: '' },\n      22: { field: 'local_id', type: 'user_local_id', scale: null, offset: 0, units: '' },\n      23: { field: 'global_id', type: 'byte', scale: null, offset: 0, units: '' },\n      28: { field: 'wake_time', type: 'localtime_into_day', scale: null, offset: 0, units: '' },\n      29: { field: 'sleep_time', type: 'localtime_into_day', scale: null, offset: 0, units: '' },\n      30: { field: 'height_setting', type: 'display_measure', scale: null, offset: 0, units: '' }\n    },\n    4: {\n      name: 'hrm_profile',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: '', units: '' },\n      0: { field: 'enabled', type: 'bool', scale: null, offset: '', units: '' },\n      1: { field: 'hrm_ant_id', type: 'uint16z', scale: null, offset: '', units: '' },\n      2: { field: 'log_hrv', type: 'bool', scale: null, offset: '', units: '' },\n      3: { field: 'hrm_ant_id_trans_type', type: 'uint8z', scale: null, offset: '', units: '' }\n    },\n    5: {\n      name: 'sdm_profile',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: '', units: '' },\n      0: { field: 'enabled', type: 'bool', scale: null, offset: '', units: '' },\n      1: { field: 'sdm_ant_id', type: 'uint16z', scale: null, offset: '', units: '' },\n      2: { field: 'sdm_cal_factor', type: 'uint16', scale: 10, offset: '', units: '%' },\n      3: { field: 'odometer', type: 'uint32', scale: 100, offset: '', units: 'm' },\n      4: { field: 'speed_source', type: 'bool', scale: null, offset: '', units: '' },\n      5: { field: 'sdm_ant_id_trans_type', type: 'uint8z', scale: null, offset: '', units: '' },\n      7: { field: 'odometer_rollover', type: 'uint8', scale: null, offset: '', units: '' }\n    },\n    6: {\n      name: 'bike_profile',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      0: { field: 'name', type: 'string', scale: null, offset: 0, units: '' },\n      1: { field: 'sport', type: 'sport', scale: null, offset: 0, units: '' },\n      2: { field: 'sub_sport', type: 'sub_sport', scale: null, offset: 0, units: '' },\n      3: { field: 'odometer', type: 'uint32', scale: 100, offset: 0, units: 'm' },\n      4: { field: 'bike_spd_ant_id', type: 'uint16z', scale: null, offset: 0, units: '' },\n      5: { field: 'bike_cad_ant_id', type: 'uint16z', scale: null, offset: 0, units: '' },\n      6: { field: 'bike_spdcad_ant_id', type: 'uint16z', scale: null, offset: 0, units: '' },\n      7: { field: 'bike_power_ant_id', type: 'uint16z', scale: null, offset: 0, units: '' },\n      8: { field: 'custom_wheelsize', type: 'uint16', scale: 1000, offset: 0, units: 'm' },\n      9: { field: 'auto_wheelsize', type: 'uint16', scale: 1000, offset: 0, units: 'm' },\n      10: { field: 'bike_weight', type: 'uint16', scale: 10, offset: 0, units: 'kg' },\n      11: { field: 'power_cal_factor', type: 'uint16', scale: 10, offset: 0, units: '%' },\n      12: { field: 'auto_wheel_cal', type: 'bool', scale: null, offset: 0, units: '' },\n      13: { field: 'auto_power_zero', type: 'bool', scale: null, offset: 0, units: '' },\n      14: { field: 'id', type: 'uint8', scale: null, offset: 0, units: '' },\n      15: { field: 'spd_enabled', type: 'bool', scale: null, offset: 0, units: '' },\n      16: { field: 'cad_enabled', type: 'bool', scale: null, offset: 0, units: '' },\n      17: { field: 'spdcad_enabled', type: 'bool', scale: null, offset: 0, units: '' },\n      18: { field: 'power_enabled', type: 'bool', scale: null, offset: 0, units: '' },\n      19: { field: 'crank_length', type: 'uint8', scale: 2, offset: -110, units: 'mm' },\n      20: { field: 'enabled', type: 'bool', scale: null, offset: 0, units: '' },\n      21: { field: 'bike_spd_ant_id_trans_type', type: 'uint8z', scale: null, offset: 0, units: '' },\n      22: { field: 'bike_cad_ant_id_trans_type', type: 'uint8z', scale: null, offset: 0, units: '' },\n      23: { field: 'bike_spdcad_ant_id_trans_type', type: 'uint8z', scale: null, offset: 0, units: '' },\n      24: { field: 'bike_power_ant_id_trans_type', type: 'uint8z', scale: null, offset: 0, units: '' },\n      37: { field: 'odometer_rollover', type: 'uint8', scale: null, offset: 0, units: '' },\n      38: { field: 'front_gear_num', type: 'uint8z', scale: null, offset: 0, units: '' },\n      39: { field: 'front_gear', type: 'uint8z', scale: null, offset: 0, units: '' },\n      40: { field: 'rear_gear_num', type: 'uint8z', scale: null, offset: 0, units: '' },\n      41: { field: 'rear_gear', type: 'uint8z', scale: null, offset: 0, units: '' },\n      44: { field: 'shimano_di2_enabled', type: 'bool', scale: null, offset: 0, units: '' }\n    },\n    7: {\n      name: 'zones_target',\n      1: { field: 'max_heart_rate', type: 'uint8', scale: null, offset: '', units: '' },\n      2: { field: 'threshold_heart_rate', type: 'uint8', scale: null, offset: '', units: '' },\n      3: { field: 'functional_threshold_power', type: 'uint16', scale: null, offset: '', units: '' },\n      5: { field: 'hr_calc_type', type: 'hr_zone_calc', scale: null, offset: '', units: '' },\n      7: { field: 'pwr_calc_type', type: 'pwr_zone_calc', scale: null, offset: '', units: '' }\n    },\n    8: {\n      name: 'hr_zone',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      1: { field: 'high_bpm', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      2: { field: 'name', type: 'string', scale: null, offset: 0, units: '' }\n    },\n    9: {\n      name: 'power_zone',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      1: { field: 'high_value', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      2: { field: 'name', type: 'string', scale: null, offset: 0, units: '' }\n    },\n    10: {\n      name: 'met_zone',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      1: { field: 'high_bpm', type: 'uint8', scale: null, offset: 0, units: '' },\n      2: { field: 'calories', type: 'uint16', scale: 10, offset: 0, units: 'kcal / min' },\n      3: { field: 'fat_calories', type: 'uint8', scale: 10, offset: 0, units: 'kcal / min' }\n    },\n    12: {\n      name: 'sport',\n      0: { field: 'sport', type: 'sport', scale: null, offset: '', units: '' },\n      1: { field: 'sub_sport', type: 'sub_sport', scale: null, offset: '', units: '' },\n      3: { field: 'name', type: 'string', scale: null, offset: '', units: '' }\n    },\n    15: {\n      name: 'goal',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: '', units: '' },\n      0: { field: 'sport', type: 'sport', scale: null, offset: '', units: '' },\n      1: { field: 'sub_sport', type: 'sub_sport', scale: null, offset: '', units: '' },\n      2: { field: 'start_date', type: 'date_time', scale: null, offset: '', units: '' },\n      3: { field: 'end_date', type: 'date_time', scale: null, offset: '', units: '' },\n      4: { field: 'type', type: 'goal', scale: null, offset: '', units: '' },\n      5: { field: 'value', type: 'uint32', scale: null, offset: '', units: '' },\n      6: { field: 'repeat', type: 'bool', scale: null, offset: '', units: '' },\n      7: { field: 'target_value', type: 'uint32', scale: null, offset: '', units: '' },\n      8: { field: 'recurrence', type: 'goal_recurrence', scale: null, offset: '', units: '' },\n      9: { field: 'recurrence_value', type: 'uint16', scale: null, offset: '', units: '' },\n      10: { field: 'enabled', type: 'bool', scale: null, offset: '', units: '' }\n    },\n    18: {\n      name: 'session',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: 's' },\n      0: { field: 'event', type: 'event', scale: null, offset: 0, units: '' },\n      1: { field: 'event_type', type: 'event_type', scale: null, offset: 0, units: '' },\n      2: { field: 'start_time', type: 'date_time', scale: null, offset: 0, units: '' },\n      3: { field: 'start_position_lat', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      4: { field: 'start_position_long', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      5: { field: 'sport', type: 'sport', scale: null, offset: 0, units: '' },\n      6: { field: 'sub_sport', type: 'sub_sport', scale: null, offset: 0, units: '' },\n      7: { field: 'total_elapsed_time', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      8: { field: 'total_timer_time', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      9: { field: 'total_distance', type: 'uint32', scale: 100, offset: 0, units: 'm' },\n      10: { field: 'total_cycles', type: 'uint32', scale: null, offset: 0, units: 'cycles' },\n      11: { field: 'total_calories', type: 'uint16', scale: null, offset: 0, units: 'kcal' },\n      13: { field: 'total_fat_calories', type: 'uint16', scale: null, offset: 0, units: 'kcal' },\n      14: { field: 'avg_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      15: { field: 'max_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      16: { field: 'avg_heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      17: { field: 'max_heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      18: { field: 'avg_cadence', type: 'uint8', scale: null, offset: 0, units: 'rpm' },\n      19: { field: 'max_cadence', type: 'uint8', scale: null, offset: 0, units: 'rpm' },\n      20: { field: 'avg_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      21: { field: 'max_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      22: { field: 'total_ascent', type: 'uint16', scale: null, offset: 0, units: 'm' },\n      23: { field: 'total_descent', type: 'uint16', scale: null, offset: 0, units: 'm' },\n      24: { field: 'total_training_effect', type: 'uint8', scale: 10, offset: 0, units: '' },\n      25: { field: 'first_lap_index', type: 'uint16', scale: null, offset: 0, units: '' },\n      26: { field: 'num_laps', type: 'uint16', scale: null, offset: 0, units: '' },\n      27: { field: 'event_group', type: 'uint8', scale: null, offset: 0, units: '' },\n      28: { field: 'trigger', type: 'session_trigger', scale: null, offset: 0, units: '' },\n      29: { field: 'nec_lat', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      30: { field: 'nec_long', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      31: { field: 'swc_lat', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      32: { field: 'swc_long', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      34: { field: 'normalized_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      35: { field: 'training_stress_score', type: 'uint16', scale: 10, offset: 0, units: 'tss' },\n      36: { field: 'intensity_factor', type: 'uint16', scale: 1000, offset: 0, units: 'if' },\n      37: { field: 'left_right_balance', type: 'left_right_balance_100', scale: 100, offset: 0, units: '%' },\n      41: { field: 'avg_stroke_count', type: 'uint32', scale: 10, offset: 0, units: 'strokes/lap' },\n      42: { field: 'avg_stroke_distance', type: 'uint16', scale: 100, offset: 0, units: 'm' },\n      43: { field: 'swim_stroke', type: 'swim_stroke', scale: null, offset: 0, units: 'swim_stroke' },\n      44: { field: 'pool_length', type: 'uint16', scale: 100, offset: 0, units: 'm' },\n      45: { field: 'threshold_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      46: { field: 'pool_length_unit', type: 'display_measure', scale: null, offset: 0, units: '' },\n      47: { field: 'num_active_lengths', type: 'uint16', scale: null, offset: 0, units: 'lengths' },\n      48: { field: 'total_work', type: 'uint32', scale: null, offset: 0, units: 'J' },\n      49: { field: 'avg_altitude', type: 'uint16', scale: 5, offset: -500, units: 'm' },\n      50: { field: 'max_altitude', type: 'uint16', scale: 5, offset: -500, units: 'm' },\n      51: { field: 'gps_accuracy', type: 'uint8', scale: null, offset: 0, units: 'm' },\n      52: { field: 'avg_grade', type: 'sint16', scale: 100, offset: 0, units: '%' },\n      53: { field: 'avg_pos_grade', type: 'sint16', scale: 100, offset: 0, units: '%' },\n      54: { field: 'avg_neg_grade', type: 'sint16', scale: 100, offset: 0, units: '%' },\n      55: { field: 'max_pos_grade', type: 'sint16', scale: 100, offset: 0, units: '%' },\n      56: { field: 'max_neg_grade', type: 'sint16', scale: 100, offset: 0, units: '%' },\n      57: { field: 'avg_temperature', type: 'sint8', scale: null, offset: 0, units: 'C' },\n      58: { field: 'max_temperature', type: 'sint8', scale: null, offset: 0, units: 'C' },\n      59: { field: 'total_moving_time', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      60: { field: 'avg_pos_vertical_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      61: { field: 'avg_neg_vertical_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      62: { field: 'max_pos_vertical_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      63: { field: 'max_neg_vertical_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      64: { field: 'min_heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      65: { field: 'time_in_hr_zone', type: 'uint32_array', scale: 1000, offset: 0, units: 's' },\n      66: { field: 'time_in_speed_zone', type: 'uint32_array', scale: 1000, offset: 0, units: 's' },\n      67: { field: 'time_in_cadence_zone', type: 'uint32_array', scale: 1000, offset: 0, units: 's' },\n      68: { field: 'time_in_power_zone', type: 'uint32_array', scale: 1000, offset: 0, units: 's' },\n      69: { field: 'avg_lap_time', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      70: { field: 'best_lap_index', type: 'uint16', scale: null, offset: 0, units: '' },\n      71: { field: 'min_altitude', type: 'uint16', scale: 5, offset: -500, units: 'm' },\n      82: { field: 'player_score', type: 'uint16', scale: null, offset: 0, units: '' },\n      83: { field: 'opponent_score', type: 'uint16', scale: null, offset: 0, units: '' },\n      84: { field: 'opponent_name', type: 'string', scale: null, offset: 0, units: '' },\n      85: { field: 'stroke_count', type: 'uint16', scale: null, offset: 0, units: 'counts' },\n      86: { field: 'zone_count', type: 'uint16', scale: null, offset: 0, units: 'counts' },\n      87: { field: 'max_ball_speed', type: 'uint16', scale: 100, offset: 0, units: 'm/s' },\n      88: { field: 'avg_ball_speed', type: 'uint16', scale: 100, offset: 0, units: 'm/s' },\n      89: { field: 'avg_vertical_oscillation', type: 'uint16', scale: 10, offset: 0, units: 'mm' },\n      90: { field: 'avg_stance_time_percent', type: 'uint16', scale: 100, offset: 0, units: 'percent' },\n      91: { field: 'avg_stance_time', type: 'uint16', scale: 10, offset: 0, units: 'ms' },\n      92: { field: 'avg_fractional_cadence', type: 'uint8', scale: 128, offset: 0, units: 'rpm' },\n      93: { field: 'max_fractional_cadence', type: 'uint8', scale: 128, offset: 0, units: 'rpm' },\n      94: { field: 'total_fractional_cycles', type: 'uint8', scale: 128, offset: 0, units: 'cycles' },\n      95: { field: 'avg_total_hemoglobin_conc', type: 'uint16', scale: 100, offset: 0, units: 'g/dL' },\n      96: { field: 'min_total_hemoglobin_conc', type: 'uint16', scale: 100, offset: 0, units: 'g/dL' },\n      97: { field: 'max_total_hemoglobin_conc', type: 'uint16', scale: 100, offset: 0, units: 'g/dL' },\n      98: { field: 'avg_saturated_hemoglobin_percent', type: 'uint16', scale: 10, offset: 0, units: '%' },\n      99: { field: 'min_saturated_hemoglobin_percent', type: 'uint16', scale: 10, offset: 0, units: '%' },\n      100: { field: 'max_saturated_hemoglobin_percent', type: 'uint16', scale: 10, offset: 0, units: '%' },\n      101: { field: 'avg_left_torque_effectiveness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      102: { field: 'avg_right_torque_effectiveness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      103: { field: 'avg_left_pedal_smoothness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      104: { field: 'avg_right_pedal_smoothness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      105: { field: 'avg_combined_pedal_smoothness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      111: { field: 'sport_index', type: 'uint8', scale: null, offset: 0, units: '' },\n      112: { field: 'time_standing', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      113: { field: 'stand_count', type: 'uint16', scale: null, offset: 0, units: '' },\n      114: { field: 'avg_left_pco', type: 'sint8', scale: null, offset: 0, units: 'mm' },\n      115: { field: 'avg_right_pco', type: 'sint8', scale: null, offset: 0, units: 'mm' },\n      116: { field: 'avg_left_power_phase', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      117: { field: 'avg_left_power_phase_peak', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      118: { field: 'avg_right_power_phase', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      119: { field: 'avg_right_power_phase_peak', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      120: { field: 'avg_power_position', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      121: { field: 'max_power_position', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      122: { field: 'avg_cadence_position', type: 'uint8', scale: null, offset: 0, units: 'rpm' },\n      123: { field: 'max_cadence_position', type: 'uint8', scale: null, offset: 0, units: 'rpm' },\n      124: { field: 'enhanced_avg_speed', type: 'uint32', scale: 1000, offset: 0, units: 'm/s' },\n      125: { field: 'enhanced_max_speed', type: 'uint32', scale: 1000, offset: 0, units: 'm/s' },\n      126: { field: 'enhanced_avg_altitude', type: 'uint32', scale: 5, offset: -500, units: 'm' },\n      127: { field: 'enhanced_min_altitude', type: 'uint32', scale: 5, offset: -500, units: 'm' },\n      128: { field: 'enhanced_max_altitude', type: 'uint32', scale: 5, offset: -500, units: 'm' },\n      129: { field: 'avg_lev_motor_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      130: { field: 'max_lev_motor_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      131: { field: 'lev_battery_consumption', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      132: { field: 'avg_vertical_ratio', type: 'uint16', scale: 100, offset: 0, units: 'percent' },\n      133: { field: 'avg_stance_time_balance', type: 'uint16', scale: 100, offset: 0, units: 'percent' },\n      134: { field: 'avg_step_length', type: 'uint16', scale: 10, offset: 0, units: 'mm' },\n      137: { field: 'total_anaerobic_effect', type: 'uint8', scale: 10, offset: 0, units: '' },\n      139: { field: 'avg_vam', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      192: { field: 'workout_feel', type: 'uint8', scale: null, offset: 0, units: '' },\n      193: { field: 'workout_rpe', type: 'uint8', scale: 10, offset: 0, units: '' }\n    },\n    19: {\n      name: 'lap',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: 's' },\n      0: { field: 'event', type: 'event', scale: null, offset: 0, units: '' },\n      1: { field: 'event_type', type: 'event_type', scale: null, offset: 0, units: '' },\n      2: { field: 'start_time', type: 'date_time', scale: null, offset: 0, units: '' },\n      3: { field: 'start_position_lat', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      4: { field: 'start_position_long', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      5: { field: 'end_position_lat', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      6: { field: 'end_position_long', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      7: { field: 'total_elapsed_time', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      8: { field: 'total_timer_time', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      9: { field: 'total_distance', type: 'uint32', scale: 100, offset: 0, units: 'm' },\n      10: { field: 'total_cycles', type: 'uint32', scale: null, offset: 0, units: 'cycles' },\n      11: { field: 'total_calories', type: 'uint16', scale: null, offset: 0, units: 'kcal' },\n      12: { field: 'total_fat_calories', type: 'uint16', scale: null, offset: 0, units: 'kcal' },\n      13: { field: 'avg_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      14: { field: 'max_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      15: { field: 'avg_heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      16: { field: 'max_heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      17: { field: 'avg_cadence', type: 'uint8', scale: null, offset: 0, units: 'rpm' },\n      18: { field: 'max_cadence', type: 'uint8', scale: null, offset: 0, units: 'rpm' },\n      19: { field: 'avg_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      20: { field: 'max_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      21: { field: 'total_ascent', type: 'uint16', scale: null, offset: 0, units: 'm' },\n      22: { field: 'total_descent', type: 'uint16', scale: null, offset: 0, units: 'm' },\n      23: { field: 'intensity', type: 'intensity', scale: null, offset: 0, units: '' },\n      24: { field: 'lap_trigger', type: 'lap_trigger', scale: null, offset: 0, units: '' },\n      25: { field: 'sport', type: 'sport', scale: null, offset: 0, units: '' },\n      26: { field: 'event_group', type: 'uint8', scale: null, offset: 0, units: '' },\n      32: { field: 'num_lengths', type: 'uint16', scale: null, offset: 0, units: 'lengths' },\n      33: { field: 'normalized_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      34: { field: 'left_right_balance', type: 'left_right_balance_100', scale: 100, offset: 0, units: '%' },\n      35: { field: 'first_length_index', type: 'uint16', scale: null, offset: 0, units: '' },\n      37: { field: 'avg_stroke_distance', type: 'uint16', scale: 100, offset: 0, units: 'm' },\n      38: { field: 'swim_stroke', type: 'swim_stroke', scale: null, offset: 0, units: '' },\n      39: { field: 'sub_sport', type: 'sub_sport', scale: null, offset: 0, units: '' },\n      40: { field: 'num_active_lengths', type: 'uint16', scale: null, offset: 0, units: 'lengths' },\n      41: { field: 'total_work', type: 'uint32', scale: null, offset: 0, units: 'J' },\n      42: { field: 'avg_altitude', type: 'uint16', scale: 5, offset: -500, units: 'm' },\n      43: { field: 'max_altitude', type: 'uint16', scale: 5, offset: -500, units: 'm' },\n      44: { field: 'gps_accuracy', type: 'uint8', scale: null, offset: 0, units: 'm' },\n      45: { field: 'avg_grade', type: 'sint16', scale: 100, offset: 0, units: '%' },\n      46: { field: 'avg_pos_grade', type: 'sint16', scale: 100, offset: 0, units: '%' },\n      47: { field: 'avg_neg_grade', type: 'sint16', scale: 100, offset: 0, units: '%' },\n      48: { field: 'max_pos_grade', type: 'sint16', scale: 100, offset: 0, units: '%' },\n      49: { field: 'max_neg_grade', type: 'sint16', scale: 100, offset: 0, units: '%' },\n      50: { field: 'avg_temperature', type: 'sint8', scale: null, offset: 0, units: 'C' },\n      51: { field: 'max_temperature', type: 'sint8', scale: null, offset: 0, units: 'C' },\n      52: { field: 'total_moving_time', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      53: { field: 'avg_pos_vertical_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      54: { field: 'avg_neg_vertical_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      55: { field: 'max_pos_vertical_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      56: { field: 'max_neg_vertical_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      57: { field: 'time_in_hr_zone', type: 'uint32_array', scale: 1000, offset: 0, units: 's' },\n      58: { field: 'time_in_speed_zone', type: 'uint32_array', scale: 1000, offset: 0, units: 's' },\n      59: { field: 'time_in_cadence_zone', type: 'uint32_array', scale: 1000, offset: 0, units: 's' },\n      60: { field: 'time_in_power_zone', type: 'uint32_array', scale: 1000, offset: 0, units: 's' },\n      61: { field: 'repetition_num', type: 'uint16', scale: null, offset: 0, units: '' },\n      62: { field: 'min_altitude', type: 'uint16', scale: 5, offset: -500, units: 'm' },\n      63: { field: 'min_heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      71: { field: 'wkt_step_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      74: { field: 'opponent_score', type: 'uint16', scale: null, offset: 0, units: '' },\n      75: { field: 'stroke_count', type: 'uint16', scale: null, offset: 0, units: 'counts' },\n      76: { field: 'zone_count', type: 'uint16', scale: null, offset: 0, units: 'counts' },\n      77: { field: 'avg_vertical_oscillation', type: 'uint16', scale: 10, offset: 0, units: 'mm' },\n      78: { field: 'avg_stance_time_percent', type: 'uint16', scale: 100, offset: 0, units: 'percent' },\n      79: { field: 'avg_stance_time', type: 'uint16', scale: 10, offset: 0, units: 'ms' },\n      80: { field: 'avg_fractional_cadence', type: 'uint8', scale: 128, offset: 0, units: 'rpm' },\n      81: { field: 'max_fractional_cadence', type: 'uint8', scale: 128, offset: 0, units: 'rpm' },\n      82: { field: 'total_fractional_cycles', type: 'uint8', scale: 128, offset: 0, units: 'cycles' },\n      83: { field: 'player_score', type: 'uint16', scale: null, offset: 0, units: '' },\n      84: { field: 'avg_total_hemoglobin_conc', type: 'uint16', scale: 100, offset: 0, units: 'g/dL' },\n      85: { field: 'min_total_hemoglobin_conc', type: 'uint16', scale: 100, offset: 0, units: 'g/dL' },\n      86: { field: 'max_total_hemoglobin_conc', type: 'uint16', scale: 100, offset: 0, units: 'g/dL' },\n      87: { field: 'avg_saturated_hemoglobin_percent', type: 'uint16', scale: 10, offset: 0, units: '%' },\n      88: { field: 'min_saturated_hemoglobin_percent', type: 'uint16', scale: 10, offset: 0, units: '%' },\n      89: { field: 'max_saturated_hemoglobin_percent', type: 'uint16', scale: 10, offset: 0, units: '%' },\n      91: { field: 'avg_left_torque_effectiveness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      92: { field: 'avg_right_torque_effectiveness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      93: { field: 'avg_left_pedal_smoothness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      94: { field: 'avg_right_pedal_smoothness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      95: { field: 'avg_combined_pedal_smoothness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      98: { field: 'time_standing', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      99: { field: 'stand_count', type: 'uint16', scale: null, offset: 0, units: '' },\n      100: { field: 'avg_left_pco', type: 'sint8', scale: null, offset: 0, units: 'mm' },\n      101: { field: 'avg_right_pco', type: 'sint8', scale: null, offset: 0, units: 'mm' },\n      102: { field: 'avg_left_power_phase', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      103: { field: 'avg_left_power_phase_peak', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      104: { field: 'avg_right_power_phase', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      105: { field: 'avg_right_power_phase_peak', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      106: { field: 'avg_power_position', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      107: { field: 'max_power_position', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      108: { field: 'avg_cadence_position', type: 'uint8', scale: null, offset: 0, units: 'rpm' },\n      109: { field: 'max_cadence_position', type: 'uint8', scale: null, offset: 0, units: 'rpm' },\n      110: { field: 'enhanced_avg_speed', type: 'uint32', scale: 1000, offset: 0, units: 'm/s' },\n      111: { field: 'enhanced_max_speed', type: 'uint32', scale: 1000, offset: 0, units: 'm/s' },\n      112: { field: 'enhanced_avg_altitude', type: 'uint32', scale: 5, offset: -500, units: 'm' },\n      113: { field: 'enhanced_min_altitude', type: 'uint32', scale: 5, offset: -500, units: 'm' },\n      114: { field: 'enhanced_max_altitude', type: 'uint32', scale: 5, offset: -500, units: 'm' },\n      115: { field: 'avg_lev_motor_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      116: { field: 'max_lev_motor_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      117: { field: 'lev_battery_consumption', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      118: { field: 'avg_vertical_ratio', type: 'uint16', scale: 100, offset: 0, units: 'percent' },\n      119: { field: 'avg_stance_time_balance', type: 'uint16', scale: 100, offset: 0, units: 'percent' },\n      120: { field: 'avg_step_length', type: 'uint16', scale: 10, offset: 0, units: 'mm' },\n      121: { field: 'avg_vam', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' }\n    },\n    20: {\n      name: 'record',\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: 's' },\n      0: { field: 'position_lat', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      1: { field: 'position_long', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      2: { field: 'altitude', type: 'uint16', scale: 5, offset: -500, units: 'm' },\n      3: { field: 'heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      4: { field: 'cadence', type: 'uint8', scale: null, offset: 0, units: 'rpm' },\n      5: { field: 'distance', type: 'uint32', scale: 100, offset: 0, units: 'm' },\n      6: { field: 'speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      7: { field: 'power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      8: { field: 'compressed_speed_distance', type: 'byte', scale: '100,16', offset: 0, units: 'm/s,m' },\n      9: { field: 'grade', type: 'sint16', scale: 100, offset: 0, units: '%' },\n      10: { field: 'resistance', type: 'uint8', scale: null, offset: 0, units: '' },\n      11: { field: 'time_from_course', type: 'sint32', scale: 1000, offset: 0, units: 's' },\n      12: { field: 'cycle_length', type: 'uint8', scale: 100, offset: 0, units: 'm' },\n      13: { field: 'temperature', type: 'sint8', scale: null, offset: 0, units: 'C' },\n      17: { field: 'speed_1s', type: 'uint8', scale: 16, offset: 0, units: 'm/s' },\n      18: { field: 'cycles', type: 'uint8', scale: null, offset: 0, units: 'cycles' },\n      19: { field: 'total_cycles', type: 'uint32', scale: null, offset: 0, units: 'cycles' },\n      28: { field: 'compressed_accumulated_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      29: { field: 'accumulated_power', type: 'uint32', scale: null, offset: 0, units: 'watts' },\n      30: { field: 'left_right_balance', type: 'left_right_balance', scale: null, offset: 0, units: '' },\n      31: { field: 'gps_accuracy', type: 'uint8', scale: null, offset: 0, units: 'm' },\n      32: { field: 'vertical_speed', type: 'sint16', scale: 1000, offset: 0, units: 'm/s' },\n      33: { field: 'calories', type: 'uint16', scale: null, offset: 0, units: 'kcal' },\n      39: { field: 'vertical_oscillation', type: 'uint16', scale: 10, offset: 0, units: 'mm' },\n      40: { field: 'stance_time_percent', type: 'uint16', scale: 100, offset: 0, units: 'percent' },\n      41: { field: 'stance_time', type: 'uint16', scale: 10, offset: 0, units: 'ms' },\n      42: { field: 'activity_type', type: 'activity_type', scale: null, offset: 0, units: '' },\n      43: { field: 'left_torque_effectiveness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      44: { field: 'right_torque_effectiveness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      45: { field: 'left_pedal_smoothness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      46: { field: 'right_pedal_smoothness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      47: { field: 'combined_pedal_smoothness', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      48: { field: 'time128', type: 'uint8', scale: 128, offset: 0, units: 's' },\n      49: { field: 'stroke_type', type: 'stroke_type', scale: null, offset: 0, units: '' },\n      50: { field: 'zone', type: 'uint8', scale: null, offset: 0, units: '' },\n      51: { field: 'ball_speed', type: 'uint16', scale: 100, offset: 0, units: 'm/s' },\n      52: { field: 'cadence256', type: 'uint16', scale: 256, offset: 0, units: 'rpm' },\n      53: { field: 'fractional_cadence', type: 'uint8', scale: 128, offset: 0, units: 'rpm' },\n      54: { field: 'total_hemoglobin_conc', type: 'uint16', scale: 100, offset: 0, units: 'g/dL' },\n      55: { field: 'total_hemoglobin_conc_min', type: 'uint16', scale: 100, offset: 0, units: 'g/dL' },\n      56: { field: 'total_hemoglobin_conc_max', type: 'uint16', scale: 100, offset: 0, units: 'g/dL' },\n      57: { field: 'saturated_hemoglobin_percent', type: 'uint16', scale: 10, offset: 0, units: '%' },\n      58: { field: 'saturated_hemoglobin_percent_min', type: 'uint16', scale: 10, offset: 0, units: '%' },\n      59: { field: 'saturated_hemoglobin_percent_max', type: 'uint16', scale: 10, offset: 0, units: '%' },\n      62: { field: 'device_index', type: 'device_index', scale: null, offset: 0, units: '' },\n      67: { field: 'left_pco', type: 'sint8', scale: null, offset: 0, units: 'mm' },\n      68: { field: 'right_pco', type: 'sint8', scale: null, offset: 0, units: 'mm' },\n      69: { field: 'left_power_phase', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      70: { field: 'left_power_phase_peak', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      71: { field: 'right_power_phase', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      72: { field: 'right_power_phase_peak', type: 'uint8', scale: '0,7111111', offset: 0, units: 'degrees' },\n      73: { field: 'enhanced_speed', type: 'uint32', scale: 1000, offset: 0, units: 'm/s' },\n      78: { field: 'enhanced_altitude', type: 'uint32', scale: 5, offset: -500, units: 'm' },\n      81: { field: 'battery_soc', type: 'uint8', scale: 2, offset: 0, units: 'percent' },\n      82: { field: 'motor_power', type: 'uint16', scale: null, offset: 0, units: 'watts' },\n      83: { field: 'vertical_ratio', type: 'uint16', scale: 100, offset: 0, units: 'percent' },\n      84: { field: 'stance_time_balance', type: 'uint16', scale: 100, offset: 0, units: 'percent' },\n      85: { field: 'step_length', type: 'uint16', scale: 10, offset: 0, units: 'mm' },\n      91: { field: 'absolute_pressure', type: 'uint32', scale: null, offset: 0, units: 'Pa' },\n      92: { field: 'depth', type: 'uint32', scale: null, offset: 0, units: 'm' },\n      93: { field: 'next_stop_depth', type: 'uint32', scale: null, offset: 0, units: 'm' },\n      94: { field: 'next_stop_time', type: 'uint32', scale: null, offset: 0, units: 's' },\n      95: { field: 'time_to_surface', type: 'uint32', scale: null, offset: 0, units: 's' },\n      96: { field: 'ndl_time', type: 'uint32', scale: null, offset: 0, units: 's' },\n      97: { field: 'cns_load', type: 'uint8', scale: null, offset: 0, units: 'percent' },\n      98: { field: 'n2_load', type: 'uint16', scale: null, offset: 0, units: 'percent' }\n    },\n    21: {\n      name: 'event',\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: '', units: 's' },\n      0: { field: 'event', type: 'event', scale: null, offset: '', units: '' },\n      1: { field: 'event_type', type: 'event_type', scale: null, offset: '', units: '' },\n      2: { field: 'data16', type: 'uint16', scale: null, offset: '', units: '' },\n      3: { field: 'data', type: 'uint32', scale: null, offset: '', units: '' },\n      4: { field: 'event_group', type: 'uint8', scale: null, offset: '', units: '' },\n      7: { field: 'score', type: 'uint16', scale: null, offset: '', units: '' },\n      8: { field: 'opponent_score', type: 'uint16', scale: null, offset: '', units: '' },\n      9: { field: 'front_gear_num', type: 'uint8z', scale: null, offset: '', units: '' },\n      10: { field: 'front_gear', type: 'uint8z', scale: null, offset: '', units: '' },\n      11: { field: 'rear_gear_num', type: 'uint8z', scale: null, offset: '', units: '' },\n      12: { field: 'rear_gear', type: 'uint8z', scale: null, offset: '', units: '' },\n      13: { field: 'device_index', type: 'device_index', scale: null, offset: '', units: '' }\n    },\n    23: {\n      name: 'device_info',\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: 's' },\n      0: { field: 'device_index', type: 'uint8', scale: null, offset: 0, units: '' },\n      1: { field: 'device_type', type: 'antplus_device_type', scale: null, offset: 0, units: '' },\n      2: { field: 'manufacturer', type: 'manufacturer', scale: null, offset: 0, units: '' },\n      3: { field: 'serial_number', type: 'uint32z', scale: null, offset: 0, units: '' },\n      4: { field: 'product', type: 'uint16', scale: null, offset: 0, units: '' },\n      5: { field: 'software_version', type: 'uint16', scale: 100, offset: 0, units: '' },\n      6: { field: 'hardware_version', type: 'uint8', scale: null, offset: 0, units: '' },\n      7: { field: 'cum_operating_time', type: 'uint32', scale: null, offset: 0, units: 's' },\n      10: { field: 'battery_voltage', type: 'uint16', scale: 256, offset: 0, units: 'V' },\n      11: { field: 'battery_status', type: 'battery_status', scale: null, offset: 0, units: '' },\n      18: { field: 'sensor_position', type: 'body_location', scale: null, offset: 0, units: '' },\n      19: { field: 'descriptor', type: 'string', scale: null, offset: 0, units: '' },\n      20: { field: 'ant_transmission_type', type: 'uint8z', scale: null, offset: 0, units: '' },\n      21: { field: 'ant_device_number', type: 'uint16z', scale: null, offset: 0, units: '' },\n      22: { field: 'ant_network', type: 'ant_network', scale: null, offset: 0, units: '' },\n      25: { field: 'source_type', type: 'source_type', scale: null, offset: 0, units: '' },\n      27: { field: 'product_name', type: 'string', scale: null, offset: 0, units: '' }\n    },\n    26: {\n      name: 'workout',\n      4: { field: 'sport', type: 'sport', scale: null, offset: '', units: '' },\n      5: { field: 'capabilities', type: 'workout_capabilities', scale: null, offset: '', units: '' },\n      6: { field: 'num_valid_steps', type: 'uint16', scale: null, offset: '', units: '' },\n      8: { field: 'wkt_name', type: 'string', scale: null, offset: '', units: '' }\n    },\n    27: {\n      name: 'workout_step',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      0: { field: 'wkt_step_name', type: 'string', scale: null, offset: 0, units: '' },\n      1: { field: 'duration_type', type: 'wkt_step_duration', scale: null, offset: 0, units: '' },\n      2: { field: 'duration_value', type: 'uint32', scale: null, offset: 0, units: '' },\n      3: { field: 'target_type', type: 'wkt_step_target', scale: null, offset: 0, units: '' },\n      4: { field: 'target_value', type: 'uint32', scale: null, offset: 0, units: '' },\n      5: { field: 'custom_target_value_low', type: 'uint32', scale: null, offset: 0, units: '' },\n      6: { field: 'custom_target_value_high', type: 'uint32', scale: null, offset: 0, units: '' },\n      7: { field: 'intensity', type: 'intensity', scale: null, offset: 0, units: '' }\n    },\n    30: {\n      name: 'weight_scale',\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: 's' },\n      0: { field: 'weight', type: 'weight', scale: 100, offset: 0, units: 'kg' },\n      1: { field: 'percent_fat', type: 'uint16', scale: 100, offset: 0, units: '%' },\n      2: { field: 'percent_hydration', type: 'uint16', scale: 100, offset: 0, units: '%' },\n      3: { field: 'visceral_fat_mass', type: 'uint16', scale: 100, offset: 0, units: 'kg' },\n      4: { field: 'bone_mass', type: 'uint16', scale: 100, offset: 0, units: 'kg' },\n      5: { field: 'muscle_mass', type: 'uint16', scale: 100, offset: 0, units: 'kg' },\n      7: { field: 'basal_met', type: 'uint16', scale: 4, offset: 0, units: 'kcal/day' },\n      8: { field: 'physique_rating', type: 'uint8', scale: null, offset: 0, units: '' },\n      9: { field: 'active_met', type: 'uint16', scale: 4, offset: 0, units: 'kcal/day' },\n      10: { field: 'metabolic_age', type: 'uint8', scale: null, offset: 0, units: 'years' },\n      11: { field: 'visceral_fat_rating', type: 'uint8', scale: null, offset: 0, units: '' },\n      12: { field: 'user_profile_index', type: 'message_index', scale: null, offset: 0, units: '' }\n    },\n    31: {\n      name: 'course',\n      4: { field: 'sport', type: 'sport', scale: null, offset: '', units: '' },\n      5: { field: 'name', type: 'string', scale: null, offset: '', units: '' },\n      6: { field: 'capabilities', type: 'course_capabilities', scale: null, offset: '', units: '' }\n    },\n    32: {\n      name: 'course_point',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      1: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: '' },\n      2: { field: 'position_lat', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      3: { field: 'position_long', type: 'sint32', scale: null, offset: 0, units: 'semicircles' },\n      4: { field: 'distance', type: 'uint32', scale: 100, offset: 0, units: 'm' },\n      5: { field: 'type', type: 'course_point', scale: null, offset: 0, units: '' },\n      6: { field: 'name', type: 'string', scale: null, offset: 0, units: '' },\n      8: { field: 'favorite', type: 'bool', scale: null, offset: 0, units: '' }\n    },\n    33: {\n      name: 'totals',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: 's' },\n      0: { field: 'timer_time', type: 'uint32', scale: null, offset: 0, units: 's' },\n      1: { field: 'distance', type: 'uint32', scale: null, offset: 0, units: 'm' },\n      2: { field: 'calories', type: 'uint32', scale: null, offset: 0, units: 'kcal' },\n      3: { field: 'sport', type: 'sport', scale: null, offset: 0, units: '' },\n      4: { field: 'elapsed_time', type: 'uint32', scale: null, offset: 0, units: 's' },\n      5: { field: 'sessions', type: 'uint16', scale: null, offset: 0, units: '' },\n      6: { field: 'active_time', type: 'uint32', scale: null, offset: 0, units: 's' },\n      9: { field: 'sport_index', type: 'uint8', scale: null, offset: 0, units: '' }\n    },\n    34: {\n      name: 'activity',\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: '' },\n      0: { field: 'total_timer_time', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      1: { field: 'num_sessions', type: 'uint16', scale: null, offset: 0, units: '' },\n      2: { field: 'type', type: 'activity', scale: null, offset: 0, units: '' },\n      3: { field: 'event', type: 'event', scale: null, offset: 0, units: '' },\n      4: { field: 'event_type', type: 'event_type', scale: null, offset: 0, units: '' },\n      5: { field: 'local_timestamp', type: 'local_date_time', scale: null, offset: 0, units: '' },\n      6: { field: 'event_group', type: 'uint8', scale: null, offset: 0, units: '' }\n    },\n    35: {\n      name: 'software',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: '', units: '' },\n      3: { field: 'version', type: 'uint16', scale: 100, offset: '', units: '' },\n      5: { field: 'part_number', type: 'string', scale: null, offset: '', units: '' }\n    },\n    37: {\n      name: 'file_capabilities',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      0: { field: 'type', type: 'file', scale: null, offset: 0, units: '' },\n      1: { field: 'flags', type: 'file_flags', scale: null, offset: 0, units: '' },\n      2: { field: 'directory', type: 'string', scale: null, offset: 0, units: '' },\n      3: { field: 'max_count', type: 'uint16', scale: null, offset: 0, units: '' },\n      4: { field: 'max_size', type: 'uint32', scale: null, offset: 0, units: 'bytes' }\n    },\n    38: {\n      name: 'mesg_capabilities',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: '', units: '' },\n      0: { field: 'file', type: 'file', scale: null, offset: '', units: '' },\n      1: { field: 'mesg_num', type: 'mesg_num', scale: null, offset: '', units: '' },\n      2: { field: 'count_type', type: 'mesg_count', scale: null, offset: '', units: '' },\n      3: { field: 'count', type: 'uint16', scale: null, offset: '', units: '' }\n    },\n    39: {\n      name: 'field_capabilities',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: '', units: '' },\n      0: { field: 'file', type: 'file', scale: null, offset: '', units: '' },\n      1: { field: 'mesg_num', type: 'mesg_num', scale: null, offset: '', units: '' },\n      2: { field: 'field_num', type: 'uint8', scale: null, offset: '', units: '' },\n      3: { field: 'count', type: 'uint16', scale: null, offset: '', units: '' }\n    },\n    49: {\n      name: 'file_creator',\n      0: { field: 'software_version', type: 'uint16', scale: null, offset: '', units: '' },\n      1: { field: 'hardware_version', type: 'uint8', scale: null, offset: '', units: '' }\n    },\n    51: {\n      name: 'blood_pressure',\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: 's' },\n      0: { field: 'systolic_pressure', type: 'uint16', scale: null, offset: 0, units: 'mmHg' },\n      1: { field: 'diastolic_pressure', type: 'uint16', scale: null, offset: 0, units: 'mmHg' },\n      2: { field: 'mean_arterial_pressure', type: 'uint16', scale: null, offset: 0, units: 'mmHg' },\n      3: { field: 'map_3_sample_mean', type: 'uint16', scale: null, offset: 0, units: 'mmHg' },\n      4: { field: 'map_morning_values', type: 'uint16', scale: null, offset: 0, units: 'mmHg' },\n      5: { field: 'map_evening_values', type: 'uint16', scale: null, offset: 0, units: 'mmHg' },\n      6: { field: 'heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      7: { field: 'heart_rate_type', type: 'hr_type', scale: null, offset: 0, units: '' },\n      8: { field: 'status', type: 'bp_status', scale: null, offset: 0, units: '' },\n      9: { field: 'user_profile_index', type: 'message_index', scale: null, offset: 0, units: '' }\n    },\n    55: {\n      name: 'monitoring',\n      253: { field: 'timestamp', type: 'uint32', scale: null, offset: 0, units: '' },\n      0: { field: 'device_index', type: 'device_index', scale: null, offset: 0, units: '' },\n      1: { field: 'calories', type: 'uint16', scale: null, offset: 0, units: 'kcal' },\n      2: { field: 'distance', type: 'float32', scale: null, offset: 0, units: 'm' },\n      3: { field: 'cycles', type: 'float32', scale: null, offset: 0, units: 'cycles' },\n      4: { field: 'active_time', type: 'float32', scale: null, offset: 0, units: 's' },\n      5: { field: 'activity_type', type: 'activity_type', scale: null, offset: 0, units: '' },\n      6: { field: 'activity_subtype', type: 'activity_subtype', scale: null, offset: 0, units: '' },\n      7: { field: 'activity_level', type: 'activity_level', scale: null, offset: 0, units: 's' },\n      8: { field: 'distance16', type: 'uint16', scale: null, offset: 0, units: 'm' },\n      9: { field: 'cycles16', type: 'uint16', scale: null, offset: 0, units: 'cycles' },\n      10: { field: 'active_time16', type: 'uint16', scale: null, offset: 0, units: '' },\n      11: { field: 'local_timestamp', type: 'uint32', scale: null, offset: 0, units: '' },\n      12: { field: 'temperature', type: 'float32', scale: null, offset: 0, units: 'C' },\n      14: { field: 'temperature_min', type: 'float32', scale: null, offset: 0, units: 'C' },\n      15: { field: 'temperature_max', type: 'float32', scale: null, offset: 0, units: 'C' },\n      16: { field: 'activity_time', type: 'int32', scale: null, offset: 0, units: '' },\n      19: { field: 'active_calories', type: 'uint16', scale: null, offset: 0, units: 'kcal' },\n      24: { field: 'current_activity_type_intensity', type: 'uint8', scale: null, offset: 0, units: '' },\n      25: { field: 'timestamp_min8', type: 'uint8', scale: null, offset: 0, units: '' },\n      26: { field: 'timestamp16', type: 'uint16', scale: null, offset: 0, units: '' },\n      27: { field: 'heart_rate', type: 'uint8', scale: null, offset: 0, units: 'bpm' },\n      28: { field: 'intensity', type: 'uint8', scale: null, offset: 0, units: '' },\n      29: { field: 'duration_min', type: 'uint16', scale: null, offset: 0, units: '' },\n      30: { field: 'duration', type: 'uint32', scale: null, offset: 0, units: '' },\n      31: { field: 'ascent', type: 'float32', scale: null, offset: 0, units: 'm' },\n      32: { field: 'descent', type: 'float32', scale: null, offset: 0, units: 'm' },\n      33: { field: 'moderate_activity_minutes', type: 'uint16', scale: null, offset: 0, units: '' },\n      34: { field: 'vigorous_activity_inutes', type: 'uint16', scale: null, offset: 0, units: '' }\n    },\n    78: {\n      name: 'hrv',\n      0: { field: 'time', type: 'uint16_array', scale: 1000, offset: 0, units: 's' }\n    },\n    101: {\n      name: 'length',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: 's' },\n      0: { field: 'event', type: 'event', scale: null, offset: 0, units: '' },\n      1: { field: 'event_type', type: 'event_type', scale: null, offset: 0, units: '' },\n      2: { field: 'start_time', type: 'date_time', scale: null, offset: 0, units: '' },\n      3: { field: 'total_elapsed_time', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      4: { field: 'total_timer_time', type: 'uint32', scale: 1000, offset: 0, units: 's' },\n      5: { field: 'total_strokes', type: 'uint16', scale: null, offset: 0, units: 'strokes' },\n      6: { field: 'avg_speed', type: 'uint16', scale: 1000, offset: 0, units: 'm/s' },\n      7: { field: 'swim_stroke', type: 'swim_stroke', scale: null, offset: 0, units: 'swim_stroke' },\n      9: { field: 'avg_swimming_cadence', type: 'uint8', scale: null, offset: 0, units: 'strokes/min' },\n      10: { field: 'event_group', type: 'uint8', scale: null, offset: 0, units: '' },\n      11: { field: 'total_calories', type: 'uint16', scale: null, offset: 0, units: 'kcal' },\n      12: { field: 'length_type', type: 'length_type', scale: null, offset: 0, units: 'length_type' },\n      18: { field: 'player_score', type: 'uint16', scale: null, offset: 0, units: '' },\n      19: { field: 'opponent_score', type: 'uint16', scale: null, offset: 0, units: '' },\n      20: { field: 'stroke_count', type: 'uint16', scale: null, offset: 0, units: 'counts' },\n      21: { field: 'zone_count', type: 'uint16', scale: null, offset: 0, units: 'counts' }\n    },\n    103: {\n      name: 'monitoring_info',\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: '' },\n      0: { field: 'local_timestamp', type: 'uint32', scale: null, offset: 0, units: '' },\n      1: { field: 'activity_type', type: 'activity_type', scale: null, offset: 0, units: '' },\n      3: { field: 'cycles_to_distance', type: 'float32', scale: null, offset: 0, units: 'cycles' },\n      4: { field: 'cycles_to_calories', type: 'float32', scale: null, offset: 0, units: 'kcal' },\n      5: { field: 'resting_metabolic_rate', type: 'uint16', scale: null, offset: 0, units: '' }\n    },\n    108: {\n      name: 'o_hr_settings',\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: '' },\n      0: { field: 'enabled', type: 'byte', scale: null, offset: 0, units: '' }\n    },\n    206: {\n      name: 'field_description',\n      0: { field: 'developer_data_index', type: 'uint8', scale: null, offset: 0, units: '' },\n      1: { field: 'field_definition_number', type: 'uint8', scale: null, offset: 0, units: '' },\n      2: { field: 'fit_base_type_id', type: 'uint8', scale: null, offset: 0, units: '' },\n      3: { field: 'field_name', type: 'string', scale: null, offset: 0, units: '' },\n      //4: { field: 'array', type: 'uint8', scale: null, offset: 0, units: '' },\n      //5: { field: 'components', type: 'string', scale: null, offset: 0, units: '' },\n      6: { field: 'scale', type: 'uint8', scale: null, offset: 0, units: '' },\n      7: { field: 'offset', type: 'sint8', scale: null, offset: 0, units: '' },\n      8: { field: 'units', type: 'string', scale: null, offset: 0, units: '' },\n      // 9: { field: 'bits', type: 'string', scale: null, offset: 0, units: '' },\n      // 10: { field: 'accumulate', type: 'string', scale: null, offset: 0, units: '' },\n      //13: { field: 'fit_base_unit_id', type: 'uint16', scale: null, offset: 0, units: '' },\n      // 14: { field: 'native_mesg_num', type: 'mesg_num', scale: null, offset: 0, units: '' },\n      15: { field: 'native_field_num', type: 'uint8', scale: null, offset: 0, units: '' }\n    },\n    227: {\n      name: 'stress_level',\n      0: { field: 'stress_level_value', type: 'uint16', scale: null, offset: 0, units: '' },\n      1: { field: 'stress_level_time', type: 'date_time', scale: null, offset: 0, units: 's' },\n      2: { field: 'field_two', type: 'sint8', scale: null, offset: 0, units: '' },\n      3: { field: 'body_battery', type: 'uint8', scale: null, offset: 0, units: '' },\n      4: { field: 'field_four', type: 'uint8', scale: null, offset: 0, units: '' }\n    },\n    207: {\n      name: 'developer_data_id',\n      0: { field: 'developer_id', type: 'uint8', scale: null, offset: 0, units: '' },\n      1: { field: 'application_id', type: 'byte_array', scale: null, offset: 0, units: '' },\n      2: { field: 'manufacturer_id', type: 'manufacturer', scale: null, offset: 0, units: '' },\n      3: { field: 'developer_data_index', type: 'uint8', scale: null, offset: 0, units: '' },\n      4: { field: 'application_version', type: 'uint8', scale: null, offset: 0, units: '' }\n    },\n    258: {\n      name: 'dive_settings',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: '', units: '' },\n      0: { field: 'name', type: 'string', scale: null, offset: 0, units: '' },\n      1: { field: 'model', type: 'tissue_model_type', scale: null, offset: 0, units: '' },\n      2: { field: 'gf_low', type: 'uint8', scale: null, offset: 0, units: 'percent' },\n      3: { field: 'gf_high', type: 'uint8', scale: null, offset: 0, units: 'percent' },\n      4: { field: 'water_type', type: 'water_type', scale: null, offset: 0, units: '' },\n      5: { field: 'water_density', type: 'float32', scale: null, offset: 0, units: 'kg/m^3' },\n      6: { field: 'po2_warn', type: 'uint8', scale: null, offset: 0, units: 'percent' },\n      7: { field: 'po2_critical', type: 'uint8', scale: null, offset: 0, units: 'percent' },\n      8: { field: 'po2_deco', type: 'uint8', scale: null, offset: 0, units: 'percent' },\n      9: { field: 'safety_stop_enabled', type: 'bool', scale: null, offset: 0, units: '' },\n      10: { field: 'bottom_depth', type: 'float32', scale: null, offset: 0, units: '' },\n      11: { field: 'bottom_time', type: 'uint32', scale: null, offset: 0, units: '' },\n      12: { field: 'apnea_countdown_enabled', type: 'bool', scale: null, offset: 0, units: '' },\n      13: { field: 'apnea_countdown_time', type: 'uint32', scale: null, offset: 0, units: '' },\n      14: { field: 'backlight_mode', type: 'dive_backlight_mode', scale: null, offset: 0, units: '' },\n      15: { field: 'backlight_brightness', type: 'uint8', scale: null, offset: 0, units: '' },\n      16: { field: 'backlight_timeout', type: 'backlight_timeout', scale: null, offset: 0, units: '' },\n      17: { field: 'repeat_dive_time', type: 'uint16', scale: null, offset: 0, units: 's' },\n      18: { field: 'safety_stop_time', type: 'uint16', scale: null, offset: 0, units: 's' },\n      19: { field: 'heart_rate_source_type', type: 'source_type', scale: null, offset: 0, units: '' },\n      20: { field: 'heart_rate_source', type: 'uint8', scale: null, offset: 0, units: '' }\n    },\n    259: {\n      name: 'dive_gas',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: '', units: '' },\n      0: { field: 'helium_content', type: 'uint8', scale: null, offset: '', units: 'percent' },\n      1: { field: 'oxygen_content', type: 'uint8', scale: null, offset: '', units: 'percent' },\n      2: { field: 'status', type: 'dive_gas_status', scale: null, offset: '', units: '' }\n    },\n    262: {\n      name: 'dive_alarm',\n      254: { field: 'message_index', type: 'message_index', scale: null, offset: '', units: '' },\n      0: { field: 'depth', type: 'uint32', scale: null, offset: '', units: 'm' },\n      1: { field: 'time', type: 'sint32', scale: null, offset: '', units: 's' },\n      2: { field: 'enabled', type: 'bool', scale: null, offset: '', units: '' },\n      3: { field: 'alarm_type', type: 'dive_alarm_type', scale: null, offset: '', units: '' },\n      4: { field: 'sound', type: 'tone', scale: null, offset: '', units: '' },\n      5: { field: 'dive_types', type: 'sub_sport', scale: null, offset: '', units: '' }\n    },\n    268: {\n      name: 'dive_summary',\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: 's' },\n      0: { field: 'reference_mesg', type: 'mesg_num', scale: null, offset: 0, units: '' },\n      1: { field: 'reference_index', type: 'message_index', scale: null, offset: 0, units: '' },\n      2: { field: 'avg_depth', type: 'uint32', scale: null, offset: 0, units: 'm' },\n      3: { field: 'max_depth', type: 'uint32', scale: null, offset: 0, units: 'm' },\n      4: { field: 'surface_interval', type: 'uint32', scale: null, offset: 0, units: 's' },\n      5: { field: 'start_cns', type: 'uint8', scale: null, offset: 0, units: 'percent' },\n      6: { field: 'end_cns', type: 'uint8', scale: null, offset: 0, units: 'percent' },\n      7: { field: 'start_n2', type: 'uint16', scale: null, offset: 0, units: 'percent' },\n      8: { field: 'end_n2', type: 'uint16', scale: null, offset: 0, units: 'percent' },\n      9: { field: 'o2_toxicity', type: 'uint16', scale: null, offset: 0, units: 'OTUs' },\n      10: { field: 'dive_number', type: 'uint32', scale: null, offset: 0, units: '' },\n      11: { field: 'bottom_time', type: 'uint32', scale: null, offset: 0, units: 's' }\n    },\n    319: {\n      name: 'tank_update',\n      253: { field: 'timestamp', type: 'date_time', scale: null, offset: 0, units: 's' },\n      0: { field: 'sensor', type: 'uint32', scale: null, offset: 0, units: '' },\n      1: { field: 'pressure', type: 'uint16', scale: null, offset: 0, units: 'cbar' }\n    },\n    323: {\n      name: 'tank_summary',\n      0: { field: 'sensor', type: 'uint32', scale: null, offset: 0, units: '' },\n      1: { field: 'start_pressure', type: 'uint16', scale: null, offset: 0, units: 'cbar' },\n      2: { field: 'end_pressure', type: 'uint16', scale: null, offset: 0, units: 'cbar' },\n      3: { field: 'volume_used', type: 'uint16', scale: null, offset: 0, units: 'cbar' }\n    }\n  },\n  types: {\n    file: {\n      1: 'device',\n      2: 'settings',\n      3: 'sport',\n      4: 'activity',\n      5: 'workout',\n      6: 'course',\n      7: 'schedules',\n      9: 'weight',\n      10: 'totals',\n      11: 'goals',\n      14: 'blood_pressure',\n      15: 'monitoring_a',\n      20: 'activity_summary',\n      28: 'monitoring_daily',\n      32: 'monitoring_b',\n      34: 'segment',\n      35: 'segment_list',\n      40: 'exd_configuration',\n      247: 'mfg_range_min',\n      254: 'mfg_range_max'\n    },\n    mesg_num: {\n      0: 'file_id',\n      1: 'capabilities',\n      2: 'device_settings',\n      3: 'user_profile',\n      4: 'hrm_profile',\n      5: 'sdm_profile',\n      6: 'bike_profile',\n      7: 'zones_target',\n      8: 'hr_zone',\n      9: 'power_zone',\n      10: 'met_zone',\n      12: 'sport',\n      15: 'goal',\n      18: 'session',\n      19: 'lap',\n      20: 'record',\n      21: 'event',\n      23: 'device_info',\n      26: 'workout',\n      27: 'workout_step',\n      28: 'schedule',\n      30: 'weight_scale',\n      31: 'course',\n      32: 'course_point',\n      33: 'totals',\n      34: 'activity',\n      35: 'software',\n      37: 'file_capabilities',\n      38: 'mesg_capabilities',\n      39: 'field_capabilities',\n      49: 'file_creator',\n      51: 'blood_pressure',\n      53: 'speed_zone',\n      55: 'monitoring',\n      72: 'training_file',\n      78: 'hrv',\n      80: 'ant_rx',\n      81: 'ant_tx',\n      82: 'ant_channel_id',\n      101: 'length',\n      103: 'monitoring_info',\n      105: 'pad',\n      106: 'slave_device',\n      127: 'connectivity',\n      128: 'weather_conditions',\n      129: 'weather_alert',\n      131: 'cadence_zone',\n      132: 'hr',\n      142: 'segment_lap',\n      145: 'memo_glob',\n      148: 'segment_id',\n      149: 'segment_leaderboard_entry',\n      150: 'segment_point',\n      151: 'segment_file',\n      158: 'workout_session',\n      159: 'watchface_settings',\n      160: 'gps_metadata',\n      161: 'camera_event',\n      162: 'timestamp_correlation',\n      164: 'gyroscope_data',\n      165: 'accelerometer_data',\n      167: 'three_d_sensor_calibration',\n      169: 'video_frame',\n      174: 'obdii_data',\n      177: 'nmea_sentence',\n      178: 'aviation_attitude',\n      184: 'video',\n      185: 'video_title',\n      186: 'video_description',\n      187: 'video_clip',\n      200: 'exd_screen_configuration',\n      201: 'exd_data_field_configuration',\n      202: 'exd_data_concept_configuration',\n      206: 'field_description',\n      207: 'developer_data_id',\n      208: 'magnetometer_data',\n      209: 'barometer_data',\n      210: 'one_d_sensor_calibration',\n      225: 'set',\n      227: 'stress_level',\n      258: 'dive_settings',\n      259: 'dive_gas',\n      262: 'dive_alarm',\n      264: 'exercise_title',\n      268: 'dive_summary',\n      285: 'jump',\n      317: 'climb_pro',\n      319: 'tank_pressure',\n      323: 'tank_summary',\n      65280: 'mfg_range_min',\n      65534: 'mfg_range_max'\n    },\n    checksum: {\n      0: 'clear',\n      1: 'ok'\n    },\n    file_flags: {\n      0: 0,\n      2: 'read',\n      4: 'write',\n      8: 'erase'\n    },\n    mesg_count: {\n      0: 'num_per_file',\n      1: 'max_per_file',\n      2: 'max_per_file_type'\n    },\n    date_time: {\n      0: 0,\n      268435456: 'min'\n    },\n    local_date_time: {\n      0: 0,\n      268435456: 'min'\n    },\n    message_index: {\n      0: 0,\n      4095: 'mask',\n      28672: 'reserved',\n      32768: 'selected'\n    },\n    gender: {\n      0: 'female',\n      1: 'male'\n    },\n    language: {\n      0: 'english',\n      1: 'french',\n      2: 'italian',\n      3: 'german',\n      4: 'spanish',\n      5: 'croatian',\n      6: 'czech',\n      7: 'danish',\n      8: 'dutch',\n      9: 'finnish',\n      10: 'greek',\n      11: 'hungarian',\n      12: 'norwegian',\n      13: 'polish',\n      14: 'portuguese',\n      15: 'slovakian',\n      16: 'slovenian',\n      17: 'swedish',\n      18: 'russian',\n      19: 'turkish',\n      20: 'latvian',\n      21: 'ukrainian',\n      22: 'arabic',\n      23: 'farsi',\n      24: 'bulgarian',\n      25: 'romanian',\n      26: 'chinese',\n      27: 'japanese',\n      28: 'korean',\n      29: 'taiwanese',\n      30: 'thai',\n      31: 'hebrew',\n      32: 'brazilian_portuguese',\n      33: 'indonesian',\n      34: 'malaysian',\n      35: 'vietnamese',\n      36: 'burmese',\n      37: 'mongolian',\n      254: 'custom'\n    },\n    language_bits_0: {\n      0: 0,\n      1: 'english',\n      2: 'french',\n      4: 'italian',\n      8: 'german',\n      16: 'spanish',\n      32: 'croatian',\n      64: 'czech',\n      128: 'danish'\n    },\n    language_bits_1: {\n      0: 0,\n      1: 'dutch',\n      2: 'finnish',\n      4: 'greek',\n      8: 'hungarian',\n      16: 'norwegian',\n      32: 'polish',\n      64: 'portuguese',\n      128: 'slovakian'\n    },\n    language_bits_2: {\n      0: 0,\n      1: 'slovenian',\n      2: 'swedish',\n      4: 'russian',\n      8: 'turkish',\n      16: 'latvian',\n      32: 'ukrainian',\n      64: 'arabic',\n      128: 'farsi'\n    },\n    language_bits_3: {\n      0: 0,\n      1: 'bulgarian',\n      2: 'romanian',\n      4: 'chinese',\n      8: 'japanese',\n      16: 'korean',\n      32: 'taiwanese',\n      64: 'thai',\n      128: 'hebrew'\n    },\n    language_bits_4: {\n      0: 0,\n      1: 'brazilian_portuguese',\n      2: 'indonesian',\n      4: 'malaysian',\n      8: 'vietnamese',\n      16: 'burmese',\n      32: 'mongolian'\n    },\n    time_zone: {\n      0: 'almaty',\n      1: 'bangkok',\n      2: 'bombay',\n      3: 'brasilia',\n      4: 'cairo',\n      5: 'cape_verde_is',\n      6: 'darwin',\n      7: 'eniwetok',\n      8: 'fiji',\n      9: 'hong_kong',\n      10: 'islamabad',\n      11: 'kabul',\n      12: 'magadan',\n      13: 'mid_atlantic',\n      14: 'moscow',\n      15: 'muscat',\n      16: 'newfoundland',\n      17: 'samoa',\n      18: 'sydney',\n      19: 'tehran',\n      20: 'tokyo',\n      21: 'us_alaska',\n      22: 'us_atlantic',\n      23: 'us_central',\n      24: 'us_eastern',\n      25: 'us_hawaii',\n      26: 'us_mountain',\n      27: 'us_pacific',\n      28: 'other',\n      29: 'auckland',\n      30: 'kathmandu',\n      31: 'europe_western_wet',\n      32: 'europe_central_cet',\n      33: 'europe_eastern_eet',\n      34: 'jakarta',\n      35: 'perth',\n      36: 'adelaide',\n      37: 'brisbane',\n      38: 'tasmania',\n      39: 'iceland',\n      40: 'amsterdam',\n      41: 'athens',\n      42: 'barcelona',\n      43: 'berlin',\n      44: 'brussels',\n      45: 'budapest',\n      46: 'copenhagen',\n      47: 'dublin',\n      48: 'helsinki',\n      49: 'lisbon',\n      50: 'london',\n      51: 'madrid',\n      52: 'munich',\n      53: 'oslo',\n      54: 'paris',\n      55: 'prague',\n      56: 'reykjavik',\n      57: 'rome',\n      58: 'stockholm',\n      59: 'vienna',\n      60: 'warsaw',\n      61: 'zurich',\n      62: 'quebec',\n      63: 'ontario',\n      64: 'manitoba',\n      65: 'saskatchewan',\n      66: 'alberta',\n      67: 'british_columbia',\n      68: 'boise',\n      69: 'boston',\n      70: 'chicago',\n      71: 'dallas',\n      72: 'denver',\n      73: 'kansas_city',\n      74: 'las_vegas',\n      75: 'los_angeles',\n      76: 'miami',\n      77: 'minneapolis',\n      78: 'new_york',\n      79: 'new_orleans',\n      80: 'phoenix',\n      81: 'santa_fe',\n      82: 'seattle',\n      83: 'washington_dc',\n      84: 'us_arizona',\n      85: 'chita',\n      86: 'ekaterinburg',\n      87: 'irkutsk',\n      88: 'kaliningrad',\n      89: 'krasnoyarsk',\n      90: 'novosibirsk',\n      91: 'petropavlovsk_kamchatskiy',\n      92: 'samara',\n      93: 'vladivostok',\n      94: 'mexico_central',\n      95: 'mexico_mountain',\n      96: 'mexico_pacific',\n      97: 'cape_town',\n      98: 'winkhoek',\n      99: 'lagos',\n      100: 'riyahd',\n      101: 'venezuela',\n      102: 'australia_lh',\n      103: 'santiago',\n      253: 'manual',\n      254: 'automatic'\n    },\n    display_measure: {\n      0: 'metric',\n      1: 'statute',\n      2: 'nautical'\n    },\n    display_heart: {\n      0: 'bpm',\n      1: 'max',\n      2: 'reserve'\n    },\n    display_power: {\n      0: 'watts',\n      1: 'percent_ftp'\n    },\n    display_position: {\n      0: 'degree',\n      1: 'degree_minute',\n      2: 'degree_minute_second',\n      3: 'austrian_grid',\n      4: 'british_grid',\n      5: 'dutch_grid',\n      6: 'hungarian_grid',\n      7: 'finnish_grid',\n      8: 'german_grid',\n      9: 'icelandic_grid',\n      10: 'indonesian_equatorial',\n      11: 'indonesian_irian',\n      12: 'indonesian_southern',\n      13: 'india_zone_0',\n      14: 'india_zone_IA',\n      15: 'india_zone_IB',\n      16: 'india_zone_IIA',\n      17: 'india_zone_IIB',\n      18: 'india_zone_IIIA',\n      19: 'india_zone_IIIB',\n      20: 'india_zone_IVA',\n      21: 'india_zone_IVB',\n      22: 'irish_transverse',\n      23: 'irish_grid',\n      24: 'loran',\n      25: 'maidenhead_grid',\n      26: 'mgrs_grid',\n      27: 'new_zealand_grid',\n      28: 'new_zealand_transverse',\n      29: 'qatar_grid',\n      30: 'modified_swedish_grid',\n      31: 'swedish_grid',\n      32: 'south_african_grid',\n      33: 'swiss_grid',\n      34: 'taiwan_grid',\n      35: 'united_states_grid',\n      36: 'utm_ups_grid',\n      37: 'west_malayan',\n      38: 'borneo_rso',\n      39: 'estonian_grid',\n      40: 'latvian_grid',\n      41: 'swedish_ref_99_grid'\n    },\n    'switch': {\n      0: 'off',\n      1: 'on',\n      2: 'auto'\n    },\n    sport: {\n      0: 'generic',\n      1: 'running',\n      2: 'cycling',\n      3: 'transition',\n      4: 'fitness_equipment',\n      5: 'swimming',\n      6: 'basketball',\n      7: 'soccer',\n      8: 'tennis',\n      9: 'american_football',\n      10: 'training',\n      11: 'walking',\n      12: 'cross_country_skiing',\n      13: 'alpine_skiing',\n      14: 'snowboarding',\n      15: 'rowing',\n      16: 'mountaineering',\n      17: 'hiking',\n      18: 'multisport',\n      19: 'paddling',\n      20: 'flying',\n      21: 'e_biking',\n      22: 'motorcycling',\n      23: 'boating',\n      24: 'driving',\n      25: 'golf',\n      26: 'hang_gliding',\n      27: 'horseback_riding',\n      28: 'hunting',\n      29: 'fishing',\n      30: 'inline_skating',\n      31: 'rock_climbing',\n      32: 'sailing',\n      33: 'ice_skating',\n      34: 'sky_diving',\n      35: 'snowshoeing',\n      36: 'snowmobiling',\n      37: 'stand_up_paddleboarding',\n      38: 'surfing',\n      39: 'wakeboarding',\n      40: 'water_skiing',\n      41: 'kayaking',\n      42: 'rafting',\n      43: 'windsurfing',\n      44: 'kitesurfing',\n      45: 'tactical',\n      46: 'jumpmaster',\n      47: 'boxing',\n      48: 'floor_climbing',\n      53: 'diving',\n      254: 'all'\n    },\n    sport_bits_0: {\n      0: 0,\n      1: 'generic',\n      2: 'running',\n      4: 'cycling',\n      8: 'transition',\n      16: 'fitness_equipment',\n      32: 'swimming',\n      64: 'basketball',\n      128: 'soccer'\n    },\n    sport_bits_1: {\n      0: 0,\n      1: 'tennis',\n      2: 'american_football',\n      4: 'training',\n      8: 'walking',\n      16: 'cross_country_skiing',\n      32: 'alpine_skiing',\n      64: 'snowboarding',\n      128: 'rowing'\n    },\n    sport_bits_2: {\n      0: 0,\n      1: 'mountaineering',\n      2: 'hiking',\n      4: 'multisport',\n      8: 'paddling',\n      16: 'flying',\n      32: 'e_biking',\n      64: 'motorcycling',\n      128: 'boating'\n    },\n    sport_bits_3: {\n      0: 0,\n      1: 'driving',\n      2: 'golf',\n      4: 'hang_gliding',\n      8: 'horseback_riding',\n      16: 'hunting',\n      32: 'fishing',\n      64: 'inline_skating',\n      128: 'rock_climbing'\n    },\n    sport_bits_4: {\n      0: 0,\n      1: 'sailing',\n      2: 'ice_skating',\n      4: 'sky_diving',\n      8: 'snowshoeing',\n      16: 'snowmobiling',\n      32: 'stand_up_paddleboarding',\n      64: 'surfing',\n      128: 'wakeboarding'\n    },\n    sport_bits_5: {\n      0: 0,\n      1: 'water_skiing',\n      2: 'kayaking',\n      4: 'rafting',\n      8: 'windsurfing',\n      16: 'kitesurfing',\n      32: 'tactical',\n      64: 'jumpmaster',\n      128: 'boxing'\n    },\n    sport_bits_6: {\n      0: 0,\n      1: 'floor_climbing'\n    },\n    sub_sport: {\n      0: 'generic',\n      1: 'treadmill',\n      2: 'street',\n      3: 'trail',\n      4: 'track',\n      5: 'spin',\n      6: 'indoor_cycling',\n      7: 'road',\n      8: 'mountain',\n      9: 'downhill',\n      10: 'recumbent',\n      11: 'cyclocross',\n      12: 'hand_cycling',\n      13: 'track_cycling',\n      14: 'indoor_rowing',\n      15: 'elliptical',\n      16: 'stair_climbing',\n      17: 'lap_swimming',\n      18: 'open_water',\n      19: 'flexibility_training',\n      20: 'strength_training',\n      21: 'warm_up',\n      22: 'match',\n      23: 'exercise',\n      24: 'challenge',\n      25: 'indoor_skiing',\n      26: 'cardio_training',\n      27: 'indoor_walking',\n      28: 'e_bike_fitness',\n      29: 'bmx',\n      30: 'casual_walking',\n      31: 'speed_walking',\n      32: 'bike_to_run_transition',\n      33: 'run_to_bike_transition',\n      34: 'swim_to_bike_transition',\n      35: 'atv',\n      36: 'motocross',\n      37: 'backcountry',\n      38: 'resort',\n      39: 'rc_drone',\n      40: 'wingsuit',\n      41: 'whitewater',\n      42: 'skate_skiing',\n      43: 'yoga',\n      44: 'pilates',\n      45: 'indoor_running',\n      46: 'gravel_cycling',\n      47: 'e_bike_mountain',\n      48: 'commuting',\n      49: 'mixed_surface',\n      50: 'navigate',\n      51: 'track_me',\n      52: 'map',\n      53: 'single_gas_diving',\n      54: 'multi_gas_diving',\n      55: 'gauge_diving',\n      56: 'apnea_diving',\n      57: 'apnea_hunting',\n      58: 'virtual_activity',\n      59: 'obstacle',\n      254: 'all'\n    },\n    sport_event: {\n      0: 'uncategorized',\n      1: 'geocaching',\n      2: 'fitness',\n      3: 'recreation',\n      4: 'race',\n      5: 'special_event',\n      6: 'training',\n      7: 'transportation',\n      8: 'touring'\n    },\n    activity: {\n      0: 'manual',\n      1: 'auto_multi_sport'\n    },\n    intensity: {\n      0: 'active',\n      1: 'rest',\n      2: 'warmup',\n      3: 'cooldown',\n      4: 'recovery',\n      5: 'interval',\n      6: 'other'\n    },\n    session_trigger: {\n      0: 'activity_end',\n      1: 'manual',\n      2: 'auto_multi_sport',\n      3: 'fitness_equipment'\n    },\n    autolap_trigger: {\n      0: 'time',\n      1: 'distance',\n      2: 'position_start',\n      3: 'position_lap',\n      4: 'position_waypoint',\n      5: 'position_marked',\n      6: 'off'\n    },\n    lap_trigger: {\n      0: 'manual',\n      1: 'time',\n      2: 'distance',\n      3: 'position_start',\n      4: 'position_lap',\n      5: 'position_waypoint',\n      6: 'position_marked',\n      7: 'session_end',\n      8: 'fitness_equipment'\n    },\n    time_mode: {\n      0: 'hour12',\n      1: 'hour24',\n      2: 'military',\n      3: 'hour_12_with_seconds',\n      4: 'hour_24_with_seconds',\n      5: 'utc'\n    },\n    backlight_mode: {\n      0: 'off',\n      1: 'manual',\n      2: 'key_and_messages',\n      3: 'auto_brightness',\n      4: 'smart_notifications',\n      5: 'key_and_messages_night',\n      6: 'key_and_messages_and_smart_notifications'\n    },\n    date_mode: {\n      0: 'day_month',\n      1: 'month_day'\n    },\n    backlight_timeout: {\n      0: 'infinite'\n    },\n    event: {\n      0: 'timer',\n      3: 'workout',\n      4: 'workout_step',\n      5: 'power_down',\n      6: 'power_up',\n      7: 'off_course',\n      8: 'session',\n      9: 'lap',\n      10: 'course_point',\n      11: 'battery',\n      12: 'virtual_partner_pace',\n      13: 'hr_high_alert',\n      14: 'hr_low_alert',\n      15: 'speed_high_alert',\n      16: 'speed_low_alert',\n      17: 'cad_high_alert',\n      18: 'cad_low_alert',\n      19: 'power_high_alert',\n      20: 'power_low_alert',\n      21: 'recovery_hr',\n      22: 'battery_low',\n      23: 'time_duration_alert',\n      24: 'distance_duration_alert',\n      25: 'calorie_duration_alert',\n      26: 'activity',\n      27: 'fitness_equipment',\n      28: 'length',\n      32: 'user_marker',\n      33: 'sport_point',\n      36: 'calibration',\n      42: 'front_gear_change',\n      43: 'rear_gear_change',\n      44: 'rider_position_change',\n      45: 'elev_high_alert',\n      46: 'elev_low_alert',\n      47: 'comm_timeout'\n    },\n    event_type: {\n      0: 'start',\n      1: 'stop',\n      2: 'consecutive_depreciated',\n      3: 'marker',\n      4: 'stop_all',\n      5: 'begin_depreciated',\n      6: 'end_depreciated',\n      7: 'end_all_depreciated',\n      8: 'stop_disable',\n      9: 'stop_disable_all'\n    },\n    timer_trigger: {\n      0: 'manual',\n      1: 'auto',\n      2: 'fitness_equipment'\n    },\n    fitness_equipment_state: {\n      0: 'ready',\n      1: 'in_use',\n      2: 'paused',\n      3: 'unknown'\n    },\n    tone: {\n      0: 'off',\n      1: 'tone',\n      2: 'vibrate',\n      3: 'tone_and_vibrate'\n    },\n    autoscroll: {\n      0: 'none',\n      1: 'slow',\n      2: 'medium',\n      3: 'fast'\n    },\n    activity_class: {\n      0: 0,\n      100: 'level_max',\n      127: 'level',\n      128: 'athlete'\n    },\n    hr_zone_calc: {\n      0: 'custom',\n      1: 'percent_max_hr',\n      2: 'percent_hrr'\n    },\n    pwr_zone_calc: {\n      0: 'custom',\n      1: 'percent_ftp'\n    },\n    wkt_step_duration: {\n      0: 'time',\n      1: 'distance',\n      2: 'hr_less_than',\n      3: 'hr_greater_than',\n      4: 'calories',\n      5: 'open',\n      6: 'repeat_until_steps_cmplt',\n      7: 'repeat_until_time',\n      8: 'repeat_until_distance',\n      9: 'repeat_until_calories',\n      10: 'repeat_until_hr_less_than',\n      11: 'repeat_until_hr_greater_than',\n      12: 'repeat_until_power_less_than',\n      13: 'repeat_until_power_greater_than',\n      14: 'power_less_than',\n      15: 'power_greater_than',\n      16: 'training_peaks_tss',\n      17: 'repeat_until_power_last_lap_less_than',\n      18: 'repeat_until_max_power_last_lap_less_than',\n      19: 'power_3s_less_than',\n      20: 'power_10s_less_than',\n      21: 'power_30s_less_than',\n      22: 'power_3s_greater_than',\n      23: 'power_10s_greater_than',\n      24: 'power_30s_greater_than',\n      25: 'power_lap_less_than',\n      26: 'power_lap_greater_than',\n      27: 'repeat_until_training_peaks_tss',\n      28: 'repetition_time',\n      29: 'reps'\n    },\n    wkt_step_target: {\n      0: 'speed',\n      1: 'heart_rate',\n      2: 'open',\n      3: 'cadence',\n      4: 'power',\n      5: 'grade',\n      6: 'resistance',\n      7: 'power_3s',\n      8: 'power_10s',\n      9: 'power_30s',\n      10: 'power_lap',\n      11: 'swim_stroke',\n      12: 'speed_lap',\n      13: 'heart_rate_lap'\n    },\n    goal: {\n      0: 'time',\n      1: 'distance',\n      2: 'calories',\n      3: 'frequency',\n      4: 'steps',\n      5: 'ascent',\n      6: 'active_minutes'\n    },\n    goal_recurrence: {\n      0: 'off',\n      1: 'daily',\n      2: 'weekly',\n      3: 'monthly',\n      4: 'yearly',\n      5: 'custom'\n    },\n    goal_source: {\n      0: 'auto',\n      1: 'community',\n      2: 'user'\n    },\n    schedule: {\n      0: 'workout',\n      1: 'course'\n    },\n    course_point: {\n      0: 'generic',\n      1: 'summit',\n      2: 'valley',\n      3: 'water',\n      4: 'food',\n      5: 'danger',\n      6: 'left',\n      7: 'right',\n      8: 'straight',\n      9: 'first_aid',\n      10: 'fourth_category',\n      11: 'third_category',\n      12: 'second_category',\n      13: 'first_category',\n      14: 'hors_category',\n      15: 'sprint',\n      16: 'left_fork',\n      17: 'right_fork',\n      18: 'middle_fork',\n      19: 'slight_left',\n      20: 'sharp_left',\n      21: 'slight_right',\n      22: 'sharp_right',\n      23: 'u_turn',\n      24: 'segment_start',\n      25: 'segment_end'\n    },\n    manufacturer: {\n      0: 0,\n      1: 'garmin',\n      2: 'garmin_fr405_antfs',\n      3: 'zephyr',\n      4: 'dayton',\n      5: 'idt',\n      6: 'srm',\n      7: 'quarq',\n      8: 'ibike',\n      9: 'saris',\n      10: 'spark_hk',\n      11: 'tanita',\n      12: 'echowell',\n      13: 'dynastream_oem',\n      14: 'nautilus',\n      15: 'dynastream',\n      16: 'timex',\n      17: 'metrigear',\n      18: 'xelic',\n      19: 'beurer',\n      20: 'cardiosport',\n      21: 'a_and_d',\n      22: 'hmm',\n      23: 'suunto',\n      24: 'thita_elektronik',\n      25: 'gpulse',\n      26: 'clean_mobile',\n      27: 'pedal_brain',\n      28: 'peaksware',\n      29: 'saxonar',\n      30: 'lemond_fitness',\n      31: 'dexcom',\n      32: 'wahoo_fitness',\n      33: 'octane_fitness',\n      34: 'archinoetics',\n      35: 'the_hurt_box',\n      36: 'citizen_systems',\n      37: 'magellan',\n      38: 'osynce',\n      39: 'holux',\n      40: 'concept2',\n      42: 'one_giant_leap',\n      43: 'ace_sensor',\n      44: 'brim_brothers',\n      45: 'xplova',\n      46: 'perception_digital',\n      47: 'bf1systems',\n      48: 'pioneer',\n      49: 'spantec',\n      50: 'metalogics',\n      51: '4iiiis',\n      52: 'seiko_epson',\n      53: 'seiko_epson_oem',\n      54: 'ifor_powell',\n      55: 'maxwell_guider',\n      56: 'star_trac',\n      57: 'breakaway',\n      58: 'alatech_technology_ltd',\n      59: 'mio_technology_europe',\n      60: 'rotor',\n      61: 'geonaute',\n      62: 'id_bike',\n      63: 'specialized',\n      64: 'wtek',\n      65: 'physical_enterprises',\n      66: 'north_pole_engineering',\n      67: 'bkool',\n      68: 'cateye',\n      69: 'stages_cycling',\n      70: 'sigmasport',\n      71: 'tomtom',\n      72: 'peripedal',\n      73: 'wattbike',\n      76: 'moxy',\n      77: 'ciclosport',\n      78: 'powerbahn',\n      79: 'acorn_projects_aps',\n      80: 'lifebeam',\n      81: 'bontrager',\n      82: 'wellgo',\n      83: 'scosche',\n      84: 'magura',\n      85: 'woodway',\n      86: 'elite',\n      87: 'nielsen_kellerman',\n      88: 'dk_city',\n      89: 'tacx',\n      90: 'direction_technology',\n      91: 'magtonic',\n      92: '1partcarbon',\n      93: 'inside_ride_technologies',\n      94: 'sound_of_motion',\n      95: 'stryd',\n      96: 'icg',\n      97: 'mipulse',\n      98: 'bsx_athletics',\n      99: 'look',\n      100: 'campagnolo_srl',\n      101: 'body_bike_smart',\n      102: 'praxisworks',\n      103: 'limits_technology',\n      104: 'topaction_technology',\n      105: 'cosinuss',\n      106: 'fitcare',\n      107: 'magene',\n      108: 'giant_manufacturing_co',\n      109: 'tigrasport',\n      110: 'salutron',\n      111: 'technogym',\n      112: 'bryton_sensors',\n      113: 'latitude_limited',\n      114: 'soaring_technology',\n      115: 'igpsport',\n      116: 'thinkrider',\n      117: 'gopher_sport',\n      118: 'waterrower',\n      119: 'orangetheory',\n      120: 'inpeak',\n      121: 'kinetic',\n      122: 'johnson_health_tech',\n      123: 'polar_electro',\n      124: 'seesense',\n      125: 'nci_technology',\n      255: 'development',\n      257: 'healthandlife',\n      258: 'lezyne',\n      259: 'scribe_labs',\n      260: 'zwift',\n      261: 'watteam',\n      262: 'recon',\n      263: 'favero_electronics',\n      264: 'dynovelo',\n      265: 'strava',\n      266: 'precor',\n      267: 'bryton',\n      268: 'sram',\n      269: 'navman',\n      270: 'cobi',\n      271: 'spivi',\n      272: 'mio_magellan',\n      273: 'evesports',\n      274: 'sensitivus_gauge',\n      275: 'podoon',\n      276: 'life_time_fitness',\n      277: 'falco_e_motors',\n      278: 'minoura',\n      279: 'cycliq',\n      280: 'luxottica',\n      281: 'trainer_road',\n      282: 'the_sufferfest',\n      283: 'fullspeedahead',\n      284: 'virtualtraining',\n      285: 'feedbacksports',\n      286: 'omata',\n      287: 'vdo',\n      288: 'magneticdays',\n      289: 'hammerhead',\n      290: 'kinetic_by_kurt',\n      291: 'shapelog',\n      292: 'dabuziduo',\n      293: 'jetblack',\n      294: 'coros',\n      295: 'virtugo',\n      296: 'velosense',\n      5759: 'actigraphcorp'\n    },\n    garmin_product: {\n      0: 'hrm_bike',\n      1: 'hrm1',\n      2: 'axh01',\n      3: 'axb01',\n      4: 'axb02',\n      5: 'hrm2ss',\n      6: 'dsi_alf02',\n      7: 'hrm3ss',\n      8: 'hrm_run_single_byte_product_id',\n      9: 'bsm',\n      10: 'bcm',\n      11: 'axs01',\n      12: 'hrm_tri_single_byte_product_id',\n      14: 'fr225_single_byte_product_id',\n      473: 'fr301_china',\n      474: 'fr301_japan',\n      475: 'fr301_korea',\n      494: 'fr301_taiwan',\n      717: 'fr405',\n      782: 'fr50',\n      987: 'fr405_japan',\n      988: 'fr60',\n      1011: 'dsi_alf01',\n      1018: 'fr310xt',\n      1036: 'edge500',\n      1124: 'fr110',\n      1169: 'edge800',\n      1199: 'edge500_taiwan',\n      1213: 'edge500_japan',\n      1253: 'chirp',\n      1274: 'fr110_japan',\n      1325: 'edge200',\n      1328: 'fr910xt',\n      1333: 'edge800_taiwan',\n      1334: 'edge800_japan',\n      1341: 'alf04',\n      1345: 'fr610',\n      1360: 'fr210_japan',\n      1380: 'vector_ss',\n      1381: 'vector_cp',\n      1386: 'edge800_china',\n      1387: 'edge500_china',\n      1410: 'fr610_japan',\n      1422: 'edge500_korea',\n      1436: 'fr70',\n      1446: 'fr310xt_4t',\n      1461: 'amx',\n      1482: 'fr10',\n      1497: 'edge800_korea',\n      1499: 'swim',\n      1537: 'fr910xt_china',\n      1551: 'fenix',\n      1555: 'edge200_taiwan',\n      1561: 'edge510',\n      1567: 'edge810',\n      1570: 'tempe',\n      1600: 'fr910xt_japan',\n      1623: 'fr620',\n      1632: 'fr220',\n      1664: 'fr910xt_korea',\n      1688: 'fr10_japan',\n      1721: 'edge810_japan',\n      1735: 'virb_elite',\n      1736: 'edge_touring',\n      1742: 'edge510_japan',\n      1743: 'hrm_tri',\n      1752: 'hrm_run',\n      1765: 'fr920xt',\n      1821: 'edge510_asia',\n      1822: 'edge810_china',\n      1823: 'edge810_taiwan',\n      1836: 'edge1000',\n      1837: 'vivo_fit',\n      1853: 'virb_remote',\n      1885: 'vivo_ki',\n      1903: 'fr15',\n      1907: 'vivo_active',\n      1918: 'edge510_korea',\n      1928: 'fr620_japan',\n      1929: 'fr620_china',\n      1930: 'fr220_japan',\n      1931: 'fr220_china',\n      1936: 'approach_s6',\n      1956: 'vivo_smart',\n      1967: 'fenix2',\n      1988: 'epix',\n      2050: 'fenix3',\n      2052: 'edge1000_taiwan',\n      2053: 'edge1000_japan',\n      2061: 'fr15_japan',\n      2067: 'edge520',\n      2070: 'edge1000_china',\n      2072: 'fr620_russia',\n      2073: 'fr220_russia',\n      2079: 'vector_s',\n      2100: 'edge1000_korea',\n      2130: 'fr920xt_taiwan',\n      2131: 'fr920xt_china',\n      2132: 'fr920xt_japan',\n      2134: 'virbx',\n      2135: 'vivo_smart_apac',\n      2140: 'etrex_touch',\n      2147: 'edge25',\n      2148: 'fr25',\n      2150: 'vivo_fit2',\n      2153: 'fr225',\n      2156: 'fr630',\n      2157: 'fr230',\n      2158: 'fr735xt',\n      2160: 'vivo_active_apac',\n      2161: 'vector_2',\n      2162: 'vector_2s',\n      2172: 'virbxe',\n      2173: 'fr620_taiwan',\n      2174: 'fr220_taiwan',\n      2175: 'truswing',\n      2188: 'fenix3_china',\n      2189: 'fenix3_twn',\n      2192: 'varia_headlight',\n      2193: 'varia_taillight_old',\n      2204: 'edge_explore_1000',\n      2219: 'fr225_asia',\n      2225: 'varia_radar_taillight',\n      2226: 'varia_radar_display',\n      2238: 'edge20',\n      2262: 'd2_bravo',\n      2266: 'approach_s20',\n      2276: 'varia_remote',\n      2327: 'hrm4_run',\n      2337: 'vivo_active_hr',\n      2348: 'vivo_smart_hr',\n      2368: 'vivo_move',\n      2398: 'varia_vision',\n      2406: 'vivo_fit3',\n      2413: 'fenix3_hr',\n      2417: 'virb_ultra_30',\n      2429: 'index_smart_scale',\n      2431: 'fr235',\n      2432: 'fenix3_chronos',\n      2441: 'oregon7xx',\n      2444: 'rino7xx',\n      2496: 'nautix',\n      2530: 'edge_820',\n      2531: 'edge_explore_820',\n      2544: 'fenix5s',\n      2547: 'd2_bravo_titanium',\n      2567: 'varia_ut800',\n      2593: 'running_dynamics_pod',\n      2604: 'fenix5x',\n      2606: 'vivo_fit_jr',\n      2691: 'fr935',\n      2697: 'fenix5',\n      2859: 'descent',\n      10007: 'sdm4',\n      10014: 'edge_remote',\n      20119: 'training_center',\n      65531: 'connectiq_simulator',\n      65532: 'android_antplus_plugin',\n      65534: 'connect'\n    },\n    antplus_device_type: {\n      0: 0,\n      1: 'antfs',\n      11: 'bike_power',\n      12: 'environment_sensor_legacy',\n      15: 'multi_sport_speed_distance',\n      16: 'control',\n      17: 'fitness_equipment',\n      18: 'blood_pressure',\n      19: 'geocache_node',\n      20: 'light_electric_vehicle',\n      25: 'env_sensor',\n      26: 'racquet',\n      27: 'control_hub',\n      31: 'muscle_oxygen',\n      35: 'bike_light_main',\n      36: 'bike_light_shared',\n      38: 'exd',\n      40: 'bike_radar',\n      119: 'weight_scale',\n      120: 'heart_rate',\n      121: 'bike_speed_cadence',\n      122: 'bike_cadence',\n      123: 'bike_speed',\n      124: 'stride_speed_distance'\n    },\n    ant_network: {\n      0: 'public',\n      1: 'antplus',\n      2: 'antfs',\n      3: 'private'\n    },\n    workout_capabilities: {\n      0: 0,\n      1: 'interval',\n      2: 'custom',\n      4: 'fitness_equipment',\n      8: 'firstbeat',\n      16: 'new_leaf',\n      32: 'tcx',\n      128: 'speed',\n      256: 'heart_rate',\n      512: 'distance',\n      1024: 'cadence',\n      2048: 'power',\n      4096: 'grade',\n      8192: 'resistance',\n      16384: 'protected'\n    },\n    battery_status: {\n      0: 0,\n      1: 'new',\n      2: 'good',\n      3: 'ok',\n      4: 'low',\n      5: 'critical',\n      6: 'charging',\n      7: 'unknown'\n    },\n    hr_type: {\n      0: 'normal',\n      1: 'irregular'\n    },\n    course_capabilities: {\n      0: 0,\n      1: 'processed',\n      2: 'valid',\n      4: 'time',\n      8: 'distance',\n      16: 'position',\n      32: 'heart_rate',\n      64: 'power',\n      128: 'cadence',\n      256: 'training',\n      512: 'navigation',\n      1024: 'bikeway'\n    },\n    weight: {\n      0: 0,\n      65534: 'calculating'\n    },\n    workout_hr: {\n      0: 0,\n      100: 'bpm_offset'\n    },\n    workout_power: {\n      0: 0,\n      1000: 'watts_offset'\n    },\n    bp_status: {\n      0: 'no_error',\n      1: 'error_incomplete_data',\n      2: 'error_no_measurement',\n      3: 'error_data_out_of_range',\n      4: 'error_irregular_heart_rate'\n    },\n    user_local_id: {\n      0: 'local_min',\n      15: 'local_max',\n      16: 'stationary_min',\n      255: 'stationary_max',\n      256: 'portable_min',\n      65534: 'portable_max'\n    },\n    swim_stroke: {\n      0: 'freestyle',\n      1: 'backstroke',\n      2: 'breaststroke',\n      3: 'butterfly',\n      4: 'drill',\n      5: 'mixed',\n      6: 'im'\n    },\n    activity_type: {\n      0: 'generic',\n      1: 'running',\n      2: 'cycling',\n      3: 'transition',\n      4: 'fitness_equipment',\n      5: 'swimming',\n      6: 'walking',\n      8: 'sedentary',\n      254: 'all'\n    },\n    activity_subtype: {\n      0: 'generic',\n      1: 'treadmill',\n      2: 'street',\n      3: 'trail',\n      4: 'track',\n      5: 'spin',\n      6: 'indoor_cycling',\n      7: 'road',\n      8: 'mountain',\n      9: 'downhill',\n      10: 'recumbent',\n      11: 'cyclocross',\n      12: 'hand_cycling',\n      13: 'track_cycling',\n      14: 'indoor_rowing',\n      15: 'elliptical',\n      16: 'stair_climbing',\n      17: 'lap_swimming',\n      18: 'open_water',\n      254: 'all'\n    },\n    activity_level: {\n      0: 'low',\n      1: 'medium',\n      2: 'high'\n    },\n    side: {\n      0: 'right',\n      1: 'left'\n    },\n    left_right_balance: {\n      0: 0,\n      127: 'mask',\n      128: 'right'\n    },\n    left_right_balance_100: {\n      0: 0,\n      16383: 'mask',\n      32768: 'right'\n    },\n    length_type: {\n      0: 'idle',\n      1: 'active'\n    },\n    day_of_week: {\n      0: 'sunday',\n      1: 'monday',\n      2: 'tuesday',\n      3: 'wednesday',\n      4: 'thursday',\n      5: 'friday',\n      6: 'saturday'\n    },\n    connectivity_capabilities: {\n      0: 0,\n      1: 'bluetooth',\n      2: 'bluetooth_le',\n      4: 'ant',\n      8: 'activity_upload',\n      16: 'course_download',\n      32: 'workout_download',\n      64: 'live_track',\n      128: 'weather_conditions',\n      256: 'weather_alerts',\n      512: 'gps_ephemeris_download',\n      1024: 'explicit_archive',\n      2048: 'setup_incomplete',\n      4096: 'continue_sync_after_software_update',\n      8192: 'connect_iq_app_download',\n      16384: 'golf_course_download',\n      32768: 'device_initiates_sync',\n      65536: 'connect_iq_watch_app_download',\n      131072: 'connect_iq_widget_download',\n      262144: 'connect_iq_watch_face_download',\n      524288: 'connect_iq_data_field_download',\n      1048576: 'connect_iq_app_managment',\n      2097152: 'swing_sensor',\n      4194304: 'swing_sensor_remote',\n      8388608: 'incident_detection',\n      16777216: 'audio_prompts',\n      33554432: 'wifi_verification',\n      67108864: 'true_up',\n      134217728: 'find_my_watch',\n      268435456: 'remote_manual_sync',\n      536870912: 'live_track_auto_start',\n      1073741824: 'live_track_messaging',\n      2147483648: 'instant_input'\n    },\n    weather_report: {\n      0: 'current',\n      1: 'hourly_forecast',\n      2: 'daily_forecast'\n    },\n    weather_status: {\n      0: 'clear',\n      1: 'partly_cloudy',\n      2: 'mostly_cloudy',\n      3: 'rain',\n      4: 'snow',\n      5: 'windy',\n      6: 'thunderstorms',\n      7: 'wintry_mix',\n      8: 'fog',\n      11: 'hazy',\n      12: 'hail',\n      13: 'scattered_showers',\n      14: 'scattered_thunderstorms',\n      15: 'unknown_precipitation',\n      16: 'light_rain',\n      17: 'heavy_rain',\n      18: 'light_snow',\n      19: 'heavy_snow',\n      20: 'light_rain_snow',\n      21: 'heavy_rain_snow',\n      22: 'cloudy'\n    },\n    weather_severity: {\n      0: 'unknown',\n      1: 'warning',\n      2: 'watch',\n      3: 'advisory',\n      4: 'statement'\n    },\n    weather_severe_type: {\n      0: 'unspecified',\n      1: 'tornado',\n      2: 'tsunami',\n      3: 'hurricane',\n      4: 'extreme_wind',\n      5: 'typhoon',\n      6: 'inland_hurricane',\n      7: 'hurricane_force_wind',\n      8: 'waterspout',\n      9: 'severe_thunderstorm',\n      10: 'wreckhouse_winds',\n      11: 'les_suetes_wind',\n      12: 'avalanche',\n      13: 'flash_flood',\n      14: 'tropical_storm',\n      15: 'inland_tropical_storm',\n      16: 'blizzard',\n      17: 'ice_storm',\n      18: 'freezing_rain',\n      19: 'debris_flow',\n      20: 'flash_freeze',\n      21: 'dust_storm',\n      22: 'high_wind',\n      23: 'winter_storm',\n      24: 'heavy_freezing_spray',\n      25: 'extreme_cold',\n      26: 'wind_chill',\n      27: 'cold_wave',\n      28: 'heavy_snow_alert',\n      29: 'lake_effect_blowing_snow',\n      30: 'snow_squall',\n      31: 'lake_effect_snow',\n      32: 'winter_weather',\n      33: 'sleet',\n      34: 'snowfall',\n      35: 'snow_and_blowing_snow',\n      36: 'blowing_snow',\n      37: 'snow_alert',\n      38: 'arctic_outflow',\n      39: 'freezing_drizzle',\n      40: 'storm',\n      41: 'storm_surge',\n      42: 'rainfall',\n      43: 'areal_flood',\n      44: 'coastal_flood',\n      45: 'lakeshore_flood',\n      46: 'excessive_heat',\n      47: 'heat',\n      48: 'weather',\n      49: 'high_heat_and_humidity',\n      50: 'humidex_and_health',\n      51: 'humidex',\n      52: 'gale',\n      53: 'freezing_spray',\n      54: 'special_marine',\n      55: 'squall',\n      56: 'strong_wind',\n      57: 'lake_wind',\n      58: 'marine_weather',\n      59: 'wind',\n      60: 'small_craft_hazardous_seas',\n      61: 'hazardous_seas',\n      62: 'small_craft',\n      63: 'small_craft_winds',\n      64: 'small_craft_rough_bar',\n      65: 'high_water_level',\n      66: 'ashfall',\n      67: 'freezing_fog',\n      68: 'dense_fog',\n      69: 'dense_smoke',\n      70: 'blowing_dust',\n      71: 'hard_freeze',\n      72: 'freeze',\n      73: 'frost',\n      74: 'fire_weather',\n      75: 'flood',\n      76: 'rip_tide',\n      77: 'high_surf',\n      78: 'smog',\n      79: 'air_quality',\n      80: 'brisk_wind',\n      81: 'air_stagnation',\n      82: 'low_water',\n      83: 'hydrological',\n      84: 'special_weather'\n    },\n    stroke_type: {\n      0: 'no_event',\n      1: 'other',\n      2: 'serve',\n      3: 'forehand',\n      4: 'backhand',\n      5: 'smash'\n    },\n    body_location: {\n      0: 'left_leg',\n      1: 'left_calf',\n      2: 'left_shin',\n      3: 'left_hamstring',\n      4: 'left_quad',\n      5: 'left_glute',\n      6: 'right_leg',\n      7: 'right_calf',\n      8: 'right_shin',\n      9: 'right_hamstring',\n      10: 'right_quad',\n      11: 'right_glute',\n      12: 'torso_back',\n      13: 'left_lower_back',\n      14: 'left_upper_back',\n      15: 'right_lower_back',\n      16: 'right_upper_back',\n      17: 'torso_front',\n      18: 'left_abdomen',\n      19: 'left_chest',\n      20: 'right_abdomen',\n      21: 'right_chest',\n      22: 'left_arm',\n      23: 'left_shoulder',\n      24: 'left_bicep',\n      25: 'left_tricep',\n      26: 'left_brachioradialis',\n      27: 'left_forearm_extensors',\n      28: 'right_arm',\n      29: 'right_shoulder',\n      30: 'right_bicep',\n      31: 'right_tricep',\n      32: 'right_brachioradialis',\n      33: 'right_forearm_extensors',\n      34: 'neck',\n      35: 'throat',\n      36: 'waist_mid_back',\n      37: 'waist_front',\n      38: 'waist_left',\n      39: 'waist_right'\n    },\n    segment_lap_status: {\n      0: 'end',\n      1: 'fail'\n    },\n    segment_leaderboard_type: {\n      0: 'overall',\n      1: 'personal_best',\n      2: 'connections',\n      3: 'group',\n      4: 'challenger',\n      5: 'kom',\n      6: 'qom',\n      7: 'pr',\n      8: 'goal',\n      9: 'rival',\n      10: 'club_leader'\n    },\n    segment_delete_status: {\n      0: 'do_not_delete',\n      1: 'delete_one',\n      2: 'delete_all'\n    },\n    segment_selection_type: {\n      0: 'starred',\n      1: 'suggested'\n    },\n    source_type: {\n      0: 'ant',\n      1: 'antplus',\n      2: 'bluetooth',\n      3: 'bluetooth_low_energy',\n      4: 'wifi',\n      5: 'local'\n    },\n    display_orientation: {\n      0: 'auto',\n      1: 'portrait',\n      2: 'landscape',\n      3: 'portrait_flipped',\n      4: 'landscape_flipped'\n    },\n    workout_equipment: {\n      0: 'none',\n      1: 'swim_fins',\n      2: 'swim_kickboard',\n      3: 'swim_paddles',\n      4: 'swim_pull_buoy',\n      5: 'swim_snorkel'\n    },\n    watchface_mode: {\n      0: 'digital',\n      1: 'analog',\n      2: 'connect_iq',\n      3: 'disabled'\n    },\n    digital_watchface_layout: {\n      0: 'traditional',\n      1: 'modern',\n      2: 'bold'\n    },\n    analog_watchface_layout: {\n      0: 'minimal',\n      1: 'traditional',\n      2: 'modern'\n    },\n    rider_position_type: {\n      0: 'seated',\n      1: 'standing',\n      2: 'transition_to_seated',\n      3: 'transition_to_standing'\n    },\n    power_phase_type: {\n      0: 'power_phase_start_angle',\n      1: 'power_phase_end_angle',\n      2: 'power_phase_arc_length',\n      3: 'power_phase_center'\n    },\n    camera_event_type: {\n      0: 'video_start',\n      1: 'video_split',\n      2: 'video_end',\n      3: 'photo_taken',\n      4: 'video_second_stream_start',\n      5: 'video_second_stream_split',\n      6: 'video_second_stream_end',\n      7: 'video_split_start',\n      8: 'video_second_stream_split_start',\n      11: 'video_pause',\n      12: 'video_second_stream_pause',\n      13: 'video_resume',\n      14: 'video_second_stream_resume'\n    },\n    sensor_type: {\n      0: 'accelerometer',\n      1: 'gyroscope',\n      2: 'compass',\n      3: 'barometer'\n    },\n    bike_light_network_config_type: {\n      0: 'auto',\n      4: 'individual',\n      5: 'high_visibility',\n      6: 'trail'\n    },\n    comm_timeout_type: {\n      0: 'wildcard_pairing_timeout',\n      1: 'pairing_timeout',\n      2: 'connection_lost',\n      3: 'connection_timeout'\n    },\n    camera_orientation_type: {\n      0: 'camera_orientation_0',\n      1: 'camera_orientation_90',\n      2: 'camera_orientation_180',\n      3: 'camera_orientation_270'\n    },\n    attitude_stage: {\n      0: 'failed',\n      1: 'aligning',\n      2: 'degraded',\n      3: 'valid'\n    },\n    attitude_validity: {\n      0: 0,\n      1: 'track_angle_heading_valid',\n      2: 'pitch_valid',\n      4: 'roll_valid',\n      8: 'lateral_body_accel_valid',\n      16: 'normal_body_accel_valid',\n      32: 'turn_rate_valid',\n      64: 'hw_fail',\n      128: 'mag_invalid',\n      256: 'no_gps',\n      512: 'gps_invalid',\n      1024: 'solution_coasting',\n      2048: 'true_track_angle',\n      4096: 'magnetic_heading'\n    },\n    auto_sync_frequency: {\n      0: 'never',\n      1: 'occasionally',\n      2: 'frequent',\n      3: 'once_a_day',\n      4: 'remote'\n    },\n    exd_layout: {\n      0: 'full_screen',\n      1: 'half_vertical',\n      2: 'half_horizontal',\n      3: 'half_vertical_right_split',\n      4: 'half_horizontal_bottom_split',\n      5: 'full_quarter_split',\n      6: 'half_vertical_left_split',\n      7: 'half_horizontal_top_split'\n    },\n    exd_display_type: {\n      0: 'numerical',\n      1: 'simple',\n      2: 'graph',\n      3: 'bar',\n      4: 'circle_graph',\n      5: 'virtual_partner',\n      6: 'balance',\n      7: 'string_list',\n      8: 'string',\n      9: 'simple_dynamic_icon',\n      10: 'gauge'\n    },\n    exd_data_units: {\n      0: 'no_units',\n      1: 'laps',\n      2: 'miles_per_hour',\n      3: 'kilometers_per_hour',\n      4: 'feet_per_hour',\n      5: 'meters_per_hour',\n      6: 'degrees_celsius',\n      7: 'degrees_farenheit',\n      8: 'zone',\n      9: 'gear',\n      10: 'rpm',\n      11: 'bpm',\n      12: 'degrees',\n      13: 'millimeters',\n      14: 'meters',\n      15: 'kilometers',\n      16: 'feet',\n      17: 'yards',\n      18: 'kilofeet',\n      19: 'miles',\n      20: 'time',\n      21: 'enum_turn_type',\n      22: 'percent',\n      23: 'watts',\n      24: 'watts_per_kilogram',\n      25: 'enum_battery_status',\n      26: 'enum_bike_light_beam_angle_mode',\n      27: 'enum_bike_light_battery_status',\n      28: 'enum_bike_light_network_config_type',\n      29: 'lights',\n      30: 'seconds',\n      31: 'minutes',\n      32: 'hours',\n      33: 'calories',\n      34: 'kilojoules',\n      35: 'milliseconds',\n      36: 'second_per_mile',\n      37: 'second_per_kilometer',\n      38: 'centimeter',\n      39: 'enum_course_point',\n      40: 'bradians',\n      41: 'enum_sport',\n      42: 'inches_hg',\n      43: 'mm_hg',\n      44: 'mbars',\n      45: 'hecto_pascals',\n      46: 'feet_per_min',\n      47: 'meters_per_min',\n      48: 'meters_per_sec',\n      49: 'eight_cardinal'\n    },\n    exd_qualifiers: {\n      0: 'no_qualifier',\n      1: 'instantaneous',\n      2: 'average',\n      3: 'lap',\n      4: 'maximum',\n      5: 'maximum_average',\n      6: 'maximum_lap',\n      7: 'last_lap',\n      8: 'average_lap',\n      9: 'to_destination',\n      10: 'to_go',\n      11: 'to_next',\n      12: 'next_course_point',\n      13: 'total',\n      14: 'three_second_average',\n      15: 'ten_second_average',\n      16: 'thirty_second_average',\n      17: 'percent_maximum',\n      18: 'percent_maximum_average',\n      19: 'lap_percent_maximum',\n      20: 'elapsed',\n      21: 'sunrise',\n      22: 'sunset',\n      23: 'compared_to_virtual_partner',\n      24: 'maximum_24h',\n      25: 'minimum_24h',\n      26: 'minimum',\n      27: 'first',\n      28: 'second',\n      29: 'third',\n      30: 'shifter',\n      31: 'last_sport',\n      32: 'moving',\n      33: 'stopped',\n      34: 'estimated_total',\n      242: 'zone_9',\n      243: 'zone_8',\n      244: 'zone_7',\n      245: 'zone_6',\n      246: 'zone_5',\n      247: 'zone_4',\n      248: 'zone_3',\n      249: 'zone_2',\n      250: 'zone_1'\n    },\n    exd_descriptors: {\n      0: 'bike_light_battery_status',\n      1: 'beam_angle_status',\n      2: 'batery_level',\n      3: 'light_network_mode',\n      4: 'number_lights_connected',\n      5: 'cadence',\n      6: 'distance',\n      7: 'estimated_time_of_arrival',\n      8: 'heading',\n      9: 'time',\n      10: 'battery_level',\n      11: 'trainer_resistance',\n      12: 'trainer_target_power',\n      13: 'time_seated',\n      14: 'time_standing',\n      15: 'elevation',\n      16: 'grade',\n      17: 'ascent',\n      18: 'descent',\n      19: 'vertical_speed',\n      20: 'di2_battery_level',\n      21: 'front_gear',\n      22: 'rear_gear',\n      23: 'gear_ratio',\n      24: 'heart_rate',\n      25: 'heart_rate_zone',\n      26: 'time_in_heart_rate_zone',\n      27: 'heart_rate_reserve',\n      28: 'calories',\n      29: 'gps_accuracy',\n      30: 'gps_signal_strength',\n      31: 'temperature',\n      32: 'time_of_day',\n      33: 'balance',\n      34: 'pedal_smoothness',\n      35: 'power',\n      36: 'functional_threshold_power',\n      37: 'intensity_factor',\n      38: 'work',\n      39: 'power_ratio',\n      40: 'normalized_power',\n      41: 'training_stress_Score',\n      42: 'time_on_zone',\n      43: 'speed',\n      44: 'laps',\n      45: 'reps',\n      46: 'workout_step',\n      47: 'course_distance',\n      48: 'navigation_distance',\n      49: 'course_estimated_time_of_arrival',\n      50: 'navigation_estimated_time_of_arrival',\n      51: 'course_time',\n      52: 'navigation_time',\n      53: 'course_heading',\n      54: 'navigation_heading',\n      55: 'power_zone',\n      56: 'torque_effectiveness',\n      57: 'timer_time',\n      58: 'power_weight_ratio',\n      59: 'left_platform_center_offset',\n      60: 'right_platform_center_offset',\n      61: 'left_power_phase_start_angle',\n      62: 'right_power_phase_start_angle',\n      63: 'left_power_phase_finish_angle',\n      64: 'right_power_phase_finish_angle',\n      65: 'gears',\n      66: 'pace',\n      67: 'training_effect',\n      68: 'vertical_oscillation',\n      69: 'vertical_ratio',\n      70: 'ground_contact_time',\n      71: 'left_ground_contact_time_balance',\n      72: 'right_ground_contact_time_balance',\n      73: 'stride_length',\n      74: 'running_cadence',\n      75: 'performance_condition',\n      76: 'course_type',\n      77: 'time_in_power_zone',\n      78: 'navigation_turn',\n      79: 'course_location',\n      80: 'navigation_location',\n      81: 'compass',\n      82: 'gear_combo',\n      83: 'muscle_oxygen',\n      84: 'icon',\n      85: 'compass_heading',\n      86: 'gps_heading',\n      87: 'gps_elevation',\n      88: 'anaerobic_training_effect',\n      89: 'course',\n      90: 'off_course',\n      91: 'glide_ratio',\n      92: 'vertical_distance',\n      93: 'vmg',\n      94: 'ambient_pressure',\n      95: 'pressure',\n      96: 'vam'\n    },\n    auto_activity_detect: {\n      0: 'none',\n      1: 'running',\n      2: 'cycling',\n      4: 'swimming',\n      8: 'walking',\n      16: 'elliptical',\n      32: 'sedentary'\n    },\n    supported_exd_screen_layouts: {\n      0: 0,\n      1: 'full_screen',\n      2: 'half_vertical',\n      4: 'half_horizontal',\n      8: 'half_vertical_right_split',\n      16: 'half_horizontal_bottom_split',\n      32: 'full_quarter_split',\n      64: 'half_vertical_left_split',\n      128: 'half_horizontal_top_split'\n    },\n    fit_base_type: {\n      0: 'enum',\n      1: 'sint8',\n      2: 'uint8',\n      7: 'string',\n      10: 'uint8z',\n      13: 'byte',\n      131: 'sint16',\n      132: 'uint16',\n      133: 'sint32',\n      134: 'uint32',\n      136: 'float32',\n      137: 'float64',\n      139: 'uint16z',\n      140: 'uint32z',\n      142: 'sint64',\n      143: 'uint64',\n      144: 'uint64z'\n    },\n    turn_type: {\n      0: 'arriving_idx',\n      1: 'arriving_left_idx',\n      2: 'arriving_right_idx',\n      3: 'arriving_via_idx',\n      4: 'arriving_via_left_idx',\n      5: 'arriving_via_right_idx',\n      6: 'bear_keep_left_idx',\n      7: 'bear_keep_right_idx',\n      8: 'continue_idx',\n      9: 'exit_left_idx',\n      10: 'exit_right_idx',\n      11: 'ferry_idx',\n      12: 'roundabout_45_idx',\n      13: 'roundabout_90_idx',\n      14: 'roundabout_135_idx',\n      15: 'roundabout_180_idx',\n      16: 'roundabout_225_idx',\n      17: 'roundabout_270_idx',\n      18: 'roundabout_315_idx',\n      19: 'roundabout_360_idx',\n      20: 'roundabout_neg_45_idx',\n      21: 'roundabout_neg_90_idx',\n      22: 'roundabout_neg_135_idx',\n      23: 'roundabout_neg_180_idx',\n      24: 'roundabout_neg_225_idx',\n      25: 'roundabout_neg_270_idx',\n      26: 'roundabout_neg_315_idx',\n      27: 'roundabout_neg_360_idx',\n      28: 'roundabout_generic_idx',\n      29: 'roundabout_neg_generic_idx',\n      30: 'sharp_turn_left_idx',\n      31: 'sharp_turn_right_idx',\n      32: 'turn_left_idx',\n      33: 'turn_right_idx',\n      34: 'uturn_left_idx',\n      35: 'uturn_right_idx',\n      36: 'icon_inv_idx',\n      37: 'icon_idx_cnt'\n    },\n    bike_light_beam_angle_mode: {\n      0: 'manual',\n      1: 'auto'\n    },\n    fit_base_unit: {\n      0: 'other',\n      1: 'kilogram',\n      2: 'pound'\n    },\n    set_type: {\n      0: 'rest',\n      1: 'active'\n    },\n    exercise_category: {\n      0: 'bench_press',\n      1: 'calf_raise',\n      2: 'cardio',\n      3: 'carry',\n      4: 'chop',\n      5: 'core',\n      6: 'crunch',\n      7: 'curl',\n      8: 'deadlift',\n      9: 'flye',\n      10: 'hip_raise',\n      11: 'hip_stability',\n      12: 'hip_swing',\n      13: 'hyperextension',\n      14: 'lateral_raise',\n      15: 'leg_curl',\n      16: 'leg_raise',\n      17: 'lunge',\n      18: 'olympic_lift',\n      19: 'plank',\n      20: 'plyo',\n      21: 'pull_up',\n      22: 'push_up',\n      23: 'row',\n      24: 'shoulder_press',\n      25: 'shoulder_stability',\n      26: 'shrug',\n      27: 'sit_up',\n      28: 'squat',\n      29: 'total_body',\n      30: 'triceps_extension',\n      31: 'warm_up',\n      32: 'run',\n      65534: 'unknown'\n    },\n    bench_press_exercise_name: {\n      0: 'alternating_dumbbell_chest_press_on_swiss_ball',\n      1: 'barbell_bench_press',\n      2: 'barbell_board_bench_press',\n      3: 'barbell_floor_press',\n      4: 'close_grip_barbell_bench_press',\n      5: 'decline_dumbbell_bench_press',\n      6: 'dumbbell_bench_press',\n      7: 'dumbbell_floor_press',\n      8: 'incline_barbell_bench_press',\n      9: 'incline_dumbbell_bench_press',\n      10: 'incline_smith_machine_bench_press',\n      11: 'isometric_barbell_bench_press',\n      12: 'kettlebell_chest_press',\n      13: 'neutral_grip_dumbbell_bench_press',\n      14: 'neutral_grip_dumbbell_incline_bench_press',\n      15: 'one_arm_floor_press',\n      16: 'weighted_one_arm_floor_press',\n      17: 'partial_lockout',\n      18: 'reverse_grip_barbell_bench_press',\n      19: 'reverse_grip_incline_bench_press',\n      20: 'single_arm_cable_chest_press',\n      21: 'single_arm_dumbbell_bench_press',\n      22: 'smith_machine_bench_press',\n      23: 'swiss_ball_dumbbell_chest_press',\n      24: 'triple_stop_barbell_bench_press',\n      25: 'wide_grip_barbell_bench_press',\n      26: 'alternating_dumbbell_chest_press'\n    },\n    calf_raise_exercise_name: {\n      0: '3_way_calf_raise',\n      1: '3_way_weighted_calf_raise',\n      2: '3_way_single_leg_calf_raise',\n      3: '3_way_weighted_single_leg_calf_raise',\n      4: 'donkey_calf_raise',\n      5: 'weighted_donkey_calf_raise',\n      6: 'seated_calf_raise',\n      7: 'weighted_seated_calf_raise',\n      8: 'seated_dumbbell_toe_raise',\n      9: 'single_leg_bent_knee_calf_raise',\n      10: 'weighted_single_leg_bent_knee_calf_raise',\n      11: 'single_leg_decline_push_up',\n      12: 'single_leg_donkey_calf_raise',\n      13: 'weighted_single_leg_donkey_calf_raise',\n      14: 'single_leg_hip_raise_with_knee_hold',\n      15: 'single_leg_standing_calf_raise',\n      16: 'single_leg_standing_dumbbell_calf_raise',\n      17: 'standing_barbell_calf_raise',\n      18: 'standing_calf_raise',\n      19: 'weighted_standing_calf_raise',\n      20: 'standing_dumbbell_calf_raise'\n    },\n    cardio_exercise_name: {\n      0: 'bob_and_weave_circle',\n      1: 'weighted_bob_and_weave_circle',\n      2: 'cardio_core_crawl',\n      3: 'weighted_cardio_core_crawl',\n      4: 'double_under',\n      5: 'weighted_double_under',\n      6: 'jump_rope',\n      7: 'weighted_jump_rope',\n      8: 'jump_rope_crossover',\n      9: 'weighted_jump_rope_crossover',\n      10: 'jump_rope_jog',\n      11: 'weighted_jump_rope_jog',\n      12: 'jumping_jacks',\n      13: 'weighted_jumping_jacks',\n      14: 'ski_moguls',\n      15: 'weighted_ski_moguls',\n      16: 'split_jacks',\n      17: 'weighted_split_jacks',\n      18: 'squat_jacks',\n      19: 'weighted_squat_jacks',\n      20: 'triple_under',\n      21: 'weighted_triple_under'\n    },\n    carry_exercise_name: {\n      0: 'bar_holds',\n      1: 'farmers_walk',\n      2: 'farmers_walk_on_toes',\n      3: 'hex_dumbbell_hold',\n      4: 'overhead_carry'\n    },\n    chop_exercise_name: {\n      0: 'cable_pull_through',\n      1: 'cable_rotational_lift',\n      2: 'cable_woodchop',\n      3: 'cross_chop_to_knee',\n      4: 'weighted_cross_chop_to_knee',\n      5: 'dumbbell_chop',\n      6: 'half_kneeling_rotation',\n      7: 'weighted_half_kneeling_rotation',\n      8: 'half_kneeling_rotational_chop',\n      9: 'half_kneeling_rotational_reverse_chop',\n      10: 'half_kneeling_stability_chop',\n      11: 'half_kneeling_stability_reverse_chop',\n      12: 'kneeling_rotational_chop',\n      13: 'kneeling_rotational_reverse_chop',\n      14: 'kneeling_stability_chop',\n      15: 'kneeling_woodchopper',\n      16: 'medicine_ball_wood_chops',\n      17: 'power_squat_chops',\n      18: 'weighted_power_squat_chops',\n      19: 'standing_rotational_chop',\n      20: 'standing_split_rotational_chop',\n      21: 'standing_split_rotational_reverse_chop',\n      22: 'standing_stability_reverse_chop'\n    },\n    core_exercise_name: {\n      0: 'abs_jabs',\n      1: 'weighted_abs_jabs',\n      2: 'alternating_plate_reach',\n      3: 'barbell_rollout',\n      4: 'weighted_barbell_rollout',\n      5: 'body_bar_oblique_twist',\n      6: 'cable_core_press',\n      7: 'cable_side_bend',\n      8: 'side_bend',\n      9: 'weighted_side_bend',\n      10: 'crescent_circle',\n      11: 'weighted_crescent_circle',\n      12: 'cycling_russian_twist',\n      13: 'weighted_cycling_russian_twist',\n      14: 'elevated_feet_russian_twist',\n      15: 'weighted_elevated_feet_russian_twist',\n      16: 'half_turkish_get_up',\n      17: 'kettlebell_windmill',\n      18: 'kneeling_ab_wheel',\n      19: 'weighted_kneeling_ab_wheel',\n      20: 'modified_front_lever',\n      21: 'open_knee_tucks',\n      22: 'weighted_open_knee_tucks',\n      23: 'side_abs_leg_lift',\n      24: 'weighted_side_abs_leg_lift',\n      25: 'swiss_ball_jackknife',\n      26: 'weighted_swiss_ball_jackknife',\n      27: 'swiss_ball_pike',\n      28: 'weighted_swiss_ball_pike',\n      29: 'swiss_ball_rollout',\n      30: 'weighted_swiss_ball_rollout',\n      31: 'triangle_hip_press',\n      32: 'weighted_triangle_hip_press',\n      33: 'trx_suspended_jackknife',\n      34: 'weighted_trx_suspended_jackknife',\n      35: 'u_boat',\n      36: 'weighted_u_boat',\n      37: 'windmill_switches',\n      38: 'weighted_windmill_switches',\n      39: 'alternating_slide_out',\n      40: 'weighted_alternating_slide_out',\n      41: 'ghd_back_extensions',\n      42: 'weighted_ghd_back_extensions',\n      43: 'overhead_walk',\n      44: 'inchworm',\n      45: 'weighted_modified_front_lever',\n      46: 'russian_twist',\n      47: 'abdominal_leg_rotations',\n      48: 'arm_and_leg_extension_on_knees',\n      49: 'bicycle',\n      50: 'bicep_curl_with_leg_extension',\n      51: 'cat_cow',\n      52: 'corkscrew',\n      53: 'criss_cross',\n      54: 'criss_cross_with_ball',\n      55: 'double_leg_stretch',\n      56: 'knee_folds',\n      57: 'lower_lift',\n      58: 'neck_pull',\n      59: 'pelvic_clocks',\n      60: 'roll_over',\n      61: 'roll_up',\n      62: 'rolling',\n      63: 'rowing_1',\n      64: 'rowing_2',\n      65: 'scissors',\n      66: 'single_leg_circles',\n      67: 'single_leg_stretch',\n      68: 'snake_twist_1_and_2',\n      69: 'swan',\n      70: 'swimming',\n      71: 'teaser',\n      72: 'the_hundred'\n    },\n    crunch_exercise_name: {\n      0: 'bicycle_crunch',\n      1: 'cable_crunch',\n      2: 'circular_arm_crunch',\n      3: 'crossed_arms_crunch',\n      4: 'weighted_crossed_arms_crunch',\n      5: 'cross_leg_reverse_crunch',\n      6: 'weighted_cross_leg_reverse_crunch',\n      7: 'crunch_chop',\n      8: 'weighted_crunch_chop',\n      9: 'double_crunch',\n      10: 'weighted_double_crunch',\n      11: 'elbow_to_knee_crunch',\n      12: 'weighted_elbow_to_knee_crunch',\n      13: 'flutter_kicks',\n      14: 'weighted_flutter_kicks',\n      15: 'foam_roller_reverse_crunch_on_bench',\n      16: 'weighted_foam_roller_reverse_crunch_on_bench',\n      17: 'foam_roller_reverse_crunch_with_dumbbell',\n      18: 'foam_roller_reverse_crunch_with_medicine_ball',\n      19: 'frog_press',\n      20: 'hanging_knee_raise_oblique_crunch',\n      21: 'weighted_hanging_knee_raise_oblique_crunch',\n      22: 'hip_crossover',\n      23: 'weighted_hip_crossover',\n      24: 'hollow_rock',\n      25: 'weighted_hollow_rock',\n      26: 'incline_reverse_crunch',\n      27: 'weighted_incline_reverse_crunch',\n      28: 'kneeling_cable_crunch',\n      29: 'kneeling_cross_crunch',\n      30: 'weighted_kneeling_cross_crunch',\n      31: 'kneeling_oblique_cable_crunch',\n      32: 'knees_to_elbow',\n      33: 'leg_extensions',\n      34: 'weighted_leg_extensions',\n      35: 'leg_levers',\n      36: 'mcgill_curl_up',\n      37: 'weighted_mcgill_curl_up',\n      38: 'modified_pilates_roll_up_with_ball',\n      39: 'weighted_modified_pilates_roll_up_with_ball',\n      40: 'pilates_crunch',\n      41: 'weighted_pilates_crunch',\n      42: 'pilates_roll_up_with_ball',\n      43: 'weighted_pilates_roll_up_with_ball',\n      44: 'raised_legs_crunch',\n      45: 'weighted_raised_legs_crunch',\n      46: 'reverse_crunch',\n      47: 'weighted_reverse_crunch',\n      48: 'reverse_crunch_on_a_bench',\n      49: 'weighted_reverse_crunch_on_a_bench',\n      50: 'reverse_curl_and_lift',\n      51: 'weighted_reverse_curl_and_lift',\n      52: 'rotational_lift',\n      53: 'weighted_rotational_lift',\n      54: 'seated_alternating_reverse_crunch',\n      55: 'weighted_seated_alternating_reverse_crunch',\n      56: 'seated_leg_u',\n      57: 'weighted_seated_leg_u',\n      58: 'side_to_side_crunch_and_weave',\n      59: 'weighted_side_to_side_crunch_and_weave',\n      60: 'single_leg_reverse_crunch',\n      61: 'weighted_single_leg_reverse_crunch',\n      62: 'skater_crunch_cross',\n      63: 'weighted_skater_crunch_cross',\n      64: 'standing_cable_crunch',\n      65: 'standing_side_crunch',\n      66: 'step_climb',\n      67: 'weighted_step_climb',\n      68: 'swiss_ball_crunch',\n      69: 'swiss_ball_reverse_crunch',\n      70: 'weighted_swiss_ball_reverse_crunch',\n      71: 'swiss_ball_russian_twist',\n      72: 'weighted_swiss_ball_russian_twist',\n      73: 'swiss_ball_side_crunch',\n      74: 'weighted_swiss_ball_side_crunch',\n      75: 'thoracic_crunches_on_foam_roller',\n      76: 'weighted_thoracic_crunches_on_foam_roller',\n      77: 'triceps_crunch',\n      78: 'weighted_bicycle_crunch',\n      79: 'weighted_crunch',\n      80: 'weighted_swiss_ball_crunch',\n      81: 'toes_to_bar',\n      82: 'weighted_toes_to_bar',\n      83: 'crunch',\n      84: 'straight_leg_crunch_with_ball'\n    },\n    curl_exercise_name: {\n      0: 'alternating_dumbbell_biceps_curl',\n      1: 'alternating_dumbbell_biceps_curl_on_swiss_ball',\n      2: 'alternating_incline_dumbbell_biceps_curl',\n      3: 'barbell_biceps_curl',\n      4: 'barbell_reverse_wrist_curl',\n      5: 'barbell_wrist_curl',\n      6: 'behind_the_back_barbell_reverse_wrist_curl',\n      7: 'behind_the_back_one_arm_cable_curl',\n      8: 'cable_biceps_curl',\n      9: 'cable_hammer_curl',\n      10: 'cheating_barbell_biceps_curl',\n      11: 'close_grip_ez_bar_biceps_curl',\n      12: 'cross_body_dumbbell_hammer_curl',\n      13: 'dead_hang_biceps_curl',\n      14: 'decline_hammer_curl',\n      15: 'dumbbell_biceps_curl_with_static_hold',\n      16: 'dumbbell_hammer_curl',\n      17: 'dumbbell_reverse_wrist_curl',\n      18: 'dumbbell_wrist_curl',\n      19: 'ez_bar_preacher_curl',\n      20: 'forward_bend_biceps_curl',\n      21: 'hammer_curl_to_press',\n      22: 'incline_dumbbell_biceps_curl',\n      23: 'incline_offset_thumb_dumbbell_curl',\n      24: 'kettlebell_biceps_curl',\n      25: 'lying_concentration_cable_curl',\n      26: 'one_arm_preacher_curl',\n      27: 'plate_pinch_curl',\n      28: 'preacher_curl_with_cable',\n      29: 'reverse_ez_bar_curl',\n      30: 'reverse_grip_wrist_curl',\n      31: 'reverse_grip_barbell_biceps_curl',\n      32: 'seated_alternating_dumbbell_biceps_curl',\n      33: 'seated_dumbbell_biceps_curl',\n      34: 'seated_reverse_dumbbell_curl',\n      35: 'split_stance_offset_pinky_dumbbell_curl',\n      36: 'standing_alternating_dumbbell_curls',\n      37: 'standing_dumbbell_biceps_curl',\n      38: 'standing_ez_bar_biceps_curl',\n      39: 'static_curl',\n      40: 'swiss_ball_dumbbell_overhead_triceps_extension',\n      41: 'swiss_ball_ez_bar_preacher_curl',\n      42: 'twisting_standing_dumbbell_biceps_curl',\n      43: 'wide_grip_ez_bar_biceps_curl'\n    },\n\n    deadlift_exercise_name: {\n      0: 'barbell_deadlift',\n      1: 'barbell_straight_leg_deadlift',\n      2: 'dumbbell_deadlift',\n      3: 'dumbbell_single_leg_deadlift_to_row',\n      4: 'dumbbell_straight_leg_deadlift',\n      5: 'kettlebell_floor_to_shelf',\n      6: 'one_arm_one_leg_deadlift',\n      7: 'rack_pull',\n      8: 'rotational_dumbbell_straight_leg_deadlift',\n      9: 'single_arm_deadlift',\n      10: 'single_leg_barbell_deadlift',\n      11: 'single_leg_barbell_straight_leg_deadlift',\n      12: 'single_leg_deadlift_with_barbell',\n      13: 'single_leg_rdl_circuit',\n      14: 'single_leg_romanian_deadlift_with_dumbbell',\n      15: 'sumo_deadlift',\n      16: 'sumo_deadlift_high_pull',\n      17: 'trap_bar_deadlift',\n      18: 'wide_grip_barbell_deadlift'\n    },\n    flye_exercise_name: {\n      0: 'cable_crossover',\n      1: 'decline_dumbbell_flye',\n      2: 'dumbbell_flye',\n      3: 'incline_dumbbell_flye',\n      4: 'kettlebell_flye',\n      5: 'kneeling_rear_flye',\n      6: 'single_arm_standing_cable_reverse_flye',\n      7: 'swiss_ball_dumbbell_flye',\n      8: 'arm_rotations',\n      9: 'hug_a_tree'\n    },\n    hip_raise_exercise_name: {\n      0: 'barbell_hip_thrust_on_floor',\n      1: 'barbell_hip_thrust_with_bench',\n      2: 'bent_knee_swiss_ball_reverse_hip_raise',\n      3: 'weighted_bent_knee_swiss_ball_reverse_hip_raise',\n      4: 'bridge_with_leg_extension',\n      5: 'weighted_bridge_with_leg_extension',\n      6: 'clam_bridge',\n      7: 'front_kick_tabletop',\n      8: 'weighted_front_kick_tabletop',\n      9: 'hip_extension_and_cross',\n      10: 'weighted_hip_extension_and_cross',\n      11: 'hip_raise',\n      12: 'weighted_hip_raise',\n      13: 'hip_raise_with_feet_on_swiss_ball',\n      14: 'weighted_hip_raise_with_feet_on_swiss_ball',\n      15: 'hip_raise_with_head_on_bosu_ball',\n      16: 'weighted_hip_raise_with_head_on_bosu_ball',\n      17: 'hip_raise_with_head_on_swiss_ball',\n      18: 'weighted_hip_raise_with_head_on_swiss_ball',\n      19: 'hip_raise_with_knee_squeeze',\n      20: 'weighted_hip_raise_with_knee_squeeze',\n      21: 'incline_rear_leg_extension',\n      22: 'weighted_incline_rear_leg_extension',\n      23: 'kettlebell_swing',\n      24: 'marching_hip_raise',\n      25: 'weighted_marching_hip_raise',\n      26: 'marching_hip_raise_with_feet_on_a_swiss_ball',\n      27: 'weighted_marching_hip_raise_with_feet_on_a_swiss_ball',\n      28: 'reverse_hip_raise',\n      29: 'weighted_reverse_hip_raise',\n      30: 'single_leg_hip_raise',\n      31: 'weighted_single_leg_hip_raise',\n      32: 'single_leg_hip_raise_with_foot_on_bench',\n      33: 'weighted_single_leg_hip_raise_with_foot_on_bench',\n      34: 'single_leg_hip_raise_with_foot_on_bosu_ball',\n      35: 'weighted_single_leg_hip_raise_with_foot_on_bosu_ball',\n      36: 'single_leg_hip_raise_with_foot_on_foam_roller',\n      37: 'weighted_single_leg_hip_raise_with_foot_on_foam_roller',\n      38: 'single_leg_hip_raise_with_foot_on_medicine_ball',\n      39: 'weighted_single_leg_hip_raise_with_foot_on_medicine_ball',\n      40: 'single_leg_hip_raise_with_head_on_bosu_ball',\n      41: 'weighted_single_leg_hip_raise_with_head_on_bosu_ball',\n      42: 'weighted_clam_bridge',\n      43: 'single_leg_swiss_ball_hip_raise_and_leg_curl',\n      44: 'clams',\n      45: 'inner_thigh_circles',\n      46: 'inner_thigh_side_lift',\n      47: 'leg_circles',\n      48: 'leg_lift',\n      49: 'leg_lift_in_external_rotation'\n    },\n    hip_stability_exercise_name: {\n      0: 'band_side_lying_leg_raise',\n      1: 'dead_bug',\n      2: 'weighted_dead_bug',\n      3: 'external_hip_raise',\n      4: 'weighted_external_hip_raise',\n      5: 'fire_hydrant_kicks',\n      6: 'weighted_fire_hydrant_kicks',\n      7: 'hip_circles',\n      8: 'weighted_hip_circles',\n      9: 'inner_thigh_lift',\n      10: 'weighted_inner_thigh_lift',\n      11: 'lateral_walks_with_band_at_ankles',\n      12: 'pretzel_side_kick',\n      13: 'weighted_pretzel_side_kick',\n      14: 'prone_hip_internal_rotation',\n      15: 'weighted_prone_hip_internal_rotation',\n      16: 'quadruped',\n      17: 'quadruped_hip_extension',\n      18: 'weighted_quadruped_hip_extension',\n      19: 'quadruped_with_leg_lift',\n      20: 'weighted_quadruped_with_leg_lift',\n      21: 'side_lying_leg_raise',\n      22: 'weighted_side_lying_leg_raise',\n      23: 'sliding_hip_adduction',\n      24: 'weighted_sliding_hip_adduction',\n      25: 'standing_adduction',\n      26: 'weighted_standing_adduction',\n      27: 'standing_cable_hip_abduction',\n      28: 'standing_hip_abduction',\n      29: 'weighted_standing_hip_abduction',\n      30: 'standing_rear_leg_raise',\n      31: 'weighted_standing_rear_leg_raise',\n      32: 'supine_hip_internal_rotation',\n      33: 'weighted_supine_hip_internal_rotation'\n    },\n    hip_swing_excercise_name: {\n      0: 'single_arm_kettlebell_swing',\n      1: 'single_arm_dumbbell_swing',\n      2: 'step_out_swing'\n    },\n    hyperextension_exercise_name: {\n      0: 'back_extension_with_opposite_arm_and_leg_reach',\n      1: 'weighted_back_extension_with_opposite_arm_and_leg_reach',\n      2: 'base_rotations',\n      3: 'weighted_base_rotations',\n      4: 'bent_knee_reverse_hyperextension',\n      5: 'weighted_bent_knee_reverse_hyperextension',\n      6: 'hollow_hold_and_roll',\n      7: 'weighted_hollow_hold_and_roll',\n      8: 'kicks',\n      9: 'weighted_kicks',\n      10: 'knee_raises',\n      11: 'weighted_knee_raises',\n      12: 'kneeling_superman',\n      13: 'weighted_kneeling_superman',\n      14: 'lat_pull_down_with_row',\n      15: 'medicine_ball_deadlift_to_reach',\n      16: 'one_arm_one_leg_row',\n      17: 'one_arm_row_with_band',\n      18: 'overhead_lunge_with_medicine_ball',\n      19: 'plank_knee_tucks',\n      20: 'weighted_plank_knee_tucks',\n      21: 'side_step',\n      22: 'weighted_side_step',\n      23: 'single_leg_back_extension',\n      24: 'weighted_single_leg_back_extension',\n      25: 'spine_extension',\n      26: 'weighted_spine_extension',\n      27: 'static_back_extension',\n      28: 'weighted_static_back_extension',\n      29: 'superman_from_floor',\n      30: 'weighted_superman_from_floor',\n      31: 'swiss_ball_back_extension',\n      32: 'weighted_swiss_ball_back_extension',\n      33: 'swiss_ball_hyperextension',\n      34: 'weighted_swiss_ball_hyperextension',\n      35: 'swiss_ball_opposite_arm_and_leg_lift',\n      36: 'weighted_swiss_ball_opposite_arm_and_leg_lift',\n      37: 'superman_on_swiss_ball',\n      38: 'cobra',\n      39: 'supine_floor_barre'\n    },\n    lateral_raise_exercise_name: {\n      0: '45_degree_cable_external_rotation',\n      1: 'alternating_lateral_raise_with_static_hold',\n      2: 'bar_muscle_up',\n      3: 'bent_over_lateral_raise',\n      4: 'cable_diagonal_raise',\n      5: 'cable_front_raise',\n      6: 'calorie_row',\n      7: 'combo_shoulder_raise',\n      8: 'dumbbell_diagonal_raise',\n      9: 'dumbbell_v_raise',\n      10: 'front_raise',\n      11: 'leaning_dumbbell_lateral_raise',\n      12: 'lying_dumbbell_raise',\n      13: 'muscle_up',\n      14: 'one_arm_cable_lateral_raise',\n      15: 'overhand_grip_rear_lateral_raise',\n      16: 'plate_raises',\n      17: 'ring_dip',\n      18: 'weighted_ring_dip',\n      19: 'ring_muscle_up',\n      20: 'weighted_ring_muscle_up',\n      21: 'rope_climb',\n      22: 'weighted_rope_climb',\n      23: 'scaption',\n      24: 'seated_lateral_raise',\n      25: 'seated_rear_lateral_raise',\n      26: 'side_lying_lateral_raise',\n      27: 'standing_lift',\n      28: 'suspended_row',\n      29: 'underhand_grip_rear_lateral_raise',\n      30: 'wall_slide',\n      31: 'weighted_wall_slide',\n      32: 'arm_circles',\n      33: 'shaving_the_head'\n    },\n    leg_curl_exercise_name: {\n      0: 'leg_curl',\n      1: 'weighted_leg_curl',\n      2: 'good_morning',\n      3: 'seated_barbell_good_morning',\n      4: 'single_leg_barbell_good_morning',\n      5: 'single_leg_sliding_leg_curl',\n      6: 'sliding_leg_curl',\n      7: 'split_barbell_good_morning',\n      8: 'split_stance_extension',\n      9: 'staggered_stance_good_morning',\n      10: 'swiss_ball_hip_raise_and_leg_curl',\n      11: 'zercher_good_morning'\n    },\n    leg_raise_exercise_name: {\n      0: 'hanging_knee_raise',\n      1: 'hanging_leg_raise',\n      2: 'weighted_hanging_leg_raise',\n      3: 'hanging_single_leg_raise',\n      4: 'weighted_hanging_single_leg_raise',\n      5: 'kettlebell_leg_raises',\n      6: 'leg_lowering_drill',\n      7: 'weighted_leg_lowering_drill',\n      8: 'lying_straight_leg_raise',\n      9: 'weighted_lying_straight_leg_raise',\n      10: 'medicine_ball_leg_drops',\n      11: 'quadruped_leg_raise',\n      12: 'weighted_quadruped_leg_raise',\n      13: 'reverse_leg_raise',\n      14: 'weighted_reverse_leg_raise',\n      15: 'reverse_leg_raise_on_swiss_ball',\n      16: 'weighted_reverse_leg_raise_on_swiss_ball',\n      17: 'single_leg_lowering_drill',\n      18: 'weighted_single_leg_lowering_drill',\n      19: 'weighted_hanging_knee_raise',\n      20: 'lateral_stepover',\n      21: 'weighted_lateral_stepover'\n    },\n    lunge_exercise_name: {\n      0: 'overhead_lunge',\n      1: 'lunge_matrix',\n      2: 'weighted_lunge_matrix',\n      3: 'alternating_barbell_forward_lunge',\n      4: 'alternating_dumbbell_lunge_with_reach',\n      5: 'back_foot_elevated_dumbbell_split_squat',\n      6: 'barbell_box_lunge',\n      7: 'barbell_bulgarian_split_squat',\n      8: 'barbell_crossover_lunge',\n      9: 'barbell_front_split_squat',\n      10: 'barbell_lunge',\n      11: 'barbell_reverse_lunge',\n      12: 'barbell_side_lunge',\n      13: 'barbell_split_squat',\n      14: 'core_control_rear_lunge',\n      15: 'diagonal_lunge',\n      16: 'drop_lunge',\n      17: 'dumbbell_box_lunge',\n      18: 'dumbbell_bulgarian_split_squat',\n      19: 'dumbbell_crossover_lunge',\n      20: 'dumbbell_diagonal_lunge',\n      21: 'dumbbell_lunge',\n      22: 'dumbbell_lunge_and_rotation',\n      23: 'dumbbell_overhead_bulgarian_split_squat',\n      24: 'dumbbell_reverse_lunge_to_high_knee_and_press',\n      25: 'dumbbell_side_lunge',\n      26: 'elevated_front_foot_barbell_split_squat',\n      27: 'front_foot_elevated_dumbbell_split_squat',\n      28: 'gunslinger_lunge',\n      29: 'lawnmower_lunge',\n      30: 'low_lunge_with_isometric_adduction',\n      31: 'low_side_to_side_lunge',\n      32: 'lunge',\n      33: 'weighted_lunge',\n      34: 'lunge_with_arm_reach',\n      35: 'lunge_with_diagonal_reach',\n      36: 'lunge_with_side_bend',\n      37: 'offset_dumbbell_lunge',\n      38: 'offset_dumbbell_reverse_lunge',\n      39: 'overhead_bulgarian_split_squat',\n      40: 'overhead_dumbbell_reverse_lunge',\n      41: 'overhead_dumbbell_split_squat',\n      42: 'overhead_lunge_with_rotation',\n      43: 'reverse_barbell_box_lunge',\n      44: 'reverse_box_lunge',\n      45: 'reverse_dumbbell_box_lunge',\n      46: 'reverse_dumbbell_crossover_lunge',\n      47: 'reverse_dumbbell_diagonal_lunge',\n      48: 'reverse_lunge_with_reach_back',\n      49: 'weighted_reverse_lunge_with_reach_back',\n      50: 'reverse_lunge_with_twist_and_overhead_reach',\n      51: 'weighted_reverse_lunge_with_twist_and_overhead_reach',\n      52: 'reverse_sliding_box_lunge',\n      53: 'weighted_reverse_sliding_box_lunge',\n      54: 'reverse_sliding_lunge',\n      55: 'weighted_reverse_sliding_lunge',\n      56: 'runners_lunge_to_balance',\n      57: 'weighted_runners_lunge_to_balance',\n      58: 'shifting_side_lunge',\n      59: 'side_and_crossover_lunge',\n      60: 'weighted_side_and_crossover_lunge',\n      61: 'side_lunge',\n      62: 'weighted_side_lunge',\n      63: 'side_lunge_and_press',\n      64: 'side_lunge_jump_off',\n      65: 'side_lunge_sweep',\n      66: 'weighted_side_lunge_sweep',\n      67: 'side_lunge_to_crossover_tap',\n      68: 'weighted_side_lunge_to_crossover_tap',\n      69: 'side_to_side_lunge_chops',\n      70: 'weighted_side_to_side_lunge_chops',\n      71: 'siff_jump_lunge',\n      72: 'weighted_siff_jump_lunge',\n      73: 'single_arm_reverse_lunge_and_press',\n      74: 'sliding_lateral_lunge',\n      75: 'weighted_sliding_lateral_lunge',\n      76: 'walking_barbell_lunge',\n      77: 'walking_dumbbell_lunge',\n      78: 'walking_lunge',\n      79: 'weighted_walking_lunge',\n      80: 'wide_grip_overhead_barbell_split_squat'\n    },\n    olympic_lift_exercise_name: {\n      0: 'barbell_hang_power_clean',\n      1: 'barbell_hang_squat_clean',\n      2: 'barbell_power_clean',\n      3: 'barbell_power_snatch',\n      4: 'barbell_squat_clean',\n      5: 'clean_and_jerk',\n      6: 'barbell_hang_power_snatch',\n      7: 'barbell_hang_pull',\n      8: 'barbell_high_pull',\n      9: 'barbell_snatch',\n      10: 'barbell_split_jerk',\n      11: 'clean',\n      12: 'dumbbell_clean',\n      13: 'dumbbell_hang_pull',\n      14: 'one_hand_dumbbell_split_snatch',\n      15: 'push_jerk',\n      16: 'single_arm_dumbbell_snatch',\n      17: 'single_arm_hang_snatch',\n      18: 'single_arm_kettlebell_snatch',\n      19: 'split_jerk',\n      20: 'squat_clean_and_jerk'\n    },\n    plank_exercise_name: {\n      0: '45_degree_plank',\n      1: 'weighted_45_degree_plank',\n      2: '90_degree_static_hold',\n      3: 'weighted_90_degree_static_hold',\n      4: 'bear_crawl',\n      5: 'weighted_bear_crawl',\n      6: 'cross_body_mountain_climber',\n      7: 'weighted_cross_body_mountain_climber',\n      8: 'elbow_plank_pike_jacks',\n      9: 'weighted_elbow_plank_pike_jacks',\n      10: 'elevated_feet_plank',\n      11: 'weighted_elevated_feet_plank',\n      12: 'elevator_abs',\n      13: 'weighted_elevator_abs',\n      14: 'extended_plank',\n      15: 'weighted_extended_plank',\n      16: 'full_plank_passe_twist',\n      17: 'weighted_full_plank_passe_twist',\n      18: 'inching_elbow_plank',\n      19: 'weighted_inching_elbow_plank',\n      20: 'inchworm_to_side_plank',\n      21: 'weighted_inchworm_to_side_plank',\n      22: 'kneeling_plank',\n      23: 'weighted_kneeling_plank',\n      24: 'kneeling_side_plank_with_leg_lift',\n      25: 'weighted_kneeling_side_plank_with_leg_lift',\n      26: 'lateral_roll',\n      27: 'weighted_lateral_roll',\n      28: 'lying_reverse_plank',\n      29: 'weighted_lying_reverse_plank',\n      30: 'medicine_ball_mountain_climber',\n      31: 'weighted_medicine_ball_mountain_climber',\n      32: 'modified_mountain_climber_and_extension',\n      33: 'weighted_modified_mountain_climber_and_extension',\n      34: 'mountain_climber',\n      35: 'weighted_mountain_climber',\n      36: 'mountain_climber_on_sliding_discs',\n      37: 'weighted_mountain_climber_on_sliding_discs',\n      38: 'mountain_climber_with_feet_on_bosu_ball',\n      39: 'weighted_mountain_climber_with_feet_on_bosu_ball',\n      40: 'mountain_climber_with_hands_on_bench',\n      41: 'mountain_climber_with_hands_on_swiss_ball',\n      42: 'weighted_mountain_climber_with_hands_on_swiss_ball',\n      43: 'plank',\n      44: 'plank_jacks_with_feet_on_sliding_discs',\n      45: 'weighted_plank_jacks_with_feet_on_sliding_discs',\n      46: 'plank_knee_twist',\n      47: 'weighted_plank_knee_twist',\n      48: 'plank_pike_jumps',\n      49: 'weighted_plank_pike_jumps',\n      50: 'plank_pikes',\n      51: 'weighted_plank_pikes',\n      52: 'plank_to_stand_up',\n      53: 'weighted_plank_to_stand_up',\n      54: 'plank_with_arm_raise',\n      55: 'weighted_plank_with_arm_raise',\n      56: 'plank_with_knee_to_elbow',\n      57: 'weighted_plank_with_knee_to_elbow',\n      58: 'plank_with_oblique_crunch',\n      59: 'weighted_plank_with_oblique_crunch',\n      60: 'plyometric_side_plank',\n      61: 'weighted_plyometric_side_plank',\n      62: 'rolling_side_plank',\n      63: 'weighted_rolling_side_plank',\n      64: 'side_kick_plank',\n      65: 'weighted_side_kick_plank',\n      66: 'side_plank',\n      67: 'weighted_side_plank',\n      68: 'side_plank_and_row',\n      69: 'weighted_side_plank_and_row',\n      70: 'side_plank_lift',\n      71: 'weighted_side_plank_lift',\n      72: 'side_plank_with_elbow_on_bosu_ball',\n      73: 'weighted_side_plank_with_elbow_on_bosu_ball',\n      74: 'side_plank_with_feet_on_bench',\n      75: 'weighted_side_plank_with_feet_on_bench',\n      76: 'side_plank_with_knee_circle',\n      77: 'weighted_side_plank_with_knee_circle',\n      78: 'side_plank_with_knee_tuck',\n      79: 'weighted_side_plank_with_knee_tuck',\n      80: 'side_plank_with_leg_lift',\n      81: 'weighted_side_plank_with_leg_lift',\n      82: 'side_plank_with_reach_under',\n      83: 'weighted_side_plank_with_reach_under',\n      84: 'single_leg_elevated_feet_plank',\n      85: 'weighted_single_leg_elevated_feet_plank',\n      86: 'single_leg_flex_and_extend',\n      87: 'weighted_single_leg_flex_and_extend',\n      88: 'single_leg_side_plank',\n      89: 'weighted_single_leg_side_plank',\n      90: 'spiderman_plank',\n      91: 'weighted_spiderman_plank',\n      92: 'straight_arm_plank',\n      93: 'weighted_straight_arm_plank',\n      94: 'straight_arm_plank_with_shoulder_touch',\n      95: 'weighted_straight_arm_plank_with_shoulder_touch',\n      96: 'swiss_ball_plank',\n      97: 'weighted_swiss_ball_plank',\n      98: 'swiss_ball_plank_leg_lift',\n      99: 'weighted_swiss_ball_plank_leg_lift',\n      100: 'swiss_ball_plank_leg_lift_and_hold',\n      101: 'swiss_ball_plank_with_feet_on_bench',\n      102: 'weighted_swiss_ball_plank_with_feet_on_bench',\n      103: 'swiss_ball_prone_jackknife',\n      104: 'weighted_swiss_ball_prone_jackknife',\n      105: 'swiss_ball_side_plank',\n      106: 'weighted_swiss_ball_side_plank',\n      107: 'three_way_plank',\n      108: 'weighted_three_way_plank',\n      109: 'towel_plank_and_knee_in',\n      110: 'weighted_towel_plank_and_knee_in',\n      111: 't_stabilization',\n      112: 'weighted_t_stabilization',\n      113: 'turkish_get_up_to_side_plank',\n      114: 'weighted_turkish_get_up_to_side_plank',\n      115: 'two_point_plank',\n      116: 'weighted_two_point_plank',\n      117: 'weighted_plank',\n      118: 'wide_stance_plank_with_diagonal_arm_lift',\n      119: 'weighted_wide_stance_plank_with_diagonal_arm_lift',\n      120: 'wide_stance_plank_with_diagonal_leg_lift',\n      121: 'weighted_wide_stance_plank_with_diagonal_leg_lift',\n      122: 'wide_stance_plank_with_leg_lift',\n      123: 'weighted_wide_stance_plank_with_leg_lift',\n      124: 'wide_stance_plank_with_opposite_arm_and_leg_lift',\n      125: 'weighted_mountain_climber_with_hands_on_bench',\n      126: 'weighted_swiss_ball_plank_leg_lift_and_hold',\n      127: 'weighted_wide_stance_plank_with_opposite_arm_and_leg_lift',\n      128: 'plank_with_feet_on_swiss_ball',\n      129: 'side_plank_to_plank_with_reach_under',\n      130: 'bridge_with_glute_lower_lift',\n      131: 'bridge_one_leg_bridge',\n      132: 'plank_with_arm_variations',\n      133: 'plank_with_leg_lift',\n      134: 'reverse_plank_with_leg_pull'\n    },\n    plyo_exercise_name: {\n      0: 'alternating_jump_lunge',\n      1: 'weighted_alternating_jump_lunge',\n      2: 'barbell_jump_squat',\n      3: 'body_weight_jump_squat',\n      4: 'weighted_jump_squat',\n      5: 'cross_knee_strike',\n      6: 'weighted_cross_knee_strike',\n      7: 'depth_jump',\n      8: 'weighted_depth_jump',\n      9: 'dumbbell_jump_squat',\n      10: 'dumbbell_split_jump',\n      11: 'front_knee_strike',\n      12: 'weighted_front_knee_strike',\n      13: 'high_box_jump',\n      14: 'weighted_high_box_jump',\n      15: 'isometric_explosive_body_weight_jump_squat',\n      16: 'weighted_isometric_explosive_jump_squat',\n      17: 'lateral_leap_and_hop',\n      18: 'weighted_lateral_leap_and_hop',\n      19: 'lateral_plyo_squats',\n      20: 'weighted_lateral_plyo_squats',\n      21: 'lateral_slide',\n      22: 'weighted_lateral_slide',\n      23: 'medicine_ball_overhead_throws',\n      24: 'medicine_ball_side_throw',\n      25: 'medicine_ball_slam',\n      26: 'side_to_side_medicine_ball_throws',\n      27: 'side_to_side_shuffle_jump',\n      28: 'weighted_side_to_side_shuffle_jump',\n      29: 'squat_jump_onto_box',\n      30: 'weighted_squat_jump_onto_box',\n      31: 'squat_jumps_in_and_out',\n      32: 'weighted_squat_jumps_in_and_out'\n    },\n    pull_up_exercise_name: {\n      0: 'banded_pull_ups',\n      1: '30_degree_lat_pulldown',\n      2: 'band_assisted_chin_up',\n      3: 'close_grip_chin_up',\n      4: 'weighted_close_grip_chin_up',\n      5: 'close_grip_lat_pulldown',\n      6: 'crossover_chin_up',\n      7: 'weighted_crossover_chin_up',\n      8: 'ez_bar_pullover',\n      9: 'hanging_hurdle',\n      10: 'weighted_hanging_hurdle',\n      11: 'kneeling_lat_pulldown',\n      12: 'kneeling_underhand_grip_lat_pulldown',\n      13: 'lat_pulldown',\n      14: 'mixed_grip_chin_up',\n      15: 'weighted_mixed_grip_chin_up',\n      16: 'mixed_grip_pull_up',\n      17: 'weighted_mixed_grip_pull_up',\n      18: 'reverse_grip_pulldown',\n      19: 'standing_cable_pullover',\n      20: 'straight_arm_pulldown',\n      21: 'swiss_ball_ez_bar_pullover',\n      22: 'towel_pull_up',\n      23: 'weighted_towel_pull_up',\n      24: 'weighted_pull_up',\n      25: 'wide_grip_lat_pulldown',\n      26: 'wide_grip_pull_up',\n      27: 'weighted_wide_grip_pull_up',\n      28: 'burpee_pull_up',\n      29: 'weighted_burpee_pull_up',\n      30: 'jumping_pull_ups',\n      31: 'weighted_jumping_pull_ups',\n      32: 'kipping_pull_up',\n      33: 'weighted_kipping_pull_up',\n      34: 'l_pull_up',\n      35: 'weighted_l_pull_up',\n      36: 'suspended_chin_up',\n      37: 'weighted_suspended_chin_up',\n      38: 'pull_up'\n    },\n    push_up_exercise_name: {\n      0: 'chest_press_with_band',\n      1: 'alternating_staggered_push_up',\n      2: 'weighted_alternating_staggered_push_up',\n      3: 'alternating_hands_medicine_ball_push_up',\n      4: 'weighted_alternating_hands_medicine_ball_push_up',\n      5: 'bosu_ball_push_up',\n      6: 'weighted_bosu_ball_push_up',\n      7: 'clapping_push_up',\n      8: 'weighted_clapping_push_up',\n      9: 'close_grip_medicine_ball_push_up',\n      10: 'weighted_close_grip_medicine_ball_push_up',\n      11: 'close_hands_push_up',\n      12: 'weighted_close_hands_push_up',\n      13: 'decline_push_up',\n      14: 'weighted_decline_push_up',\n      15: 'diamond_push_up',\n      16: 'weighted_diamond_push_up',\n      17: 'explosive_crossover_push_up',\n      18: 'weighted_explosive_crossover_push_up',\n      19: 'explosive_push_up',\n      20: 'weighted_explosive_push_up',\n      21: 'feet_elevated_side_to_side_push_up',\n      22: 'weighted_feet_elevated_side_to_side_push_up',\n      23: 'hand_release_push_up',\n      24: 'weighted_hand_release_push_up',\n      25: 'handstand_push_up',\n      26: 'weighted_handstand_push_up',\n      27: 'incline_push_up',\n      28: 'weighted_incline_push_up',\n      29: 'isometric_explosive_push_up',\n      30: 'weighted_isometric_explosive_push_up',\n      31: 'judo_push_up',\n      32: 'weighted_judo_push_up',\n      33: 'kneeling_push_up',\n      34: 'weighted_kneeling_push_up',\n      35: 'medicine_ball_chest_pass',\n      36: 'medicine_ball_push_up',\n      37: 'weighted_medicine_ball_push_up',\n      38: 'one_arm_push_up',\n      39: 'weighted_one_arm_push_up',\n      40: 'weighted_push_up',\n      41: 'push_up_and_row',\n      42: 'weighted_push_up_and_row',\n      43: 'push_up_plus',\n      44: 'weighted_push_up_plus',\n      45: 'push_up_with_feet_on_swiss_ball',\n      46: 'weighted_push_up_with_feet_on_swiss_ball',\n      47: 'push_up_with_one_hand_on_medicine_ball',\n      48: 'weighted_push_up_with_one_hand_on_medicine_ball',\n      49: 'shoulder_push_up',\n      50: 'weighted_shoulder_push_up',\n      51: 'single_arm_medicine_ball_push_up',\n      52: 'weighted_single_arm_medicine_ball_push_up',\n      53: 'spiderman_push_up',\n      54: 'weighted_spiderman_push_up',\n      55: 'stacked_feet_push_up',\n      56: 'weighted_stacked_feet_push_up',\n      57: 'staggered_hands_push_up',\n      58: 'weighted_staggered_hands_push_up',\n      59: 'suspended_push_up',\n      60: 'weighted_suspended_push_up',\n      61: 'swiss_ball_push_up',\n      62: 'weighted_swiss_ball_push_up',\n      63: 'swiss_ball_push_up_plus',\n      64: 'weighted_swiss_ball_push_up_plus',\n      65: 't_push_up',\n      66: 'weighted_t_push_up',\n      67: 'triple_stop_push_up',\n      68: 'weighted_triple_stop_push_up',\n      69: 'wide_hands_push_up',\n      70: 'weighted_wide_hands_push_up',\n      71: 'parallette_handstand_push_up',\n      72: 'weighted_parallette_handstand_push_up',\n      73: 'ring_handstand_push_up',\n      74: 'weighted_ring_handstand_push_up',\n      75: 'ring_push_up',\n      76: 'weighted_ring_push_up',\n      77: 'push_up',\n      78: 'pilates_pushup'\n    },\n    row_exercise_name: {\n      0: 'barbell_straight_leg_deadlift_to_row',\n      1: 'cable_row_standing',\n      2: 'dumbbell_row',\n      3: 'elevated_feet_inverted_row',\n      4: 'weighted_elevated_feet_inverted_row',\n      5: 'face_pull',\n      6: 'face_pull_with_external_rotation',\n      7: 'inverted_row_with_feet_on_swiss_ball',\n      8: 'weighted_inverted_row_with_feet_on_swiss_ball',\n      9: 'kettlebell_row',\n      10: 'modified_inverted_row',\n      11: 'weighted_modified_inverted_row',\n      12: 'neutral_grip_alternating_dumbbell_row',\n      13: 'one_arm_bent_over_row',\n      14: 'one_legged_dumbbell_row',\n      15: 'renegade_row',\n      16: 'reverse_grip_barbell_row',\n      17: 'rope_handle_cable_row',\n      18: 'seated_cable_row',\n      19: 'seated_dumbbell_row',\n      20: 'single_arm_cable_row',\n      21: 'single_arm_cable_row_and_rotation',\n      22: 'single_arm_inverted_row',\n      23: 'weighted_single_arm_inverted_row',\n      24: 'single_arm_neutral_grip_dumbbell_row',\n      25: 'single_arm_neutral_grip_dumbbell_row_and_rotation',\n      26: 'suspended_inverted_row',\n      27: 'weighted_suspended_inverted_row',\n      28: 't_bar_row',\n      29: 'towel_grip_inverted_row',\n      30: 'weighted_towel_grip_inverted_row',\n      31: 'underhand_grip_cable_row',\n      32: 'v_grip_cable_row',\n      33: 'wide_grip_seated_cable_row'\n    },\n    shoulder_press_exercise_name: {\n      0: 'alternating_dumbbell_shoulder_press',\n      1: 'arnold_press',\n      2: 'barbell_front_squat_to_push_press',\n      3: 'barbell_push_press',\n      4: 'barbell_shoulder_press',\n      5: 'dead_curl_press',\n      6: 'dumbbell_alternating_shoulder_press_and_twist',\n      7: 'dumbbell_hammer_curl_to_lunge_to_press',\n      8: 'dumbbell_push_press',\n      9: 'floor_inverted_shoulder_press',\n      10: 'weighted_floor_inverted_shoulder_press',\n      11: 'inverted_shoulder_press',\n      12: 'weighted_inverted_shoulder_press',\n      13: 'one_arm_push_press',\n      14: 'overhead_barbell_press',\n      15: 'overhead_dumbbell_press',\n      16: 'seated_barbell_shoulder_press',\n      17: 'seated_dumbbell_shoulder_press',\n      18: 'single_arm_dumbbell_shoulder_press',\n      19: 'single_arm_step_up_and_press',\n      20: 'smith_machine_overhead_press',\n      21: 'split_stance_hammer_curl_to_press',\n      22: 'swiss_ball_dumbbell_shoulder_press',\n      23: 'weight_plate_front_raise'\n    },\n    shoulder_stability_exercise_name: {\n      0: '90_degree_cable_external_rotation',\n      1: 'band_external_rotation',\n      2: 'band_internal_rotation',\n      3: 'bent_arm_lateral_raise_and_external_rotation',\n      4: 'cable_external_rotation',\n      5: 'dumbbell_face_pull_with_external_rotation',\n      6: 'floor_i_raise',\n      7: 'weighted_floor_i_raise',\n      8: 'floor_t_raise',\n      9: 'weighted_floor_t_raise',\n      10: 'floor_y_raise',\n      11: 'weighted_floor_y_raise',\n      12: 'incline_i_raise',\n      13: 'weighted_incline_i_raise',\n      14: 'incline_l_raise',\n      15: 'weighted_incline_l_raise',\n      16: 'incline_t_raise',\n      17: 'weighted_incline_t_raise',\n      18: 'incline_w_raise',\n      19: 'weighted_incline_w_raise',\n      20: 'incline_y_raise',\n      21: 'weighted_incline_y_raise',\n      22: 'lying_external_rotation',\n      23: 'seated_dumbbell_external_rotation',\n      24: 'standing_l_raise',\n      25: 'swiss_ball_i_raise',\n      26: 'weighted_swiss_ball_i_raise',\n      27: 'swiss_ball_t_raise',\n      28: 'weighted_swiss_ball_t_raise',\n      29: 'swiss_ball_w_raise',\n      30: 'weighted_swiss_ball_w_raise',\n      31: 'swiss_ball_y_raise',\n      32: 'weighted_swiss_ball_y_raise'\n    },\n    shrug_exercise_name: {\n      0: 'barbell_jump_shrug',\n      1: 'barbell_shrug',\n      2: 'barbell_upright_row',\n      3: 'behind_the_back_smith_machine_shrug',\n      4: 'dumbbell_jump_shrug',\n      5: 'dumbbell_shrug',\n      6: 'dumbbell_upright_row',\n      7: 'incline_dumbbell_shrug',\n      8: 'overhead_barbell_shrug',\n      9: 'overhead_dumbbell_shrug',\n      10: 'scaption_and_shrug',\n      11: 'scapular_retraction',\n      12: 'serratus_chair_shrug',\n      13: 'weighted_serratus_chair_shrug',\n      14: 'serratus_shrug',\n      15: 'weighted_serratus_shrug',\n      16: 'wide_grip_jump_shrug'\n    },\n    sit_up_exercise_name: {\n      0: 'alternating_sit_up',\n      1: 'weighted_alternating_sit_up',\n      2: 'bent_knee_v_up',\n      3: 'weighted_bent_knee_v_up',\n      4: 'butterfly_sit_up',\n      5: 'weighted_butterfly_situp',\n      6: 'cross_punch_roll_up',\n      7: 'weighted_cross_punch_roll_up',\n      8: 'crossed_arms_sit_up',\n      9: 'weighted_crossed_arms_sit_up',\n      10: 'get_up_sit_up',\n      11: 'weighted_get_up_sit_up',\n      12: 'hovering_sit_up',\n      13: 'weighted_hovering_sit_up',\n      14: 'kettlebell_sit_up',\n      15: 'medicine_ball_alternating_v_up',\n      16: 'medicine_ball_sit_up',\n      17: 'medicine_ball_v_up',\n      18: 'modified_sit_up',\n      19: 'negative_sit_up',\n      20: 'one_arm_full_sit_up',\n      21: 'reclining_circle',\n      22: 'weighted_reclining_circle',\n      23: 'reverse_curl_up',\n      24: 'weighted_reverse_curl_up',\n      25: 'single_leg_swiss_ball_jackknife',\n      26: 'weighted_single_leg_swiss_ball_jackknife',\n      27: 'the_teaser',\n      28: 'the_teaser_weighted',\n      29: 'three_part_roll_down',\n      30: 'weighted_three_part_roll_down',\n      31: 'v_up',\n      32: 'weighted_v_up',\n      33: 'weighted_russian_twist_on_swiss_ball',\n      34: 'weighted_sit_up',\n      35: 'x_abs',\n      36: 'weighted_x_abs',\n      37: 'sit_up'\n    },\n    squat_exercise_name: {\n      0: 'leg_press',\n      1: 'back_squat_with_body_bar',\n      2: 'back_squats',\n      3: 'weighted_back_squats',\n      4: 'balancing_squat',\n      5: 'weighted_balancing_squat',\n      6: 'barbell_back_squat',\n      7: 'barbell_box_squat',\n      8: 'barbell_front_squat',\n      9: 'barbell_hack_squat',\n      10: 'barbell_hang_squat_snatch',\n      11: 'barbell_lateral_step_up',\n      12: 'barbell_quarter_squat',\n      13: 'barbell_siff_squat',\n      14: 'barbell_squat_snatch',\n      15: 'barbell_squat_with_heels_raised',\n      16: 'barbell_stepover',\n      17: 'barbell_step_up',\n      18: 'bench_squat_with_rotational_chop',\n      19: 'weighted_bench_squat_with_rotational_chop',\n      20: 'body_weight_wall_squat',\n      21: 'weighted_wall_squat',\n      22: 'box_step_squat',\n      23: 'weighted_box_step_squat',\n      24: 'braced_squat',\n      25: 'crossed_arm_barbell_front_squat',\n      26: 'crossover_dumbbell_step_up',\n      27: 'dumbbell_front_squat',\n      28: 'dumbbell_split_squat',\n      29: 'dumbbell_squat',\n      30: 'dumbbell_squat_clean',\n      31: 'dumbbell_stepover',\n      32: 'dumbbell_step_up',\n      33: 'elevated_single_leg_squat',\n      34: 'weighted_elevated_single_leg_squat',\n      35: 'figure_four_squats',\n      36: 'weighted_figure_four_squats',\n      37: 'goblet_squat',\n      38: 'kettlebell_squat',\n      39: 'kettlebell_swing_overhead',\n      40: 'kettlebell_swing_with_flip_to_squat',\n      41: 'lateral_dumbbell_step_up',\n      42: 'one_legged_squat',\n      43: 'overhead_dumbbell_squat',\n      44: 'overhead_squat',\n      45: 'partial_single_leg_squat',\n      46: 'weighted_partial_single_leg_squat',\n      47: 'pistol_squat',\n      48: 'weighted_pistol_squat',\n      49: 'plie_slides',\n      50: 'weighted_plie_slides',\n      51: 'plie_squat',\n      52: 'weighted_plie_squat',\n      53: 'prisoner_squat',\n      54: 'weighted_prisoner_squat',\n      55: 'single_leg_bench_get_up',\n      56: 'weighted_single_leg_bench_get_up',\n      57: 'single_leg_bench_squat',\n      58: 'weighted_single_leg_bench_squat',\n      59: 'single_leg_squat_on_swiss_ball',\n      60: 'weighted_single_leg_squat_on_swiss_ball',\n      61: 'squat',\n      62: 'weighted_squat',\n      63: 'squats_with_band',\n      64: 'staggered_squat',\n      65: 'weighted_staggered_squat',\n      66: 'step_up',\n      67: 'weighted_step_up',\n      68: 'suitcase_squats',\n      69: 'sumo_squat',\n      70: 'sumo_squat_slide_in',\n      71: 'weighted_sumo_squat_slide_in',\n      72: 'sumo_squat_to_high_pull',\n      73: 'sumo_squat_to_stand',\n      74: 'weighted_sumo_squat_to_stand',\n      75: 'sumo_squat_with_rotation',\n      76: 'weighted_sumo_squat_with_rotation',\n      77: 'swiss_ball_body_weight_wall_squat',\n      78: 'weighted_swiss_ball_wall_squat',\n      79: 'thrusters',\n      80: 'uneven_squat',\n      81: 'weighted_uneven_squat',\n      82: 'waist_slimming_squat',\n      83: 'wall_ball',\n      84: 'wide_stance_barbell_squat',\n      85: 'wide_stance_goblet_squat',\n      86: 'zercher_squat',\n      87: 'kbs_overhead',\n      88: 'squat_and_side_kick',\n      89: 'squat_jumps_in_n_out',\n      90: 'pilates_plie_squats_parallel_turned_out_flat_and_heels',\n      91: 'releve_straight_leg_and_knee_bent_with_one_leg_variation'\n    },\n    total_body_exercise_name: {\n      0: 'burpee',\n      1: 'weighted_burpee',\n      2: 'burpee_box_jump',\n      3: 'weighted_burpee_box_jump',\n      4: 'high_pull_burpee',\n      5: 'man_makers',\n      6: 'one_arm_burpee',\n      7: 'squat_thrusts',\n      8: 'weighted_squat_thrusts',\n      9: 'squat_plank_push_up',\n      10: 'weighted_squat_plank_push_up',\n      11: 'standing_t_rotation_balance',\n      12: 'weighted_standing_t_rotation_balance'\n    },\n    triceps_extension_exercise_name: {\n      0: 'bench_dip',\n      1: 'weighted_bench_dip',\n      2: 'body_weight_dip',\n      3: 'cable_kickback',\n      4: 'cable_lying_triceps_extension',\n      5: 'cable_overhead_triceps_extension',\n      6: 'dumbbell_kickback',\n      7: 'dumbbell_lying_triceps_extension',\n      8: 'ez_bar_overhead_triceps_extension',\n      9: 'incline_dip',\n      10: 'weighted_incline_dip',\n      11: 'incline_ez_bar_lying_triceps_extension',\n      12: 'lying_dumbbell_pullover_to_extension',\n      13: 'lying_ez_bar_triceps_extension',\n      14: 'lying_triceps_extension_to_close_grip_bench_press',\n      15: 'overhead_dumbbell_triceps_extension',\n      16: 'reclining_triceps_press',\n      17: 'reverse_grip_pressdown',\n      18: 'reverse_grip_triceps_pressdown',\n      19: 'rope_pressdown',\n      20: 'seated_barbell_overhead_triceps_extension',\n      21: 'seated_dumbbell_overhead_triceps_extension',\n      22: 'seated_ez_bar_overhead_triceps_extension',\n      23: 'seated_single_arm_overhead_dumbbell_extension',\n      24: 'single_arm_dumbbell_overhead_triceps_extension',\n      25: 'single_dumbbell_seated_overhead_triceps_extension',\n      26: 'single_leg_bench_dip_and_kick',\n      27: 'weighted_single_leg_bench_dip_and_kick',\n      28: 'single_leg_dip',\n      29: 'weighted_single_leg_dip',\n      30: 'static_lying_triceps_extension',\n      31: 'suspended_dip',\n      32: 'weighted_suspended_dip',\n      33: 'swiss_ball_dumbbell_lying_triceps_extension',\n      34: 'swiss_ball_ez_bar_lying_triceps_extension',\n      35: 'swiss_ball_ez_bar_overhead_triceps_extension',\n      36: 'tabletop_dip',\n      37: 'weighted_tabletop_dip',\n      38: 'triceps_extension_on_floor',\n      39: 'triceps_pressdown',\n      40: 'weighted_dip'\n    },\n    warm_up_exercise_name: {\n      0: 'quadruped_rocking',\n      1: 'neck_tilts',\n      2: 'ankle_circles',\n      3: 'ankle_dorsiflexion_with_band',\n      4: 'ankle_internal_rotation',\n      5: 'arm_circles',\n      6: 'bent_over_reach_to_sky',\n      7: 'cat_camel',\n      8: 'elbow_to_foot_lunge',\n      9: 'forward_and_backward_leg_swings',\n      10: 'groiners',\n      11: 'inverted_hamstring_stretch',\n      12: 'lateral_duck_under',\n      13: 'neck_rotations',\n      14: 'opposite_arm_and_leg_balance',\n      15: 'reach_roll_and_lift',\n      16: 'scorpion',\n      17: 'shoulder_circles',\n      18: 'side_to_side_leg_swings',\n      19: 'sleeper_stretch',\n      20: 'slide_out',\n      21: 'swiss_ball_hip_crossover',\n      22: 'swiss_ball_reach_roll_and_lift',\n      23: 'swiss_ball_windshield_wipers',\n      24: 'thoracic_rotation',\n      25: 'walking_high_kicks',\n      26: 'walking_high_knees',\n      27: 'walking_knee_hugs',\n      28: 'walking_leg_cradles',\n      29: 'walkout',\n      30: 'walkout_from_push_up_position'\n    },\n    run_exercise_name: {\n      0: 'run',\n      1: 'walk',\n      2: 'jog',\n      3: 'sprint'\n    },\n    water_type: {\n      0: 'fresh',\n      1: 'salt',\n      2: 'en13319',\n      3: 'custom'\n    },\n    tissue_model_type: {\n      0: 'zhl_16c'\n    },\n    dive_gas_status: {\n      0: 'disabled',\n      1: 'enabled',\n      2: 'backup_only'\n    },\n    dive_alarm_type: {\n      0: 'depth',\n      1: 'time'\n    },\n    dive_backlight_mode: {\n      0: 'at_depth',\n      1: 'always_on'\n    },\n    favero_product: {\n      10: 'assioma_uno',\n      12: 'assioma_duo'\n    }\n  }\n};\n\nfunction getMessageName(messageNum) {\n  var message = FIT.messages[messageNum];\n  return message ? message.name : '';\n}\n\nfunction getFieldObject(fieldNum, messageNum) {\n  var message = FIT.messages[messageNum];\n  if (!message) {\n    return '';\n  }\n  var fieldObj = message[fieldNum];\n  return fieldObj ? fieldObj : {};\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFitMessage = getFitMessage;\nexports.getFitMessageBaseType = getFitMessageBaseType;\n\nvar _fit = require('./fit');\n\nfunction getFitMessage(messageNum) {\n  return {\n    name: (0, _fit.getMessageName)(messageNum),\n    getAttributes: function getAttributes(fieldNum) {\n      return (0, _fit.getFieldObject)(fieldNum, messageNum);\n    }\n  };\n}\n\n// TODO\nfunction getFitMessageBaseType(foo) {\n  return foo;\n}", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.addEndian = addEndian;\nexports.readRecord = readRecord;\nexports.getArrayBuffer = getArrayBuffer;\nexports.calculateCRC = calculateCRC;\n\nvar _fit = require('./fit');\n\nvar _messages = require('./messages');\n\nvar _buffer = require('buffer');\n\nfunction addEndian(littleEndian, bytes) {\n    var result = 0;\n    if (!littleEndian) bytes.reverse();\n    for (var i = 0; i < bytes.length; i++) {\n        result += bytes[i] << (i << 3) >>> 0;\n    }\n\n    return result;\n}\n\nvar timestamp = 0;\nvar lastTimeOffset = 0;\nvar CompressedTimeMask = 31;\nvar CompressedLocalMesgNumMask = 0x60;\nvar CompressedHeaderMask = 0x80;\nvar GarminTimeOffset = 631065600000;\nvar monitoring_timestamp = 0;\n\nfunction readData(blob, fDef, startIndex, options) {\n    if (fDef.endianAbility === true) {\n        var temp = [];\n        for (var i = 0; i < fDef.size; i++) {\n            temp.push(blob[startIndex + i]);\n        }\n\n        var buffer = new Uint8Array(temp).buffer;\n        var dataView = new DataView(buffer);\n\n        try {\n            switch (fDef.type) {\n                case 'sint16':\n                    return dataView.getInt16(0, fDef.littleEndian);\n                case 'uint16':\n                case 'uint16z':\n                    return dataView.getUint16(0, fDef.littleEndian);\n                case 'sint32':\n                    return dataView.getInt32(0, fDef.littleEndian);\n                case 'uint32':\n                case 'uint32z':\n                    return dataView.getUint32(0, fDef.littleEndian);\n                case 'float32':\n                    return dataView.getFloat32(0, fDef.littleEndian);\n                case 'float64':\n                    return dataView.getFloat64(0, fDef.littleEndian);\n                case 'uint32_array':\n                    var array32 = [];\n                    for (var _i = 0; _i < fDef.size; _i += 4) {\n                        array32.push(dataView.getUint32(_i, fDef.littleEndian));\n                    }\n                    return array32;\n                case 'uint16_array':\n                    var array = [];\n                    for (var _i2 = 0; _i2 < fDef.size; _i2 += 2) {\n                        array.push(dataView.getUint16(_i2, fDef.littleEndian));\n                    }\n                    return array;\n            }\n        } catch (e) {\n            if (!options.force) {\n                throw e;\n            }\n        }\n\n        return addEndian(fDef.littleEndian, temp);\n    }\n\n    if (fDef.type === 'string') {\n        var _temp = [];\n        for (var _i3 = 0; _i3 < fDef.size; _i3++) {\n            if (blob[startIndex + _i3]) {\n                _temp.push(blob[startIndex + _i3]);\n            }\n        }\n        return new _buffer.Buffer.from(_temp).toString('utf-8');\n    }\n\n    if (fDef.type === 'byte_array') {\n        var _temp2 = [];\n        for (var _i4 = 0; _i4 < fDef.size; _i4++) {\n            _temp2.push(blob[startIndex + _i4]);\n        }\n        return _temp2;\n    }\n\n    return blob[startIndex];\n}\n\nfunction formatByType(data, type, scale, offset) {\n    switch (type) {\n        case 'date_time':\n        case 'local_date_time':\n            return new Date(data * 1000 + GarminTimeOffset);\n        case 'sint32':\n            return data * _fit.FIT.scConst;\n        case 'uint8':\n        case 'sint16':\n        case 'uint32':\n        case 'uint16':\n            return scale ? data / scale + offset : data;\n        case 'uint32_array':\n        case 'uint16_array':\n            return data.map(function (dataItem) {\n                return scale ? dataItem / scale + offset : dataItem;\n            });\n        default:\n            if (!_fit.FIT.types[type]) {\n                return data;\n            }\n            // Quick check for a mask\n            var values = [];\n            for (var key in _fit.FIT.types[type]) {\n                if (_fit.FIT.types[type].hasOwnProperty(key)) {\n                    values.push(_fit.FIT.types[type][key]);\n                }\n            }\n            if (values.indexOf('mask') === -1) {\n                return _fit.FIT.types[type][data];\n            }\n            var dataItem = {};\n            for (var key in _fit.FIT.types[type]) {\n                if (_fit.FIT.types[type].hasOwnProperty(key)) {\n                    if (_fit.FIT.types[type][key] === 'mask') {\n                        dataItem.value = data & key;\n                    } else {\n                        dataItem[_fit.FIT.types[type][key]] = !!((data & key) >> 7); // Not sure if we need the >> 7 and casting to boolean but from all the masked props of fields so far this seems to be the case\n                    }\n                }\n            }\n            return dataItem;\n    }\n}\n\nfunction isInvalidValue(data, type) {\n    switch (type) {\n        case 'enum':\n            return data === 0xFF;\n        case 'sint8':\n            return data === 0x7F;\n        case 'uint8':\n            return data === 0xFF;\n        case 'sint16':\n            return data === 0x7FFF;\n        case 'uint16':\n            return data === 0xFFFF;\n        case 'sint32':\n            return data === 0x7FFFFFFF;\n        case 'uint32':\n            return data === 0xFFFFFFFF;\n        case 'string':\n            return data === 0x00;\n        case 'float32':\n            return data === 0xFFFFFFFF;\n        case 'float64':\n            return data === 0xFFFFFFFFFFFFFFFF;\n        case 'uint8z':\n            return data === 0x00;\n        case 'uint16z':\n            return data === 0x0000;\n        case 'uint32z':\n            return data === 0x000000;\n        case 'byte':\n            return data === 0xFF;\n        case 'sint64':\n            return data === 0x7FFFFFFFFFFFFFFF;\n        case 'uint64':\n            return data === 0xFFFFFFFFFFFFFFFF;\n        case 'uint64z':\n            return data === 0x0000000000000000;\n        default:\n            return false;\n    }\n}\n\nfunction convertTo(data, unitsList, speedUnit) {\n    var unitObj = _fit.FIT.options[unitsList][speedUnit];\n    return unitObj ? data * unitObj.multiplier + unitObj.offset : data;\n}\n\nfunction applyOptions(data, field, options) {\n    switch (field) {\n        case 'speed':\n        case 'enhanced_speed':\n        case 'vertical_speed':\n        case 'avg_speed':\n        case 'max_speed':\n        case 'speed_1s':\n        case 'ball_speed':\n        case 'enhanced_avg_speed':\n        case 'enhanced_max_speed':\n        case 'avg_pos_vertical_speed':\n        case 'max_pos_vertical_speed':\n        case 'avg_neg_vertical_speed':\n        case 'max_neg_vertical_speed':\n            return convertTo(data, 'speedUnits', options.speedUnit);\n        case 'distance':\n        case 'total_distance':\n        case 'enhanced_avg_altitude':\n        case 'enhanced_min_altitude':\n        case 'enhanced_max_altitude':\n        case 'enhanced_altitude':\n        case 'height':\n        case 'odometer':\n        case 'avg_stroke_distance':\n        case 'min_altitude':\n        case 'avg_altitude':\n        case 'max_altitude':\n        case 'total_ascent':\n        case 'total_descent':\n        case 'altitude':\n        case 'cycle_length':\n        case 'auto_wheelsize':\n        case 'custom_wheelsize':\n        case 'gps_accuracy':\n            return convertTo(data, 'lengthUnits', options.lengthUnit);\n        case 'temperature':\n        case 'avg_temperature':\n        case 'max_temperature':\n            return convertTo(data, 'temperatureUnits', options.temperatureUnit);\n        case 'pressure':\n        case 'start_pressure':\n        case 'end_pressure':\n            return convertTo(data, 'pressureUnits', options.pressureUnit);\n        default:\n            return data;\n    }\n}\n\nfunction readRecord(blob, messageTypes, developerFields, startIndex, options, startDate, pausedTime) {\n    var recordHeader = blob[startIndex];\n    var localMessageType = recordHeader & 15;\n\n    if ((recordHeader & CompressedHeaderMask) === CompressedHeaderMask) {\n        //compressed timestamp\n\n        var timeoffset = recordHeader & CompressedTimeMask;\n        timestamp += timeoffset - lastTimeOffset & CompressedTimeMask;\n        lastTimeOffset = timeoffset;\n\n        localMessageType = (recordHeader & CompressedLocalMesgNumMask) >> 5;\n    } else if ((recordHeader & 64) === 64) {\n        // is definition message\n        // startIndex + 1 is reserved\n\n        var hasDeveloperData = (recordHeader & 32) === 32;\n        var lEnd = blob[startIndex + 2] === 0;\n        var numberOfFields = blob[startIndex + 5];\n        var numberOfDeveloperDataFields = hasDeveloperData ? blob[startIndex + 5 + numberOfFields * 3 + 1] : 0;\n\n        var mTypeDef = {\n            littleEndian: lEnd,\n            globalMessageNumber: addEndian(lEnd, [blob[startIndex + 3], blob[startIndex + 4]]),\n            numberOfFields: numberOfFields + numberOfDeveloperDataFields,\n            fieldDefs: []\n        };\n\n        var _message = (0, _messages.getFitMessage)(mTypeDef.globalMessageNumber);\n\n        for (var i = 0; i < numberOfFields; i++) {\n            var fDefIndex = startIndex + 6 + i * 3;\n            var baseType = blob[fDefIndex + 2];\n\n            var _message$getAttribute = _message.getAttributes(blob[fDefIndex]),\n                field = _message$getAttribute.field,\n                type = _message$getAttribute.type;\n\n            var fDef = {\n                type: type,\n                fDefNo: blob[fDefIndex],\n                size: blob[fDefIndex + 1],\n                endianAbility: (baseType & 128) === 128,\n                littleEndian: lEnd,\n                baseTypeNo: baseType & 15,\n                name: field,\n                dataType: (0, _messages.getFitMessageBaseType)(baseType & 15)\n            };\n\n            mTypeDef.fieldDefs.push(fDef);\n        }\n\n        // numberOfDeveloperDataFields = 0 so it wont crash here and wont loop\n        for (var _i5 = 0; _i5 < numberOfDeveloperDataFields; _i5++) {\n            // If we fail to parse then try catch\n            try {\n                var _fDefIndex = startIndex + 6 + numberOfFields * 3 + 1 + _i5 * 3;\n\n                var fieldNum = blob[_fDefIndex];\n                var size = blob[_fDefIndex + 1];\n                var devDataIndex = blob[_fDefIndex + 2];\n\n                var devDef = developerFields[devDataIndex][fieldNum];\n\n                var _baseType = devDef.fit_base_type_id;\n\n                var _fDef = {\n                    type: _fit.FIT.types.fit_base_type[_baseType],\n                    fDefNo: fieldNum,\n                    size: size,\n                    endianAbility: (_baseType & 128) === 128,\n                    littleEndian: lEnd,\n                    baseTypeNo: _baseType & 15,\n                    name: devDef.field_name,\n                    dataType: (0, _messages.getFitMessageBaseType)(_baseType & 15),\n                    scale: devDef.scale || 1,\n                    offset: devDef.offset || 0,\n                    developerDataIndex: devDataIndex,\n                    isDeveloperField: true\n                };\n\n                mTypeDef.fieldDefs.push(_fDef);\n            } catch (e) {\n                if (options.force) {\n                    continue;\n                }\n                throw e;\n            }\n        }\n\n        messageTypes[localMessageType] = mTypeDef;\n\n        var nextIndex = startIndex + 6 + mTypeDef.numberOfFields * 3;\n        var nextIndexWithDeveloperData = nextIndex + 1;\n\n        return {\n            messageType: 'definition',\n            nextIndex: hasDeveloperData ? nextIndexWithDeveloperData : nextIndex\n        };\n    }\n\n    var messageType = messageTypes[localMessageType] || messageTypes[0];\n\n    // TODO: handle compressed header ((recordHeader & 128) == 128)\n\n    // uncompressed header\n    var messageSize = 0;\n    var readDataFromIndex = startIndex + 1;\n    var fields = {};\n    var message = (0, _messages.getFitMessage)(messageType.globalMessageNumber);\n\n    for (var _i6 = 0; _i6 < messageType.fieldDefs.length; _i6++) {\n        var _fDef2 = messageType.fieldDefs[_i6];\n        var data = readData(blob, _fDef2, readDataFromIndex, options);\n\n        if (!isInvalidValue(data, _fDef2.type)) {\n            if (_fDef2.isDeveloperField) {\n\n                var field = _fDef2.name;\n                var type = _fDef2.type;\n                var scale = _fDef2.scale;\n                var offset = _fDef2.offset;\n\n                fields[_fDef2.name] = applyOptions(formatByType(data, type, scale, offset), field, options);\n            } else {\n                var _message$getAttribute2 = message.getAttributes(_fDef2.fDefNo),\n                    _field = _message$getAttribute2.field,\n                    _type = _message$getAttribute2.type,\n                    _scale = _message$getAttribute2.scale,\n                    _offset = _message$getAttribute2.offset;\n\n                if (_field !== 'unknown' && _field !== '' && _field !== undefined) {\n                    fields[_field] = applyOptions(formatByType(data, _type, _scale, _offset), _field, options);\n                }\n            }\n\n            if (message.name === 'record' && options.elapsedRecordField) {\n                fields.elapsed_time = (fields.timestamp - startDate) / 1000;\n                fields.timer_time = fields.elapsed_time - pausedTime;\n            }\n        }\n\n        readDataFromIndex += _fDef2.size;\n        messageSize += _fDef2.size;\n    }\n\n    if (message.name === 'field_description') {\n        developerFields[fields.developer_data_index] = developerFields[fields.developer_data_index] || [];\n        developerFields[fields.developer_data_index][fields.field_definition_number] = fields;\n    }\n\n    if (message.name === 'monitoring') {\n        //we need to keep the raw timestamp value so we can calculate subsequent timestamp16 fields\n        if (fields.timestamp) {\n            monitoring_timestamp = fields.timestamp;\n            fields.timestamp = new Date(fields.timestamp * 1000 + GarminTimeOffset);\n        }\n        if (fields.timestamp16 && !fields.timestamp) {\n            monitoring_timestamp += fields.timestamp16 - (monitoring_timestamp & 0xFFFF) & 0xFFFF;\n            //fields.timestamp = monitoring_timestamp;\n            fields.timestamp = new Date(monitoring_timestamp * 1000 + GarminTimeOffset);\n        }\n    }\n\n    var result = {\n        messageType: message.name,\n        nextIndex: startIndex + messageSize + 1,\n        message: fields\n    };\n\n    return result;\n}\n\nfunction getArrayBuffer(buffer) {\n    if (buffer instanceof ArrayBuffer) {\n        return buffer;\n    }\n    var ab = new ArrayBuffer(buffer.length);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i < buffer.length; ++i) {\n        view[i] = buffer[i];\n    }\n    return ab;\n}\n\nfunction calculateCRC(blob, start, end) {\n    var crcTable = [0x0000, 0xCC01, 0xD801, 0x1400, 0xF001, 0x3C00, 0x2800, 0xE401, 0xA001, 0x6C00, 0x7800, 0xB401, 0x5000, 0x9C01, 0x8801, 0x4400];\n\n    var crc = 0;\n    for (var i = start; i < end; i++) {\n        var byteVal = blob[i];\n        var tmp = crcTable[crc & 0xF];\n        crc = crc >> 4 & 0x0FFF;\n        crc = crc ^ tmp ^ crcTable[byteVal & 0xF];\n        tmp = crcTable[crc & 0xF];\n        crc = crc >> 4 & 0x0FFF;\n        crc = crc ^ tmp ^ crcTable[byteVal >> 4 & 0xF];\n    }\n\n    return crc;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar mapDataIntoLap = exports.mapDataIntoLap = function mapDataIntoLap(inputLaps, lapKey, data) {\n  var laps = [].concat(_toConsumableArray(inputLaps));\n  var index = 0;\n  for (var i = 0; i < laps.length; i++) {\n    var lap = laps[i];\n    var nextLap = laps[i + 1];\n    var tempData = [];\n    var lapStartTime = new Date(lap.start_time).getTime();\n    var nextLapStartTime = nextLap ? new Date(nextLap.start_time).getTime() : null;\n    for (var j = index; j < data.length; j++) {\n      var row = data[j];\n      if (nextLap) {\n        var timestamp = new Date(row.timestamp).getTime();\n        if (lapStartTime <= timestamp && nextLapStartTime > timestamp) {\n          tempData.push(row);\n        } else if (nextLapStartTime <= timestamp) {\n          index = j;\n          break;\n        }\n      } else {\n        tempData.push(row);\n      }\n    }\n\n    if (!laps[i][lapKey]) {\n      laps[i][lapKey] = tempData;\n    }\n  }\n\n  return laps;\n};\n\nvar mapDataIntoSession = exports.mapDataIntoSession = function mapDataIntoSession(inputSessions, laps) {\n  var sessions = [].concat(_toConsumableArray(inputSessions));\n  var lapIndex = 0;\n  for (var i = 0; i < sessions.length; i++) {\n    var session = sessions[i];\n    var nextSession = sessions[i + 1];\n    var tempLaps = [];\n    var sessionStartTime = new Date(session.start_time).getTime();\n    var nextSessionStartTime = nextSession ? new Date(nextSession.start_time).getTime() : null;\n    for (var j = lapIndex; j < laps.length; j++) {\n      var lap = laps[j];\n      if (nextSession) {\n        var lapStartTime = new Date(lap.start_time).getTime();\n        if (sessionStartTime <= lapStartTime && nextSessionStartTime > lapStartTime) {\n          tempLaps.push(lap);\n        } else if (nextSessionStartTime <= lapStartTime) {\n          lapIndex = j;\n          break;\n        }\n      } else {\n        tempLaps.push(lap);\n      }\n    }\n\n    if (!sessions[i].laps) {\n      sessions[i].laps = tempLaps;\n    }\n  }\n  return sessions;\n};", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _binary = require('./binary');\n\nvar _helper = require('./helper');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FitParser = function () {\n  function FitParser() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, FitParser);\n\n    this.options = {\n      force: options.force != null ? options.force : true,\n      speedUnit: options.speedUnit || 'm/s',\n      lengthUnit: options.lengthUnit || 'm',\n      temperatureUnit: options.temperatureUnit || 'celsius',\n      elapsedRecordField: options.elapsedRecordField || false,\n      pressureUnit: options.pressureUnit || 'bar',\n      mode: options.mode || 'list'\n    };\n  }\n\n  _createClass(FitParser, [{\n    key: 'parse',\n    value: function parse(content, callback) {\n      var blob = new Uint8Array((0, _binary.getArrayBuffer)(content));\n\n      if (blob.length < 12) {\n        callback('File to small to be a FIT file', {});\n        if (!this.options.force) {\n          return;\n        }\n      }\n\n      var headerLength = blob[0];\n      if (headerLength !== 14 && headerLength !== 12) {\n        callback('Incorrect header size', {});\n        if (!this.options.force) {\n          return;\n        }\n      }\n\n      var fileTypeString = '';\n      for (var i = 8; i < 12; i++) {\n        fileTypeString += String.fromCharCode(blob[i]);\n      }\n      if (fileTypeString !== '.FIT') {\n        callback('Missing \\'.FIT\\' in header', {});\n        if (!this.options.force) {\n          return;\n        }\n      }\n\n      if (headerLength === 14) {\n        var crcHeader = blob[12] + (blob[13] << 8);\n        var crcHeaderCalc = (0, _binary.calculateCRC)(blob, 0, 12);\n        if (crcHeader !== crcHeaderCalc) {\n          // callback('Header CRC mismatch', {});\n          // TODO: fix Header CRC check\n          if (!this.options.force) {\n            return;\n          }\n        }\n      }\n\n      var protocolVersion = blob[1];\n      var profileVersion = blob[2] + (blob[3] << 8);\n      var dataLength = blob[4] + (blob[5] << 8) + (blob[6] << 16) + (blob[7] << 24);\n      var crcStart = dataLength + headerLength;\n      var crcFile = blob[crcStart] + (blob[crcStart + 1] << 8);\n      var crcFileCalc = (0, _binary.calculateCRC)(blob, headerLength === 12 ? 0 : headerLength, crcStart);\n\n      if (crcFile !== crcFileCalc) {\n        // callback('File CRC mismatch', {});\n        // TODO: fix File CRC check\n        if (!this.options.force) {\n          return;\n        }\n      }\n\n      var fitObj = {};\n      fitObj.protocolVersion = protocolVersion;\n      fitObj.profileVersion = profileVersion;\n\n      var sessions = [];\n      var laps = [];\n      var records = [];\n      var events = [];\n      var hrv = [];\n      var devices = [];\n      var applications = [];\n      var fieldDescriptions = [];\n      var dive_gases = [];\n      var course_points = [];\n      var sports = [];\n      var monitors = [];\n      var stress = [];\n      var definitions = [];\n      var file_ids = [];\n      var monitor_info = [];\n      var lengths = [];\n      var tank_updates = [];\n      var tank_summaries = [];\n\n      var loopIndex = headerLength;\n      var messageTypes = [];\n      var developerFields = [];\n\n      var isModeCascade = this.options.mode === 'cascade';\n      var isCascadeNeeded = isModeCascade || this.options.mode === 'both';\n\n      var startDate = void 0;\n      var lastStopTimestamp = void 0;\n      var pausedTime = 0;\n\n      while (loopIndex < crcStart) {\n        var _readRecord = (0, _binary.readRecord)(blob, messageTypes, developerFields, loopIndex, this.options, startDate, pausedTime),\n            nextIndex = _readRecord.nextIndex,\n            messageType = _readRecord.messageType,\n            message = _readRecord.message;\n\n        loopIndex = nextIndex;\n\n        switch (messageType) {\n          case 'lap':\n            laps.push(message);\n            break;\n          case 'session':\n            sessions.push(message);\n            break;\n          case 'event':\n            if (message.event === 'timer') {\n              if (message.event_type === 'stop_all') {\n                lastStopTimestamp = message.timestamp;\n              } else if (message.event_type === 'start' && lastStopTimestamp) {\n                pausedTime += (message.timestamp - lastStopTimestamp) / 1000;\n              }\n            }\n            events.push(message);\n            break;\n          case 'length':\n            lengths.push(message);\n            break;\n          case 'hrv':\n            hrv.push(message);\n            break;\n          case 'record':\n            if (!startDate) {\n              startDate = message.timestamp;\n              message.elapsed_time = 0;\n              message.timer_time = 0;\n            }\n            records.push(message);\n            break;\n          case 'field_description':\n            fieldDescriptions.push(message);\n            break;\n          case 'device_info':\n            devices.push(message);\n            break;\n          case 'developer_data_id':\n            applications.push(message);\n            break;\n          case 'dive_gas':\n            dive_gases.push(message);\n            break;\n          case 'course_point':\n            course_points.push(message);\n            break;\n          case 'sport':\n            sports.push(message);\n            break;\n          case 'file_id':\n            if (message) {\n              file_ids.push(message);\n            }\n            break;\n          case 'definition':\n            if (message) {\n              definitions.push(message);\n            }\n            break;\n          case 'monitoring':\n            monitors.push(message);\n            break;\n          case 'monitoring_info':\n            monitor_info.push(message);\n            break;\n          case 'stress_level':\n            stress.push(message);\n            break;\n          case 'software':\n            fitObj.software = message;\n            break;\n          case 'tank_update':\n            tank_updates.push(message);\n            break;\n          case 'tank_summary':\n            tank_summaries.push(message);\n            break;\n          default:\n            if (messageType !== '') {\n              fitObj[messageType] = message;\n            }\n            break;\n        }\n      }\n\n      if (isCascadeNeeded) {\n        fitObj.activity = fitObj.activity || {};\n        laps = (0, _helper.mapDataIntoLap)(laps, 'records', records);\n        laps = (0, _helper.mapDataIntoLap)(laps, 'lengths', lengths);\n        sessions = (0, _helper.mapDataIntoSession)(sessions, laps);\n        fitObj.activity.sessions = sessions;\n        fitObj.activity.events = events;\n        fitObj.activity.hrv = hrv;\n        fitObj.activity.device_infos = devices;\n        fitObj.activity.developer_data_ids = applications;\n        fitObj.activity.field_descriptions = fieldDescriptions;\n        fitObj.activity.sports = sports;\n      }\n      if (!isModeCascade) {\n        fitObj.sessions = sessions;\n        fitObj.laps = laps;\n        fitObj.lengths = lengths;\n        fitObj.records = records;\n        fitObj.events = events;\n        fitObj.device_infos = devices;\n        fitObj.developer_data_ids = applications;\n        fitObj.field_descriptions = fieldDescriptions;\n        fitObj.hrv = hrv;\n        fitObj.dive_gases = dive_gases;\n        fitObj.course_points = course_points;\n        fitObj.sports = sports;\n        fitObj.devices = devices;\n        fitObj.monitors = monitors;\n        fitObj.stress = stress;\n        fitObj.file_ids = file_ids;\n        fitObj.monitor_info = monitor_info;\n        fitObj.definitions = definitions;\n        fitObj.tank_updates = tank_updates;\n        fitObj.tank_summaries = tank_summaries;\n      }\n\n      callback(null, fitObj);\n    }\n  }]);\n\n  return FitParser;\n}();\n\nexports.default = FitParser;"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,iBAAiB;AACzB,YAAQ,iBAAiB;AAEzB,QAAI,uBAAuB;AAC3B,QAAI,mBAAmB;AAEvB,QAAI,kBAAkB;AACtB,QAAI,oBAAoB;AACxB,QAAI,cAAc;AAElB,QAAI,MAAM,QAAQ,MAAM;AAAA,MACtB,SAAS,MAAM,KAAK,IAAI,GAAG,EAAE;AAAA,MAC7B,SAAS;AAAA,QACP,YAAY;AAAA;AAAA,UAEV,OAAO;AAAA,YACL,YAAY;AAAA,YACZ,QAAQ;AAAA,UACV;AAAA;AAAA,UAEA,KAAK;AAAA,YACH,YAAY,mBAAmB;AAAA,YAC/B,QAAQ;AAAA,UACV;AAAA;AAAA,UAEA,QAAQ;AAAA,YACN,YAAY,mBAAmB;AAAA,YAC/B,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,aAAa;AAAA;AAAA,UAEX,GAAG;AAAA,YACD,YAAY;AAAA,YACZ,QAAQ;AAAA,UACV;AAAA;AAAA,UAEA,IAAI;AAAA,YACF,YAAY,IAAI;AAAA,YAChB,QAAQ;AAAA,UACV;AAAA;AAAA,UAEA,IAAI;AAAA,YACF,YAAY,IAAI;AAAA,YAChB,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA;AAAA,UAEhB,MAAM;AAAA,YACJ,YAAY;AAAA,YACZ,QAAQ;AAAA,UACV;AAAA;AAAA,UAEA,QAAQ;AAAA,YACN,YAAY;AAAA,YACZ,QAAQ;AAAA,UACV;AAAA;AAAA,UAEA,YAAY;AAAA,YACV,YAAY,IAAI;AAAA,YAChB,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,eAAe;AAAA,UACb,MAAM;AAAA,YACJ,YAAY;AAAA,YACZ,QAAQ;AAAA,UACV;AAAA,UACA,KAAK;AAAA,YACH,YAAY,IAAI;AAAA,YAChB,QAAQ;AAAA,UACV;AAAA,UACA,KAAK;AAAA,YACH,YAAY,IAAI,oBAAoB;AAAA,YACpC,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR,GAAG;AAAA,UACD,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,QAAQ,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACrE,GAAG,EAAE,OAAO,gBAAgB,MAAM,gBAAgB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACrF,GAAG,EAAE,OAAO,WAAW,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC1E,GAAG,EAAE,OAAO,iBAAiB,MAAM,WAAW,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACjF,GAAG,EAAE,OAAO,gBAAgB,MAAM,aAAa,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAClF,GAAG,EAAE,OAAO,UAAU,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzE,GAAG,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QACjF;AAAA,QACA,GAAG;AAAA,UACD,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC5E,GAAG,EAAE,OAAO,UAAU,MAAM,gBAAgB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC/E,IAAI,EAAE,OAAO,sBAAsB,MAAM,wBAAwB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACpG,IAAI,EAAE,OAAO,0BAA0B,MAAM,6BAA6B,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QAC/G;AAAA,QACA,GAAG;AAAA,UACD,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,oBAAoB,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAClF,GAAG,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC7E,GAAG,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,IAAI;AAAA,UAC/E,GAAG,EAAE,OAAO,oBAAoB,MAAM,SAAS,OAAO,GAAG,QAAQ,IAAI,OAAO,KAAK;AAAA,UACjF,IAAI,EAAE,OAAO,uBAAuB,MAAM,uBAAuB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACpG,IAAI,EAAE,OAAO,iBAAiB,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC/E,IAAI,EAAE,OAAO,qBAAqB,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACpF,IAAI,EAAE,OAAO,0CAA0C,MAAM,uBAAuB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QACzH;AAAA,QACA,GAAG;AAAA,UACD,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,GAAG,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,GAAG,EAAE,OAAO,UAAU,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxE,GAAG,EAAE,OAAO,OAAO,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACzE,GAAG,EAAE,OAAO,UAAU,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UACvE,GAAG,EAAE,OAAO,UAAU,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,KAAK;AAAA,UACxE,GAAG,EAAE,OAAO,YAAY,MAAM,YAAY,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC5E,GAAG,EAAE,OAAO,gBAAgB,MAAM,mBAAmB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACvF,GAAG,EAAE,OAAO,kBAAkB,MAAM,mBAAmB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACzF,GAAG,EAAE,OAAO,sBAAsB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACtF,GAAG,EAAE,OAAO,kCAAkC,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAClG,IAAI,EAAE,OAAO,iCAAiC,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAClG,IAAI,EAAE,OAAO,0BAA0B,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC3F,IAAI,EAAE,OAAO,cAAc,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACpF,IAAI,EAAE,OAAO,iBAAiB,MAAM,mBAAmB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACzF,IAAI,EAAE,OAAO,gBAAgB,MAAM,mBAAmB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,IAAI,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACvF,IAAI,EAAE,OAAO,kBAAkB,MAAM,kBAAkB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACzF,IAAI,EAAE,OAAO,oBAAoB,MAAM,oBAAoB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7F,IAAI,EAAE,OAAO,uBAAuB,MAAM,mBAAmB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/F,IAAI,EAAE,OAAO,YAAY,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAClF,IAAI,EAAE,OAAO,aAAa,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC1E,IAAI,EAAE,OAAO,aAAa,MAAM,sBAAsB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,IAAI,EAAE,OAAO,cAAc,MAAM,sBAAsB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACzF,IAAI,EAAE,OAAO,kBAAkB,MAAM,mBAAmB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QAC5F;AAAA,QACA,GAAG;AAAA,UACD,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzF,GAAG,EAAE,OAAO,WAAW,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACxE,GAAG,EAAE,OAAO,cAAc,MAAM,WAAW,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC9E,GAAG,EAAE,OAAO,WAAW,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACxE,GAAG,EAAE,OAAO,yBAAyB,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QAC1F;AAAA,QACA,GAAG;AAAA,UACD,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzF,GAAG,EAAE,OAAO,WAAW,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACxE,GAAG,EAAE,OAAO,cAAc,MAAM,WAAW,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC9E,GAAG,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,IAAI,QAAQ,IAAI,OAAO,IAAI;AAAA,UAChF,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,KAAK,QAAQ,IAAI,OAAO,IAAI;AAAA,UAC3E,GAAG,EAAE,OAAO,gBAAgB,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC7E,GAAG,EAAE,OAAO,yBAAyB,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACxF,GAAG,EAAE,OAAO,qBAAqB,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QACrF;AAAA,QACA,GAAG;AAAA,UACD,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,GAAG,EAAE,OAAO,QAAQ,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9E,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC1E,GAAG,EAAE,OAAO,mBAAmB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAClF,GAAG,EAAE,OAAO,mBAAmB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAClF,GAAG,EAAE,OAAO,sBAAsB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACrF,GAAG,EAAE,OAAO,qBAAqB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACpF,GAAG,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACnF,GAAG,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,IAAI,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,KAAK;AAAA,UAC9E,IAAI,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClF,IAAI,EAAE,OAAO,kBAAkB,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,IAAI,EAAE,OAAO,mBAAmB,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,IAAI,EAAE,OAAO,MAAM,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACpE,IAAI,EAAE,OAAO,eAAe,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC5E,IAAI,EAAE,OAAO,eAAe,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC5E,IAAI,EAAE,OAAO,kBAAkB,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,IAAI,EAAE,OAAO,iBAAiB,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9E,IAAI,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,GAAG,QAAQ,MAAM,OAAO,KAAK;AAAA,UAChF,IAAI,EAAE,OAAO,WAAW,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxE,IAAI,EAAE,OAAO,8BAA8B,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7F,IAAI,EAAE,OAAO,8BAA8B,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7F,IAAI,EAAE,OAAO,iCAAiC,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChG,IAAI,EAAE,OAAO,gCAAgC,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/F,IAAI,EAAE,OAAO,qBAAqB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACnF,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjF,IAAI,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7E,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC5E,IAAI,EAAE,OAAO,uBAAuB,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QACtF;AAAA,QACA,GAAG;AAAA,UACD,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,kBAAkB,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,wBAAwB,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACtF,GAAG,EAAE,OAAO,8BAA8B,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC7F,GAAG,EAAE,OAAO,gBAAgB,MAAM,gBAAgB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACrF,GAAG,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QACzF;AAAA,QACA,GAAG;AAAA,UACD,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,GAAG,EAAE,OAAO,YAAY,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC5E,GAAG,EAAE,OAAO,QAAQ,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QACxE;AAAA,QACA,GAAG;AAAA,UACD,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,GAAG,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACjF,GAAG,EAAE,OAAO,QAAQ,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QACxE;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,GAAG,EAAE,OAAO,YAAY,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACzE,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,aAAa;AAAA,UAClF,GAAG,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,IAAI,QAAQ,GAAG,OAAO,aAAa;AAAA,QACvF;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACvE,GAAG,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC/E,GAAG,EAAE,OAAO,QAAQ,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QACzE;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzF,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACvE,GAAG,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC/E,GAAG,EAAE,OAAO,cAAc,MAAM,aAAa,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,YAAY,MAAM,aAAa,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC9E,GAAG,EAAE,OAAO,QAAQ,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACrE,GAAG,EAAE,OAAO,SAAS,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACxE,GAAG,EAAE,OAAO,UAAU,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACvE,GAAG,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC/E,GAAG,EAAE,OAAO,cAAc,MAAM,mBAAmB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACtF,GAAG,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACnF,IAAI,EAAE,OAAO,WAAW,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QAC3E;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,cAAc,MAAM,cAAc,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,cAAc,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,GAAG,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAC/F,GAAG,EAAE,OAAO,uBAAuB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAChG,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9E,GAAG,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACrF,GAAG,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACnF,GAAG,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UACrF,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACrF,IAAI,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACzF,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC/E,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC/E,IAAI,EAAE,OAAO,kBAAkB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACnF,IAAI,EAAE,OAAO,kBAAkB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACnF,IAAI,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAChF,IAAI,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAChF,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACjF,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACjF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,IAAI,EAAE,OAAO,yBAAyB,MAAM,SAAS,OAAO,IAAI,QAAQ,GAAG,OAAO,GAAG;AAAA,UACrF,IAAI,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAClF,IAAI,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC3E,IAAI,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7E,IAAI,EAAE,OAAO,WAAW,MAAM,mBAAmB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACnF,IAAI,EAAE,OAAO,WAAW,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UACrF,IAAI,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UACtF,IAAI,EAAE,OAAO,WAAW,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UACrF,IAAI,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UACtF,IAAI,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACxF,IAAI,EAAE,OAAO,yBAAyB,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,MAAM;AAAA,UACzF,IAAI,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,KAAK;AAAA,UACrF,IAAI,EAAE,OAAO,sBAAsB,MAAM,0BAA0B,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UACrG,IAAI,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,cAAc;AAAA,UAC5F,IAAI,EAAE,OAAO,uBAAuB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UACtF,IAAI,EAAE,OAAO,eAAe,MAAM,eAAe,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAC9F,IAAI,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC9E,IAAI,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACvF,IAAI,EAAE,OAAO,oBAAoB,MAAM,mBAAmB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC5F,IAAI,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC5F,IAAI,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC9E,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC/E,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC5E,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,mBAAmB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClF,IAAI,EAAE,OAAO,mBAAmB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClF,IAAI,EAAE,OAAO,qBAAqB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACrF,IAAI,EAAE,OAAO,0BAA0B,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC5F,IAAI,EAAE,OAAO,0BAA0B,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC5F,IAAI,EAAE,OAAO,0BAA0B,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC5F,IAAI,EAAE,OAAO,0BAA0B,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC5F,IAAI,EAAE,OAAO,kBAAkB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACnF,IAAI,EAAE,OAAO,mBAAmB,MAAM,gBAAgB,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACzF,IAAI,EAAE,OAAO,sBAAsB,MAAM,gBAAgB,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC5F,IAAI,EAAE,OAAO,wBAAwB,MAAM,gBAAgB,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC9F,IAAI,EAAE,OAAO,sBAAsB,MAAM,gBAAgB,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC5F,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjF,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UACrF,IAAI,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UACnF,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,MAAM;AAAA,UACnF,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,MAAM;AAAA,UACnF,IAAI,EAAE,OAAO,4BAA4B,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,KAAK;AAAA,UAC3F,IAAI,EAAE,OAAO,2BAA2B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,UAAU;AAAA,UAChG,IAAI,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,KAAK;AAAA,UAClF,IAAI,EAAE,OAAO,0BAA0B,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC1F,IAAI,EAAE,OAAO,0BAA0B,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC1F,IAAI,EAAE,OAAO,2BAA2B,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,OAAO,SAAS;AAAA,UAC9F,IAAI,EAAE,OAAO,6BAA6B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC/F,IAAI,EAAE,OAAO,6BAA6B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC/F,IAAI,EAAE,OAAO,6BAA6B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC/F,IAAI,EAAE,OAAO,oCAAoC,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClG,IAAI,EAAE,OAAO,oCAAoC,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClG,KAAK,EAAE,OAAO,oCAAoC,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,IAAI;AAAA,UACnG,KAAK,EAAE,OAAO,iCAAiC,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UACpG,KAAK,EAAE,OAAO,kCAAkC,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UACrG,KAAK,EAAE,OAAO,6BAA6B,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UAChG,KAAK,EAAE,OAAO,8BAA8B,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UACjG,KAAK,EAAE,OAAO,iCAAiC,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UACpG,KAAK,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9E,KAAK,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClF,KAAK,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,KAAK,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,KAAK;AAAA,UACjF,KAAK,EAAE,OAAO,iBAAiB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,KAAK;AAAA,UAClF,KAAK,EAAE,OAAO,wBAAwB,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UACrG,KAAK,EAAE,OAAO,6BAA6B,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC1G,KAAK,EAAE,OAAO,yBAAyB,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UACtG,KAAK,EAAE,OAAO,8BAA8B,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC3G,KAAK,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UAC3F,KAAK,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UAC3F,KAAK,EAAE,OAAO,wBAAwB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC1F,KAAK,EAAE,OAAO,wBAAwB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC1F,KAAK,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACzF,KAAK,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACzF,KAAK,EAAE,OAAO,yBAAyB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAC1F,KAAK,EAAE,OAAO,yBAAyB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAC1F,KAAK,EAAE,OAAO,yBAAyB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAC1F,KAAK,EAAE,OAAO,uBAAuB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UAC5F,KAAK,EAAE,OAAO,uBAAuB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UAC5F,KAAK,EAAE,OAAO,2BAA2B,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC9F,KAAK,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC5F,KAAK,EAAE,OAAO,2BAA2B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,UAAU;AAAA,UACjG,KAAK,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,KAAK;AAAA,UACnF,KAAK,EAAE,OAAO,0BAA0B,MAAM,SAAS,OAAO,IAAI,QAAQ,GAAG,OAAO,GAAG;AAAA,UACvF,KAAK,EAAE,OAAO,WAAW,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC9E,KAAK,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,KAAK,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,IAAI,QAAQ,GAAG,OAAO,GAAG;AAAA,QAC9E;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,cAAc,MAAM,cAAc,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,cAAc,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,GAAG,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAC/F,GAAG,EAAE,OAAO,uBAAuB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAChG,GAAG,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAC7F,GAAG,EAAE,OAAO,qBAAqB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAC9F,GAAG,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACrF,GAAG,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACnF,GAAG,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UACrF,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACrF,IAAI,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACzF,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC/E,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC/E,IAAI,EAAE,OAAO,kBAAkB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACnF,IAAI,EAAE,OAAO,kBAAkB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACnF,IAAI,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAChF,IAAI,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAChF,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACjF,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACjF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,IAAI,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,IAAI,EAAE,OAAO,eAAe,MAAM,eAAe,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACnF,IAAI,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACvE,IAAI,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7E,IAAI,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UACrF,IAAI,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACxF,IAAI,EAAE,OAAO,sBAAsB,MAAM,0BAA0B,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UACrG,IAAI,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACrF,IAAI,EAAE,OAAO,uBAAuB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UACtF,IAAI,EAAE,OAAO,eAAe,MAAM,eAAe,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACnF,IAAI,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,IAAI,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC5F,IAAI,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC9E,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC/E,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC5E,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,mBAAmB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClF,IAAI,EAAE,OAAO,mBAAmB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClF,IAAI,EAAE,OAAO,qBAAqB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACrF,IAAI,EAAE,OAAO,0BAA0B,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC5F,IAAI,EAAE,OAAO,0BAA0B,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC5F,IAAI,EAAE,OAAO,0BAA0B,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC5F,IAAI,EAAE,OAAO,0BAA0B,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC5F,IAAI,EAAE,OAAO,mBAAmB,MAAM,gBAAgB,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACzF,IAAI,EAAE,OAAO,sBAAsB,MAAM,gBAAgB,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC5F,IAAI,EAAE,OAAO,wBAAwB,MAAM,gBAAgB,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC9F,IAAI,EAAE,OAAO,sBAAsB,MAAM,gBAAgB,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC5F,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,kBAAkB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACnF,IAAI,EAAE,OAAO,kBAAkB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UACrF,IAAI,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UACnF,IAAI,EAAE,OAAO,4BAA4B,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,KAAK;AAAA,UAC3F,IAAI,EAAE,OAAO,2BAA2B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,UAAU;AAAA,UAChG,IAAI,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,KAAK;AAAA,UAClF,IAAI,EAAE,OAAO,0BAA0B,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC1F,IAAI,EAAE,OAAO,0BAA0B,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC1F,IAAI,EAAE,OAAO,2BAA2B,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,OAAO,SAAS;AAAA,UAC9F,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,IAAI,EAAE,OAAO,6BAA6B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC/F,IAAI,EAAE,OAAO,6BAA6B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC/F,IAAI,EAAE,OAAO,6BAA6B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC/F,IAAI,EAAE,OAAO,oCAAoC,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClG,IAAI,EAAE,OAAO,oCAAoC,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClG,IAAI,EAAE,OAAO,oCAAoC,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClG,IAAI,EAAE,OAAO,iCAAiC,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UACnG,IAAI,EAAE,OAAO,kCAAkC,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UACpG,IAAI,EAAE,OAAO,6BAA6B,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC/F,IAAI,EAAE,OAAO,8BAA8B,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UAChG,IAAI,EAAE,OAAO,iCAAiC,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UACnG,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,IAAI,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9E,KAAK,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,KAAK;AAAA,UACjF,KAAK,EAAE,OAAO,iBAAiB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,KAAK;AAAA,UAClF,KAAK,EAAE,OAAO,wBAAwB,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UACrG,KAAK,EAAE,OAAO,6BAA6B,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC1G,KAAK,EAAE,OAAO,yBAAyB,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UACtG,KAAK,EAAE,OAAO,8BAA8B,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC3G,KAAK,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UAC3F,KAAK,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UAC3F,KAAK,EAAE,OAAO,wBAAwB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC1F,KAAK,EAAE,OAAO,wBAAwB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC1F,KAAK,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACzF,KAAK,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACzF,KAAK,EAAE,OAAO,yBAAyB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAC1F,KAAK,EAAE,OAAO,yBAAyB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAC1F,KAAK,EAAE,OAAO,yBAAyB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAC1F,KAAK,EAAE,OAAO,uBAAuB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UAC5F,KAAK,EAAE,OAAO,uBAAuB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UAC5F,KAAK,EAAE,OAAO,2BAA2B,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC9F,KAAK,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC5F,KAAK,EAAE,OAAO,2BAA2B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,UAAU;AAAA,UACjG,KAAK,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,KAAK;AAAA,UACnF,KAAK,EAAE,OAAO,WAAW,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,QAChF;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,GAAG,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UACzF,GAAG,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAC1F,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UAC3E,GAAG,EAAE,OAAO,cAAc,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC9E,GAAG,EAAE,OAAO,WAAW,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC3E,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC1E,GAAG,EAAE,OAAO,SAAS,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC1E,GAAG,EAAE,OAAO,SAAS,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UAC5E,GAAG,EAAE,OAAO,6BAA6B,MAAM,QAAQ,OAAO,UAAU,QAAQ,GAAG,OAAO,QAAQ;AAAA,UAClG,GAAG,EAAE,OAAO,SAAS,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UACvE,IAAI,EAAE,OAAO,cAAc,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC5E,IAAI,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACpF,IAAI,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC9E,IAAI,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC9E,IAAI,EAAE,OAAO,YAAY,MAAM,SAAS,OAAO,IAAI,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC3E,IAAI,EAAE,OAAO,UAAU,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UAC9E,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UACrF,IAAI,EAAE,OAAO,gCAAgC,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACpG,IAAI,EAAE,OAAO,qBAAqB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACzF,IAAI,EAAE,OAAO,sBAAsB,MAAM,sBAAsB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjG,IAAI,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC/E,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACpF,IAAI,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC/E,IAAI,EAAE,OAAO,wBAAwB,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,KAAK;AAAA,UACvF,IAAI,EAAE,OAAO,uBAAuB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC5F,IAAI,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,KAAK;AAAA,UAC9E,IAAI,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACvF,IAAI,EAAE,OAAO,6BAA6B,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC/F,IAAI,EAAE,OAAO,8BAA8B,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UAChG,IAAI,EAAE,OAAO,yBAAyB,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC3F,IAAI,EAAE,OAAO,0BAA0B,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC5F,IAAI,EAAE,OAAO,6BAA6B,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC/F,IAAI,EAAE,OAAO,WAAW,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UACzE,IAAI,EAAE,OAAO,eAAe,MAAM,eAAe,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACnF,IAAI,EAAE,OAAO,QAAQ,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,IAAI,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC/E,IAAI,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC/E,IAAI,EAAE,OAAO,sBAAsB,MAAM,SAAS,OAAO,KAAK,QAAQ,GAAG,OAAO,MAAM;AAAA,UACtF,IAAI,EAAE,OAAO,yBAAyB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC3F,IAAI,EAAE,OAAO,6BAA6B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC/F,IAAI,EAAE,OAAO,6BAA6B,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC/F,IAAI,EAAE,OAAO,gCAAgC,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC9F,IAAI,EAAE,OAAO,oCAAoC,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClG,IAAI,EAAE,OAAO,oCAAoC,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClG,IAAI,EAAE,OAAO,gBAAgB,MAAM,gBAAgB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACrF,IAAI,EAAE,OAAO,YAAY,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,KAAK;AAAA,UAC5E,IAAI,EAAE,OAAO,aAAa,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,KAAK;AAAA,UAC7E,IAAI,EAAE,OAAO,oBAAoB,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UAChG,IAAI,EAAE,OAAO,yBAAyB,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UACrG,IAAI,EAAE,OAAO,qBAAqB,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UACjG,IAAI,EAAE,OAAO,0BAA0B,MAAM,SAAS,OAAO,aAAa,QAAQ,GAAG,OAAO,UAAU;AAAA,UACtG,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UACpF,IAAI,EAAE,OAAO,qBAAqB,MAAM,UAAU,OAAO,GAAG,QAAQ,MAAM,OAAO,IAAI;AAAA,UACrF,IAAI,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,GAAG,QAAQ,GAAG,OAAO,UAAU;AAAA,UACjF,IAAI,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACnF,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,UAAU;AAAA,UACvF,IAAI,EAAE,OAAO,uBAAuB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC5F,IAAI,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,IAAI,QAAQ,GAAG,OAAO,KAAK;AAAA,UAC9E,IAAI,EAAE,OAAO,qBAAqB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,KAAK;AAAA,UACtF,IAAI,EAAE,OAAO,SAAS,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACzE,IAAI,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACnF,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClF,IAAI,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACnF,IAAI,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC5E,IAAI,EAAE,OAAO,YAAY,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UACjF,IAAI,EAAE,OAAO,WAAW,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,QACnF;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,IAAI,OAAO,IAAI;AAAA,UAClF,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACvE,GAAG,EAAE,OAAO,cAAc,MAAM,cAAc,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACjF,GAAG,EAAE,OAAO,UAAU,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzE,GAAG,EAAE,OAAO,QAAQ,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACvE,GAAG,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC7E,GAAG,EAAE,OAAO,SAAS,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACxE,GAAG,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACjF,GAAG,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACjF,IAAI,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC9E,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACjF,IAAI,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC7E,IAAI,EAAE,OAAO,gBAAgB,MAAM,gBAAgB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QACxF;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,GAAG,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7E,GAAG,EAAE,OAAO,eAAe,MAAM,uBAAuB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC1F,GAAG,EAAE,OAAO,gBAAgB,MAAM,gBAAgB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACpF,GAAG,EAAE,OAAO,iBAAiB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,WAAW,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACzE,GAAG,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjF,GAAG,EAAE,OAAO,oBAAoB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjF,GAAG,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACrF,IAAI,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAClF,IAAI,EAAE,OAAO,kBAAkB,MAAM,kBAAkB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACzF,IAAI,EAAE,OAAO,mBAAmB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACzF,IAAI,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7E,IAAI,EAAE,OAAO,yBAAyB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,IAAI,EAAE,OAAO,qBAAqB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACrF,IAAI,EAAE,OAAO,eAAe,MAAM,eAAe,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACnF,IAAI,EAAE,OAAO,eAAe,MAAM,eAAe,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACnF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QACjF;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACvE,GAAG,EAAE,OAAO,gBAAgB,MAAM,wBAAwB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC7F,GAAG,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAClF,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QAC7E;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,GAAG,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,GAAG,EAAE,OAAO,iBAAiB,MAAM,qBAAqB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC1F,GAAG,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,eAAe,MAAM,mBAAmB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtF,GAAG,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9E,GAAG,EAAE,OAAO,2BAA2B,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACzF,GAAG,EAAE,OAAO,4BAA4B,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC1F,GAAG,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QAChF;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,GAAG,EAAE,OAAO,UAAU,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,KAAK;AAAA,UACzE,GAAG,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC7E,GAAG,EAAE,OAAO,qBAAqB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UACnF,GAAG,EAAE,OAAO,qBAAqB,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,KAAK;AAAA,UACpF,GAAG,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,KAAK;AAAA,UAC5E,GAAG,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,KAAK;AAAA,UAC9E,GAAG,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,GAAG,QAAQ,GAAG,OAAO,WAAW;AAAA,UAChF,GAAG,EAAE,OAAO,mBAAmB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,GAAG,QAAQ,GAAG,OAAO,WAAW;AAAA,UACjF,IAAI,EAAE,OAAO,iBAAiB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,UACpF,IAAI,EAAE,OAAO,uBAAuB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACrF,IAAI,EAAE,OAAO,sBAAsB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QAC9F;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACvE,GAAG,EAAE,OAAO,QAAQ,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACvE,GAAG,EAAE,OAAO,gBAAgB,MAAM,uBAAuB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QAC9F;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,GAAG,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9E,GAAG,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UACzF,GAAG,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAC1F,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC1E,GAAG,EAAE,OAAO,QAAQ,MAAM,gBAAgB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC5E,GAAG,EAAE,OAAO,QAAQ,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,YAAY,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QAC1E;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,GAAG,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC7E,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC3E,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC9E,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC/E,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC1E,GAAG,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC9E,GAAG,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QAC9E;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACnF,GAAG,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9E,GAAG,EAAE,OAAO,QAAQ,MAAM,YAAY,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxE,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,cAAc,MAAM,cAAc,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,mBAAmB,MAAM,mBAAmB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC1F,GAAG,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QAC9E;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzF,GAAG,EAAE,OAAO,WAAW,MAAM,UAAU,OAAO,KAAK,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzE,GAAG,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QAChF;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,GAAG,EAAE,OAAO,QAAQ,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACpE,GAAG,EAAE,OAAO,SAAS,MAAM,cAAc,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC3E,GAAG,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC3E,GAAG,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC3E,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,QAAQ;AAAA,QACjF;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzF,GAAG,EAAE,OAAO,QAAQ,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACrE,GAAG,EAAE,OAAO,YAAY,MAAM,YAAY,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC7E,GAAG,EAAE,OAAO,cAAc,MAAM,cAAc,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACjF,GAAG,EAAE,OAAO,SAAS,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QAC1E;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzF,GAAG,EAAE,OAAO,QAAQ,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACrE,GAAG,EAAE,OAAO,YAAY,MAAM,YAAY,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC7E,GAAG,EAAE,OAAO,aAAa,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UAC3E,GAAG,EAAE,OAAO,SAAS,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QAC1E;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACnF,GAAG,EAAE,OAAO,oBAAoB,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QACpF;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,GAAG,EAAE,OAAO,qBAAqB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACvF,GAAG,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACxF,GAAG,EAAE,OAAO,0BAA0B,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC5F,GAAG,EAAE,OAAO,qBAAqB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACvF,GAAG,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACxF,GAAG,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACxF,GAAG,EAAE,OAAO,cAAc,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC9E,GAAG,EAAE,OAAO,mBAAmB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAClF,GAAG,EAAE,OAAO,UAAU,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC3E,GAAG,EAAE,OAAO,sBAAsB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QAC7F;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7E,GAAG,EAAE,OAAO,gBAAgB,MAAM,gBAAgB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACpF,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UAC9E,GAAG,EAAE,OAAO,YAAY,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC5E,GAAG,EAAE,OAAO,UAAU,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UAC/E,GAAG,EAAE,OAAO,eAAe,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC/E,GAAG,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtF,GAAG,EAAE,OAAO,oBAAoB,MAAM,oBAAoB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC5F,GAAG,EAAE,OAAO,kBAAkB,MAAM,kBAAkB,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACzF,GAAG,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC7E,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UAChF,IAAI,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,IAAI,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAClF,IAAI,EAAE,OAAO,eAAe,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAChF,IAAI,EAAE,OAAO,mBAAmB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACpF,IAAI,EAAE,OAAO,mBAAmB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACpF,IAAI,EAAE,OAAO,iBAAiB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,IAAI,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACtF,IAAI,EAAE,OAAO,mCAAmC,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjG,IAAI,EAAE,OAAO,kBAAkB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,IAAI,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9E,IAAI,EAAE,OAAO,cAAc,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC/E,IAAI,EAAE,OAAO,aAAa,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC3E,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,IAAI,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC3E,IAAI,EAAE,OAAO,UAAU,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC3E,IAAI,EAAE,OAAO,WAAW,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC5E,IAAI,EAAE,OAAO,6BAA6B,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC5F,IAAI,EAAE,OAAO,4BAA4B,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QAC7F;AAAA,QACA,IAAI;AAAA,UACF,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,QAAQ,MAAM,gBAAgB,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,QAC/E;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,cAAc,MAAM,cAAc,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,cAAc,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,GAAG,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACrF,GAAG,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACnF,GAAG,EAAE,OAAO,iBAAiB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UACtF,GAAG,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,KAAM,QAAQ,GAAG,OAAO,MAAM;AAAA,UAC9E,GAAG,EAAE,OAAO,eAAe,MAAM,eAAe,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAC7F,GAAG,EAAE,OAAO,wBAAwB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAChG,IAAI,EAAE,OAAO,eAAe,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7E,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACrF,IAAI,EAAE,OAAO,eAAe,MAAM,eAAe,OAAO,MAAM,QAAQ,GAAG,OAAO,cAAc;AAAA,UAC9F,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/E,IAAI,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjF,IAAI,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UACrF,IAAI,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,QACrF;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,mBAAmB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjF,GAAG,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtF,GAAG,EAAE,OAAO,sBAAsB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UAC3F,GAAG,EAAE,OAAO,sBAAsB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACzF,GAAG,EAAE,OAAO,0BAA0B,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QAC1F;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,WAAW,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QACzE;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,wBAAwB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACrF,GAAG,EAAE,OAAO,2BAA2B,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,GAAG,EAAE,OAAO,oBAAoB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACjF,GAAG,EAAE,OAAO,cAAc,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA;AAAA;AAAA,UAG5E,GAAG,EAAE,OAAO,SAAS,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,UAAU,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACvE,GAAG,EAAE,OAAO,SAAS,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,UAKvE,IAAI,EAAE,OAAO,oBAAoB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QACpF;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,sBAAsB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACpF,GAAG,EAAE,OAAO,qBAAqB,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACvF,GAAG,EAAE,OAAO,aAAa,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC1E,GAAG,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7E,GAAG,EAAE,OAAO,cAAc,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QAC7E;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC7E,GAAG,EAAE,OAAO,kBAAkB,MAAM,cAAc,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACpF,GAAG,EAAE,OAAO,mBAAmB,MAAM,gBAAgB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACvF,GAAG,EAAE,OAAO,wBAAwB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACrF,GAAG,EAAE,OAAO,uBAAuB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QACtF;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzF,GAAG,EAAE,OAAO,QAAQ,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,SAAS,MAAM,qBAAqB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAClF,GAAG,EAAE,OAAO,UAAU,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC9E,GAAG,EAAE,OAAO,WAAW,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC/E,GAAG,EAAE,OAAO,cAAc,MAAM,cAAc,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,GAAG,EAAE,OAAO,iBAAiB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,SAAS;AAAA,UACtF,GAAG,EAAE,OAAO,YAAY,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UAChF,GAAG,EAAE,OAAO,gBAAgB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UACpF,GAAG,EAAE,OAAO,YAAY,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UAChF,GAAG,EAAE,OAAO,uBAAuB,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACnF,IAAI,EAAE,OAAO,gBAAgB,MAAM,WAAW,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAChF,IAAI,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9E,IAAI,EAAE,OAAO,2BAA2B,MAAM,QAAQ,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,IAAI,EAAE,OAAO,wBAAwB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACvF,IAAI,EAAE,OAAO,kBAAkB,MAAM,uBAAuB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9F,IAAI,EAAE,OAAO,wBAAwB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACtF,IAAI,EAAE,OAAO,qBAAqB,MAAM,qBAAqB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC/F,IAAI,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACpF,IAAI,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACpF,IAAI,EAAE,OAAO,0BAA0B,MAAM,eAAe,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9F,IAAI,EAAE,OAAO,qBAAqB,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,QACrF;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzF,GAAG,EAAE,OAAO,kBAAkB,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,UAAU;AAAA,UACvF,GAAG,EAAE,OAAO,kBAAkB,MAAM,SAAS,OAAO,MAAM,QAAQ,IAAI,OAAO,UAAU;AAAA,UACvF,GAAG,EAAE,OAAO,UAAU,MAAM,mBAAmB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QACpF;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,iBAAiB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACzF,GAAG,EAAE,OAAO,SAAS,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,IAAI;AAAA,UACzE,GAAG,EAAE,OAAO,QAAQ,MAAM,UAAU,OAAO,MAAM,QAAQ,IAAI,OAAO,IAAI;AAAA,UACxE,GAAG,EAAE,OAAO,WAAW,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACxE,GAAG,EAAE,OAAO,cAAc,MAAM,mBAAmB,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACtF,GAAG,EAAE,OAAO,SAAS,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,UACtE,GAAG,EAAE,OAAO,cAAc,MAAM,aAAa,OAAO,MAAM,QAAQ,IAAI,OAAO,GAAG;AAAA,QAClF;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,GAAG,EAAE,OAAO,kBAAkB,MAAM,YAAY,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAClF,GAAG,EAAE,OAAO,mBAAmB,MAAM,iBAAiB,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxF,GAAG,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC5E,GAAG,EAAE,OAAO,aAAa,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UAC5E,GAAG,EAAE,OAAO,oBAAoB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACnF,GAAG,EAAE,OAAO,aAAa,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UACjF,GAAG,EAAE,OAAO,WAAW,MAAM,SAAS,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC/E,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UACjF,GAAG,EAAE,OAAO,UAAU,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,UAC/E,GAAG,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACjF,IAAI,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UAC9E,IAAI,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,QACjF;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,KAAK,EAAE,OAAO,aAAa,MAAM,aAAa,OAAO,MAAM,QAAQ,GAAG,OAAO,IAAI;AAAA,UACjF,GAAG,EAAE,OAAO,UAAU,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxE,GAAG,EAAE,OAAO,YAAY,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,QAChF;AAAA,QACA,KAAK;AAAA,UACH,MAAM;AAAA,UACN,GAAG,EAAE,OAAO,UAAU,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,GAAG;AAAA,UACxE,GAAG,EAAE,OAAO,kBAAkB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UACpF,GAAG,EAAE,OAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,UAClF,GAAG,EAAE,OAAO,eAAe,MAAM,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAAA,QACnF;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL,MAAM;AAAA,UACJ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,UACL,KAAK;AAAA,QACP;AAAA,QACA,UAAU;AAAA,UACR,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA,UAAU;AAAA,UACR,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,YAAY;AAAA,UACV,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,YAAY;AAAA,UACV,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,WAAW;AAAA,UACT,GAAG;AAAA,UACH,WAAW;AAAA,QACb;AAAA,QACA,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,WAAW;AAAA,QACb;AAAA,QACA,eAAe;AAAA,UACb,GAAG;AAAA,UACH,MAAM;AAAA,UACN,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA,QAAQ;AAAA,UACN,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,UAAU;AAAA,UACR,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,QACN;AAAA,QACA,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,QACP;AAAA,QACA,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,eAAe;AAAA,UACb,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,eAAe;AAAA,UACb,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,kBAAkB;AAAA,UAChB,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,QACN;AAAA,QACA,UAAU;AAAA,UACR,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,OAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,cAAc;AAAA,UACZ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,cAAc;AAAA,UACZ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,cAAc;AAAA,UACZ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,cAAc;AAAA,UACZ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,cAAc;AAAA,UACZ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,cAAc;AAAA,UACZ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,cAAc;AAAA,UACZ,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,KAAK;AAAA,QACP;AAAA,QACA,aAAa;AAAA,UACX,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,UAAU;AAAA,UACR,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,aAAa;AAAA,UACX,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,gBAAgB;AAAA,UACd,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,mBAAmB;AAAA,UACjB,GAAG;AAAA,QACL;AAAA,QACA,OAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,QACN;AAAA,QACA,YAAY;AAAA,UACV,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,eAAe;AAAA,UACb,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,yBAAyB;AAAA,UACvB,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,MAAM;AAAA,UACJ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,YAAY;AAAA,UACV,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,gBAAgB;AAAA,UACd,GAAG;AAAA,UACH,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,QACP;AAAA,QACA,cAAc;AAAA,UACZ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,eAAe;AAAA,UACb,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,mBAAmB;AAAA,UACjB,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,QACN;AAAA,QACA,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,QACN;AAAA,QACA,MAAM;AAAA,UACJ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,aAAa;AAAA,UACX,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,UAAU;AAAA,UACR,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,cAAc;AAAA,UACZ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,QACN;AAAA,QACA,cAAc;AAAA,UACZ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA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A,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAA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CpB,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,U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J,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,QACN;AAAA,QACA,qBAAqB;AAAA,UACnB,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,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",
  "names": ["len", "i", "len2", "i", "byteLength", "dataItem", "mapDataIntoLap", "mapDataIntoSession", "FitParser"]
}
